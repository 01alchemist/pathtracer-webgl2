{"version":3,"sources":["webpack:///./src/app/renderer/utils/fbo.ts","webpack:///./src/app/renderer/utils/pingpong-fbo.ts","webpack:///./src/app/renderer/settings/settings.service.ts","webpack:///./src/app/renderer/path-tracer/shaders/path-tracer.vert","webpack:///./src/app/renderer/utils/render-context.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/bottom-bar/bottom-bar.component.ts","webpack:///./src/app/components/loading-dialog/loading-dialog.component.ts","webpack:///./src/app/components/settings/fractal-settings/fractal-settings.component.ts","webpack:///./src/app/renderer/path-tracer/models/materials/material.ts","webpack:///./src/app/components/settings/object-settings/object-settings.component.ts","webpack:///./src/app/components/settings/render-settings/render-settings.component.ts","webpack:///./src/app/components/settings/setting-attribute/setting-attribute.component.ts","webpack:///./src/app/components/settings/settings-container/settings-container.component.ts","webpack:///./src/app/components/top-bar/top-bar.component.ts","webpack:///./src/app/renderer/bloom-program/bloom-program.ts","webpack:///./src/app/renderer/composition-program/composition-program.ts","webpack:///./src/app/renderer/path-tracer/models/bvh/bounding-box.ts","webpack:///./src/app/renderer/path-tracer/models/bvh/bvh-node.ts","webpack:///./src/app/renderer/path-tracer/models/bvh/bvh.ts","webpack:///./src/app/renderer/settings/setting.ts","webpack:///./src/app/renderer/path-tracer/models/default-scenes/default-scenes.ts","webpack:///./src/app/renderer/path-tracer/models/primitives/intersectable.ts","webpack:///./src/app/renderer/path-tracer/models/primitives/object3d.ts","webpack:///./src/app/renderer/path-tracer/models/primitives/triangle.ts","webpack:///./src/app/renderer/path-tracer/models/ray.ts","webpack:///./src/app/renderer/path-tracer/models/scene-builder.ts","webpack:///./src/app/renderer/path-tracer/models/scene.ts","webpack:///./src/app/renderer/path-tracer/ray-marcher.ts","webpack:///./src/app/renderer/path-tracer/ray-tracer.ts","webpack:///./src/app/renderer/path-tracer/utils/obj-loader.ts","webpack:///./src/app/renderer/render-view/render-view.ts","webpack:///./src/app/renderer/settings/fractal-settings/menger-sponge.ts","webpack:///./src/app/renderer/settings/light-settings.ts","webpack:///./src/app/renderer/settings/material-settings.ts","webpack:///./src/app/renderer/settings/post-effects-settings/bloom-settings.ts","webpack:///./src/app/renderer/settings/render-effects-settings.ts","webpack:///./src/app/renderer/settings/render-settings.ts","webpack:///./src/app/renderer/utils/createProgram.ts","webpack:///./src/app/renderer/utils/data-texture.ts","webpack:///./src/app/renderer/utils/rotation-matrix-vector.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/bottom-bar/bottom-bar.css","webpack:///./src/app/components/loading-dialog/loading-dialog.css","webpack:///./src/app/components/settings/fractal-settings/fractal-settings.css","webpack:///./src/app/components/settings/object-settings/object-settings.css","webpack:///./src/app/components/settings/render-settings/render-settings.css","webpack:///./src/app/components/settings/setting-attribute/setting-attribute.css","webpack:///./src/app/components/settings/settings-container/settings-container.css","webpack:///./src/app/components/top-bar/top-bar.css","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/renderer/render-view/shaders/render-view.frag","webpack:///./src/app/renderer/render-view/shaders/render-view.vert","webpack:///./src/app/renderer/bloom-program/shaders/bloom-horizontal.frag","webpack:///./src/app/renderer/bloom-program/shaders/bloom-vertical.frag","webpack:///./src/app/renderer/bloom-program/shaders/bloom.vert","webpack:///./src/app/renderer/bloom-program/shaders/threshold.frag","webpack:///./src/app/renderer/bloom-program/shaders/threshold.vert","webpack:///./src/app/renderer/composition-program/shaders/composition.frag","webpack:///./src/app/renderer/composition-program/shaders/composition.vert","webpack:///./src/app/app.component.html","webpack:///./src/app/components/bottom-bar/bottom-bar.html","webpack:///./src/app/components/loading-dialog/loading-dialog.html","webpack:///./src/app/components/settings/fractal-settings/fractal-settings.html","webpack:///./src/app/components/settings/object-settings/object-settings.html","webpack:///./src/app/components/settings/render-settings/render-settings.html","webpack:///./src/app/components/settings/setting-attribute/setting-attribute.html","webpack:///./src/app/components/settings/settings-container/settings-container.html","webpack:///./src/app/components/top-bar/top-bar.html","webpack:///./src/app/renderer/path-tracer/shaders/ray-marcher.glsl","webpack:///./src/app/renderer/path-tracer/shaders/ray-tracer.glsl","webpack:///./src/app/renderer/render.service.ts","webpack:///./src/app/renderer/scene.service.ts","webpack:///./src/app/renderer/utils/render-target.ts","webpack:///./src/app/renderer/utils/shader.ts","webpack:///./src/app/renderer/camera-navigator.ts","webpack:///./src/app/renderer/path-tracer/models/camera.ts","webpack:///./src/app/renderer/path-tracer/models/materials/diffuse-material.ts","webpack:///./src/app/renderer/path-tracer/models/materials/emission-material.ts","webpack:///./src/app/renderer/path-tracer/models/materials/glossy-material.ts","webpack:///./src/app/renderer/path-tracer/models/materials/transmission-material.ts"],"names":[],"mappings":"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G;;AAEnsB;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,wCAAyC,uBAAuB,kBAAkB,gBAAgB,uBAAuB,iBAAiB,gCAAgC,qBAAqB,GAAG,oBAAoB,uBAAuB,aAAa,eAAe,gBAAgB,oBAAoB,GAAG;;AAEhT;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,mCAAoC,uBAAuB,gBAAgB,WAAW,iBAAiB,gCAAgC,4BAA4B,GAAG,aAAa,oBAAoB,qBAAqB,6CAA6C,sBAAsB,gBAAgB,gBAAgB,uBAAuB,GAAG;;AAEzV;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"main.bundle.js","sourcesContent":["import Shader from \"./shader\";\nimport RenderTarget from \"./render-target\";\nimport {gl} from \"./render-context\";\n\nexport default class FBO extends RenderTarget {\n  private _texture: WebGLTexture;\n  private _textureData: Uint8Array;\n  private _writeToTexture: boolean = false;\n  private _framebuffer: WebGLFramebuffer;\n\n  constructor(shader: Shader, sizeX: number, sizeY: number) {\n    super(shader, sizeX, sizeY);\n    this.resetTexture();\n    this._framebuffer = gl.createFramebuffer();\n  }\n\n  public render() {\n    gl.viewport(0, 0, this.sizeX * this.scaleFactor, this.sizeY * this.scaleFactor)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.useProgram(this._program);\n\n    gl.enableVertexAttribArray(this._positionAttribLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._positionBuffer);\n    gl.vertexAttribPointer(this._positionAttribLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.enableVertexAttribArray(this._texCoordAttribLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer);\n    gl.vertexAttribPointer(this._texCoordAttribLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture, 0);\n\n    this._shader.update();\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    if (this._writeToTexture) {\n      gl.readPixels(0, 0, this.sizeX, this.sizeY, gl.RGBA, gl.UNSIGNED_BYTE, this._textureData);\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  public resetTexture() {\n    this._texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.sizeX, this.sizeY, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    this._textureData = new Uint8Array(this.sizeX * this.sizeY * 4);\n  }\n\n  public resize(sizeX: number, sizeY: number) {\n    this.setWindowSize(sizeX, sizeY)\n    this.resetTexture()\n  }\n\n  public enableWriteToTexture() {\n    this._writeToTexture = true\n  }\n\n  get texture(): WebGLTexture { return this._texture; }\n  get textureData(): Uint8Array { return this._textureData }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/fbo.ts","import Shader from \"./shader\";\nimport RenderTarget from \"./render-target\";\nimport {gl} from \"./render-context\";\n\nexport default class PingPongFBO extends RenderTarget {\n  private _textures: WebGLTexture[];\n  private _textureData: Uint8Array;\n  private _currentTexture: number;\n  private _framebuffer: WebGLFramebuffer;\n\n  constructor(shader: Shader, sizeX: number, sizeY: number) {\n    super(shader, sizeX, sizeY);\n    this.resetTextures();\n    this._framebuffer = gl.createFramebuffer();\n  }\n\n  public render() {\n    gl.viewport(0, 0, this.sizeX * this.scaleFactor, this.sizeY * this.scaleFactor)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.useProgram(this._program);\n\n    gl.enableVertexAttribArray(this._positionAttribLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._positionBuffer);\n    gl.vertexAttribPointer(this._positionAttribLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.enableVertexAttribArray(this._texCoordAttribLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer);\n    gl.vertexAttribPointer(this._texCoordAttribLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._textures[this._currentTexture], 0);\n\n    this._shader.update();\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6)\n\n    //gl.readPixels(0, 0, this.sizeX, this.sizeY, gl.RGBA, gl.UNSIGNED_BYTE, this._textureData);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this._currentTexture = 1 - this._currentTexture;\n  }\n\n  public resetTextures() {\n    this._textures = [];\n\n    this._textures.push(gl.createTexture());\n    gl.bindTexture(gl.TEXTURE_2D, this._textures[0]);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.sizeX * this.scaleFactor, this.sizeY * this.scaleFactor, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    this._textures.push(gl.createTexture());\n    gl.bindTexture(gl.TEXTURE_2D, this._textures[1]);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.sizeX * this.scaleFactor, this.sizeY * this.scaleFactor, 0, gl.RGBA, gl.FLOAT, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    this._currentTexture = 0;\n\n    this._textureData = new Uint8Array(this.sizeX * this.sizeY * 4);\n  }\n\n  get texture(): WebGLTexture { return this._textures[1 - this._currentTexture] }\n  get lastTexture(): WebGLTexture { return this._textures[1 - this._currentTexture] }\n  get textureData(): Uint8Array { return this._textureData }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/pingpong-fbo.ts","import {Injectable} from '@angular/core'\nimport {BehaviorSubject, Observable} from 'rxjs'\nimport {MengerSponge} from './fractal-settings/menger-sponge'\nimport LightSettings from './light-settings'\nimport Shader from '../utils/shader'\nimport {RenderEffectsSetting} from \"./render-effects-settings\";\nimport MaterialSettings from \"./material-settings\";\nimport {BloomSettings} from \"./post-effects-settings/bloom-settings\";\nimport {Object3d} from \"../path-tracer/models/primitives/object3d\";\nimport RenderSettings from \"./render-settings\";\n\n@Injectable()\nexport class SettingsService {\n  refreshScreen: boolean = false;\n\n  // Renderer attributes\n  isLoadingSub: BehaviorSubject<boolean> = new BehaviorSubject(true)\n  renderTypeSub: BehaviorSubject<number> = new BehaviorSubject(0)\n  shouldRenderSub: BehaviorSubject<boolean> = new BehaviorSubject(true)\n  zoomSub: BehaviorSubject<number> = new BehaviorSubject(1.5)\n\n  // Uniform attributes\n  renderSettings = new RenderSettings()\n  lightSettings = new LightSettings()\n  renderEffectSettings = new RenderEffectsSetting()\n  bloomSettings = new BloomSettings()\n  materialSettings = new MaterialSettings()\n\n  // Fractals\n  fractalTypeSub: BehaviorSubject<number> = new BehaviorSubject(0)\n  mengerSponge = new MengerSponge()\n\n  // Fractal attributes\n  private _powerObservable: BehaviorSubject<number>\n  private _detailLevelObservable: BehaviorSubject<number>\n  private _maxIterationsObservable: BehaviorSubject<number>\n\n  // Material attributes\n  materialTypeSub: BehaviorSubject<number> = new BehaviorSubject(5)\n  materialColorSub: BehaviorSubject<GLM.IArray> = new BehaviorSubject(vec3.fromValues(1.0, 1.0, 1.0))\n\n  // Ray tracing attributes\n  selectedObjectSub: BehaviorSubject<Object3d> = new BehaviorSubject(null)\n\n  constructor() {\n    this._powerObservable = new BehaviorSubject(10.0)\n    this._detailLevelObservable = new BehaviorSubject(1000)\n    this._maxIterationsObservable = new BehaviorSubject(300)\n  }\n\n  public connectShader(shader: Shader) {\n    this.renderSettings.connectShader(shader)\n    this.lightSettings.connectShader(shader)\n    this.renderEffectSettings.connectShader(shader)\n    this.materialSettings.connectShader(shader)\n    this.bloomSettings.connectShader(shader)\n  }\n\n\n  public scaleDown() {\n    // this.refreshScreen = true\n    // this.scaledDown = true\n    //\n    // clearTimeout(this.scaleDownTimer)\n    // this.scaleDownTimer = setTimeout(() => {\n    //   this.scaledDown = false\n    //   this.refreshScreen = true\n    //   this.scaleDownTimer = null\n    // }, 500)\n  }\n\n  get powerObservable(): Observable<number> { return this._powerObservable.asObservable(); }\n  get detailLevelObservable(): Observable<number> { return this._detailLevelObservable.asObservable(); }\n  get maxIterationsObservable(): Observable<number> { return this._maxIterationsObservable.asObservable(); }\n\n  set zoom(val: number) { this.zoomSub.next(val) }\n  set power(val: number) { this._powerObservable.next(val) }\n  set detailLevel(val: number) { this._detailLevelObservable.next(val) }\n  set maxIterations(val: number) { this._maxIterationsObservable.next(val) }\n  set materialType(val: number) { this.materialTypeSub.next(val) }\n  set materialColor(val: GLM.IArray) { this.materialColorSub.next(val) }\n  set shouldRender(val: boolean) { this.shouldRenderSub.next(val) }\n  //set globalLightPower(val: number) { this.globalLightPowerSub.next(val) }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/settings.service.ts","module.exports = \"#version 300 es\\n#define GLSLIFY 1\\n\\nin vec2 a_texCoord;\\nin vec4 a_position;\\n\\nout vec2 v_texCoord;\\n\\nvoid main() {\\n  gl_Position = a_position;\\n\\n  v_texCoord = a_texCoord;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/path-tracer/shaders/path-tracer.vert\n// module id = 228\n// module chunks = 1","import {ElementRef} from \"@angular/core\";\n\ndeclare const saveAs\n\nexport let gl: WebGL2RenderingContext;\n\nexport function initContext(canvas: any) {\n  gl = canvas.nativeElement.getContext('webgl2', { antialias: false, preserveDrawingBuffer: true })\n\n  gl.getExtension('EXT_color_buffer_float')\n  gl.getExtension('OES_texture_float_linear')\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/render-context.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 277;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 277\n// module chunks = 1","///<reference path=\"./typings/webgl2.d.ts\" />\n///<reference path=\"../node_modules/@types/node/index.d.ts\" />\n///<reference path=\"./typings/gl-matrix.d.ts\" />\n///<reference path=\"./typings/jquery.d.ts\" />\n\ndeclare const Stats;\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Component, AfterViewInit, ViewChild, ElementRef, AfterViewChecked, AfterContentInit} from '@angular/core';\nimport {RenderService} from \"./renderer/render.service\";\nimport {SettingsService} from \"./renderer/settings/settings.service\";\nimport {SceneService} from \"./renderer/scene.service\";\nimport {MdDialog} from \"@angular/material\";\nimport {LoadingDialogComponent} from \"./components/loading-dialog/loading-dialog.component\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit, AfterContentInit {\n  @ViewChild('renderCanvas') renderCanvas: ElementRef\n\n  constructor(\n    public renderService: RenderService,\n    public settingsService: SettingsService,\n    public sceneService: SceneService,\n    public dialog: MdDialog\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.renderCanvas.nativeElement.oncontextmenu = (e) => e.preventDefault()\n    this.renderService.init(this.renderCanvas)\n  }\n\n  ngAfterContentInit(): void {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import \"hammerjs\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\nimport {MaterialModule, MdDialogModule} from \"@angular/material\";\nimport {AppComponent} from \"./app.component\";\nimport {RenderService} from \"./renderer/render.service\";\nimport {BottomBarComponent} from \"./components/bottom-bar/bottom-bar.component\";\nimport {SettingsService} from \"./renderer/settings/settings.service\";\nimport {TopBarComponent} from \"./components/top-bar/top-bar.component\";\nimport {RenderSettingsComponent} from \"./components/settings/render-settings/render-settings.component\";\nimport {SettingAttributeComponent} from \"./components/settings/setting-attribute/setting-attribute.component\";\nimport {SettingsContainerComponent} from \"./components/settings/settings-container/settings-container.component\";\nimport {FractalSettingsComponent} from \"./components/settings/fractal-settings/fractal-settings.component\";\nimport {SceneService} from \"./renderer/scene.service\";\nimport {ObjectSettingsComponent} from \"./components/settings/object-settings/object-settings.component\";\nimport {LoadingDialogComponent} from \"./components/loading-dialog/loading-dialog.component\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    FractalSettingsComponent,\n    RenderSettingsComponent,\n    BottomBarComponent,\n    SettingAttributeComponent,\n    SettingsContainerComponent,\n    ObjectSettingsComponent,\n    LoadingDialogComponent\n  ],\n  entryComponents: [\n    LoadingDialogComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule\n  ],\n  providers: [\n    RenderService,\n    SettingsService,\n    SceneService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, ViewChild} from \"@angular/core\";\nimport {SettingsService} from \"../../renderer/settings/settings.service\";\n\n@Component({\n  selector: 'bottom-bar',\n  templateUrl: './bottom-bar.html',\n  styleUrls: ['./bottom-bar.css']\n})\nexport class BottomBarComponent {\n  private _resolutionWidth: number\n  private _resolutionHeight: number\n\n  constructor(public settingsService: SettingsService) {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/bottom-bar/bottom-bar.component.ts","import {Component} from \"@angular/core\";\nimport {MdDialogRef} from \"@angular/material\";\n@Component({\n  selector: 'loading-dialog',\n  templateUrl: './loading-dialog.html',\n  styleUrls: ['loading-dialog.css']\n})\nexport class LoadingDialogComponent {\n  constructor(public dialogRef: MdDialogRef<LoadingDialogComponent>) {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/loading-dialog/loading-dialog.component.ts","import {Component} from \"@angular/core\";\nimport {SettingsService} from \"../../../renderer/settings/settings.service\";\nconst hexRgb = require('hex-rgb');\n\n@Component({\n  selector: 'fractal-settings',\n  templateUrl: 'fractal-settings.html',\n  styleUrls: ['fractal-settings.css']\n})\nexport class FractalSettingsComponent {\n  rayMarchingMode: boolean = false\n  materials = [{ id: 0, name: 'Diffuse' }, { id: 5, name: 'Glossy' },  { id: 1, name: 'Specular' }, { id: 2, name: 'Transmission' }]\n  selelectedMaterial: number = 0\n  materialColor: string = '#ffffff'\n\n  fractals = [{ id: 0, name: 'Mandelbulb' }, { id: 1, name: 'Mengersponge' }]\n\n  constructor(public settingsService: SettingsService) {\n    this.settingsService.renderTypeSub.asObservable().subscribe((type: number) => {\n      this.rayMarchingMode = type == 1.0\n    })\n  }\n\n  powerUpdate(event) {\n    this.settingsService.power = event.value\n  }\n\n  detailLevelUpdate(event) {\n    this.settingsService.detailLevel = event.value\n  }\n\n  maxIterationsUpdate(event) {\n    this.settingsService.maxIterations = event.value\n  }\n\n  materialTypeChange(event) {\n    this.settingsService.materialType = this.selelectedMaterial\n  }\n\n  materialColorChanged(event) {\n    let color = hexRgb(event);\n    this.settingsService.materialColor = vec3.fromValues(color[0] / 255, color[1] / 255, color[2] / 255)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/fractal-settings/fractal-settings.component.ts","export const MATERIAL_TYPES = {\n  diffuse: 0,\n  specular: 1,\n  emission: 2,\n  transmission: 3,\n  glossy: 5\n};\n\nexport default class Material {\n  private _material_type: number;\n  private _color: GLM.IArray;\n  private _emission_rate: number;\n  private _material_index: number;\n\n  constructor(color: GLM.IArray, material_type: number, emission_rate?: number) {\n    this._material_type = material_type;\n    this._color = color;\n\n    if (emission_rate != null)\n      this._emission_rate = emission_rate;\n    else\n      this._emission_rate = 0;\n  }\n\n  public toJSON() {\n    return {\n      material_type: this._material_type,\n      color: [this._color[0], this._color[1], this._color[2]],\n      emission_rate: this._emission_rate\n    }\n  }\n\n  get material_type() { return this._material_type }\n  get color() { return this._color }\n  get emission_rate() { return this._emission_rate }\n  set emission_rate(rate) { this._emission_rate = rate }\n  get material_index(): number { return this._material_index }\n  set material_index(value: number) { this._material_index = value }\n  set material_type(value: number) { this._material_type = value }\n  set color(value: GLM.IArray) { this._color = value }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/materials/material.ts","import {Component} from \"@angular/core\";\nimport {SettingsService} from \"../../../renderer/settings/settings.service\";\nimport {Object3d} from \"../../../renderer/path-tracer/models/primitives/object3d\";\nimport {RenderService} from \"../../../renderer/render.service\";\nimport {MATERIAL_TYPES, default as Material} from \"../../../renderer/path-tracer/models/materials/material\";\nimport {DiffuseMaterial} from \"../../../renderer/path-tracer/models/materials/diffuse-material\";\nimport {GlossyMaterial} from \"../../../renderer/path-tracer/models/materials/glossy-material\";\nimport {EmissionMaterial} from \"../../../renderer/path-tracer/models/materials/emission-material\";\nimport TransmissionMaterial from \"../../../renderer/path-tracer/models/materials/transmission-material\";\nconst hexRgb = require('hex-rgb');\n\n@Component({\n  selector: 'object-settings',\n  templateUrl: 'object-settings.html',\n  styleUrls: ['object-settings.css']\n})\nexport class ObjectSettingsComponent {\n  rayTracingMode: boolean = false\n\n  selectedObject: Object3d = null\n  position: number[] = [0,0,0]\n  scale: number[] = [0,0,0]\n  rotation: number[] = [0,0,0]\n\n  // Material attributes\n  selectedMaterial: Material\n  materialType: number\n  materialColor: number[] = [0,0,0]\n  materialExtraParameter1: number\n  materialExtraParameter2: number\n  materialEmission: number\n\n\n  materials = [{ id: 0, name: 'Diffuse' }, { id: 2, name: 'Emission' }, { id: 5, name: 'Glossy' },  { id: 1, name: 'Specular' }, { id: 3, name: 'Transmission' }]\n  selelectedMaterial: number = 0\n  defaultScenes = [{ id: 1, name: 'HDR teapot and bunny' }, { id: 2, name: 'HDR stanford dragon'}, { id: 3, name: 'Room teapot and bunny'}, { id: 4, name: 'Room stanford dragon'} ]\n  sceneId: number = 3\n  //materialColor: string = '#ffffff'\n\n  constructor(\n    public settingsService: SettingsService,\n    public renderService: RenderService\n  ) {\n    this.settingsService.renderTypeSub.asObservable().subscribe((type: number) => this.rayTracingMode = type == 0.0)\n    this.settingsService.selectedObjectSub.asObservable().subscribe((object: Object3d) => {\n      this.selectedObject = object\n      if (this.selectedObject != null) {\n        this.selectedMaterial = object.material\n        console.log('selected object', object)\n        console.log(this.selectedObject.material.material_type)\n\n        this.position = [object.position[0], object.position[1], object.position[2]]\n        this.scale = [object.scale[0], object.scale[1], object.scale[2]]\n        this.rotation = [object.rotation[0], object.rotation[1], object.rotation[2]]\n\n        this.materialType = object.material.material_type\n        this.materialEmission = this.selectedMaterial.emission_rate\n        this.materialColor = [\n          Math.round(255 * object.material.color[0]),\n          Math.round(255 * object.material.color[1]),\n          Math.round(255 * object.material.color[2])\n        ]\n\n        if (this.materialType == MATERIAL_TYPES.diffuse) {\n          let material = <DiffuseMaterial> this.selectedObject.material;\n          this.materialExtraParameter1 = material.albedo;\n          this.materialExtraParameter2 = material.roughness;\n        }\n        else if (this.materialType == MATERIAL_TYPES.emission) {\n\n        }\n        else if (this.materialType == MATERIAL_TYPES.glossy) {\n          let material = <GlossyMaterial> this.selectedObject.material;\n          this.materialExtraParameter1 = material.shininess;\n        }\n        else if (this.materialType == MATERIAL_TYPES.transmission) {\n        }\n        else if (this.materialType == MATERIAL_TYPES.specular) {\n        }\n      }\n    })\n  }\n\n  scaleUpdate() {\n    let objectsTexture = this.renderService.rayTracer.objectsTexture\n\n    objectsTexture.textureData[this.selectedObject.textureIndex * 15 + 9] = this.scale[0]\n    objectsTexture.textureData[this.selectedObject.textureIndex * 15 + 10] = this.scale[1]\n    objectsTexture.textureData[this.selectedObject.textureIndex * 15 + 11] = this.scale[2]\n    objectsTexture.updateTexture()\n\n    this.renderService.rayTracer.refreshScreen = true\n  }\n\n  rotationUpdate() {\n\n  }\n\n  positionUpdate() {\n    let objectsTexture = this.renderService.rayTracer.objectsTexture\n\n    objectsTexture.textureData[this.selectedObject.textureIndex * 15 + 6] = this.position[0]\n    objectsTexture.textureData[this.selectedObject.textureIndex * 15 + 7] = this.position[1]\n    objectsTexture.textureData[this.selectedObject.textureIndex * 15 + 8] = this.position[2]\n    objectsTexture.updateTexture()\n\n    this.renderService.rayTracer.refreshScreen = true\n  }\n\n  materialUpdate() {\n    let materialTexture = this.renderService.rayTracer.materialTexture\n\n    if (this.materialType != this.selectedMaterial.material_type) {\n      let materialIndex = this.selectedMaterial.material_index\n      switch (this.materialType) {\n        case MATERIAL_TYPES.diffuse:\n          this.selectedObject.material = new DiffuseMaterial([this.materialColor[0] / 255, this.materialColor[1] / 255, this.materialColor[2] / 255])\n          break\n        case MATERIAL_TYPES.emission:\n          this.selectedObject.material = new EmissionMaterial([this.materialColor[0] / 255, this.materialColor[1] / 255, this.materialColor[2] / 255])\n          break\n        case MATERIAL_TYPES.glossy:\n          this.selectedObject.material = new GlossyMaterial([this.materialColor[0] / 255, this.materialColor[1] / 255, this.materialColor[2] / 255])\n          break\n        case MATERIAL_TYPES.specular:\n          this.selectedObject.material = new DiffuseMaterial([this.materialColor[0] / 255, this.materialColor[1] / 255, this.materialColor[2] / 255])\n          break\n        case MATERIAL_TYPES.transmission:\n          this.selectedObject.material = new TransmissionMaterial([this.materialColor[0] / 255, this.materialColor[1] / 255, this.materialColor[2] / 255])\n          break\n      }\n      this.selectedObject.material.material_index = materialIndex\n      this.selectedMaterial = this.selectedObject.material\n    }\n    else {\n      this.selectedMaterial.emission_rate = this.materialEmission\n    }\n\n    this.selectedMaterial.material_type = this.materialType\n    this.selectedMaterial.color = [this.materialColor[0] / 255, this.materialColor[1] / 255, this.materialColor[2] / 255]\n\n    materialTexture.textureData[this.selectedMaterial.material_index * 9 + 0] = this.selectedMaterial.color[0]\n    materialTexture.textureData[this.selectedMaterial.material_index * 9 + 1] = this.selectedMaterial.color[1]\n    materialTexture.textureData[this.selectedMaterial.material_index * 9 + 2] = this.selectedMaterial.color[2]\n    materialTexture.textureData[this.selectedMaterial.material_index * 9 + 3] = this.selectedMaterial.material_type\n    materialTexture.textureData[this.selectedMaterial.material_index * 9 + 4] = this.selectedMaterial.emission_rate\n    materialTexture.textureData[this.selectedMaterial.material_index * 9 + 5] = 0\n\n    // Extra data 2\n    if (this.selectedMaterial.material_type == MATERIAL_TYPES.diffuse) {\n      let material = <DiffuseMaterial> this.selectedObject.material;\n      materialTexture.textureData[this.selectedMaterial.material_index * 9 + 6] = material.albedo;\n      materialTexture.textureData[this.selectedMaterial.material_index * 9 + 7] = material.roughness;\n    }\n    else if (this.selectedMaterial.material_type == MATERIAL_TYPES.glossy) {\n      let material = <GlossyMaterial> this.selectedMaterial;\n      material.shininess = this.materialExtraParameter1\n\n      materialTexture.textureData[this.selectedMaterial.material_index * 9 + 6] = material.shininess\n    }\n\n    materialTexture.updateTexture()\n    this.renderService.rayTracer.refreshScreen = true\n  }\n\n  sceneUpdate() {\n    this.renderService.loadNewScene(this.sceneId)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/object-settings/object-settings.component.ts","import {Component, ElementRef} from \"@angular/core\";\nimport {SettingsService} from \"../../../renderer/settings/settings.service\";\nimport {RenderService} from \"../../../renderer/render.service\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {ISettingAttribute} from \"../../../renderer/settings/setting\";\nconst hexRgb = require('hex-rgb');\n\n@Component({\n  selector: 'render-options',\n  templateUrl: 'render-settings.html',\n  styleUrls: ['render-settings.css']\n})\nexport class RenderSettingsComponent {\n  renderTypes = [{ id: 0, name: 'Ray tracing' }, { id: 1, name: 'Ray marching' }]\n  renderType = 0\n\n  resolutionSub: BehaviorSubject<ISettingAttribute>\n\n  constructor(\n    public settingsService: SettingsService,\n    public renderService: RenderService\n  ) {\n    this.resolutionSub = settingsService.renderSettings.getAttributeSub('resolution')\n  }\n\n  zoomSliderUpdate(event) {\n    this.settingsService.zoom = event.value / 100.0\n  }\n\n  downloadImage() {\n    // Create a 2D canvas to store the result\n    let w = this.resolutionSub.getValue().value[0]\n    let h = this.resolutionSub.getValue().value[1]\n    let canvas = document.createElement('canvas');\n    canvas.width = w\n    canvas.height = h\n    let context = canvas.getContext('2d');\n\n    console.log(w, h)\n\n    let textureData = new Uint8ClampedArray(w * h * 4);\n\n    for (let x = 0; x < w; x++) {\n      for (let y = 0; y < h; y++) {\n        textureData[4 * (w * x + y) + 0] = this.renderService.textureData[4 * (w * (w - x) + y) + 0]\n        textureData[4 * (w * x + y) + 1] = this.renderService.textureData[4 * (w * (w - x) + y) + 1]\n        textureData[4 * (w * x + y) + 2] = this.renderService.textureData[4 * (w * (w - x) + y) + 2]\n        textureData[4 * (w * x + y) + 3] = this.renderService.textureData[4 * (w * (w - x) + y) + 3]\n      }\n    }\n\n    // Copy the pixels to a 2D canvas\n    let imageData = context.createImageData(w, h);\n    imageData.data.set(textureData);\n    context.putImageData(imageData, 0, 0)\n\n    let download = document.createElement('a');\n    download.href = canvas.toDataURL()\n    download.download = 'pathtracer-image.png';\n    download.click();\n  }\n\n  imageUpload(event) {\n    let image = new Image()\n    let reader = new FileReader()\n\n    reader.onload = (e: any) => {\n      image.src = e.target.result\n      this.renderService.newDomeImage(e.target.result)\n    }\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/render-settings/render-settings.component.ts","import {Component, Input, AfterContentChecked} from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {ISettingAttribute, UI_TYPE_COLORPICKER, UI_TYPE_TOGGLE, UI_TYPE_VEC2} from \"../../../renderer/settings/setting\";\nconst hexRgb = require('hex-rgb');\nconst rgbHex = require('rgb-hex');\n\n@Component({\n  selector: 'setting-attribute',\n  templateUrl: 'setting-attribute.html',\n  styleUrls: ['setting-attribute.css']\n})\nexport class SettingAttributeComponent implements AfterContentChecked {\n  @Input() attribute: BehaviorSubject<ISettingAttribute>\n\n  // Color attributes\n  color = '#666666'\n  redClr = 255\n  blueClr = 255\n  greenClr = 255\n\n  // Vector attributes\n  vec = [0,0,0]\n\n  // Dropdown attributes\n  dropdownSelection = 0\n\n  // Toggle attributes\n  enabled: boolean = true\n\n  constructor() {}\n\n  updateAttribute(value: any) {\n    let newAttribute = this.attribute.getValue()\n    newAttribute.value = value\n    this.attribute.next(newAttribute)\n  }\n\n  updateColor() {\n    this.updateAttribute(vec3.fromValues(this.redClr / 255, this.greenClr / 255, this.blueClr / 255))\n  }\n\n  updateVec2() {\n    this.updateAttribute(vec2.fromValues(this.vec[0], this.vec[1]))\n  }\n\n  hexToRgb(hex: any): GLM.IArray {\n    let color = hexRgb(hex)\n    return vec3.fromValues(color[0] / 255, color[1] / 255, color[2] / 255)\n  }\n\n  updateDropdown() {\n    this.updateAttribute(this.dropdownSelection)\n  }\n\n  ngAfterContentChecked(): void {\n    let attr = this.attribute.getValue()\n    switch (attr.uiType) {\n      case UI_TYPE_COLORPICKER:\n        this.redClr = attr.value[0] * 255\n        this.greenClr = attr.value[1] * 255\n        this.blueClr = attr.value[2] * 255\n        break\n      case UI_TYPE_TOGGLE:\n        this.enabled = attr.value == 1.0\n        break\n      case UI_TYPE_VEC2:\n        this.vec[0] = attr.value[0]\n        this.vec[1] = attr.value[1]\n        break\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/setting-attribute/setting-attribute.component.ts","import {Component, Input, AfterViewInit} from \"@angular/core\";\n\n@Component({\n  selector: 'settings-container',\n  templateUrl: 'settings-container.html',\n  styleUrls: ['settings-container.css']\n})\nexport class SettingsContainerComponent {\n  @Input() title: string\n  @Input() expanded: any\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/settings-container/settings-container.component.ts","import {Component} from \"@angular/core\";\nimport {SettingsService} from \"../../renderer/settings/settings.service\";\n\n@Component({\n  selector: 'top-bar',\n  templateUrl: './top-bar.html',\n  styleUrls: ['./top-bar.css']\n})\nexport class TopBarComponent {\n  constructor(public settingsService: SettingsService) {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/top-bar/top-bar.component.ts","import Shader from \"../utils/shader\";\nimport {FLOAT_TYPE} from \"../utils/shader\";\nimport {TEXTURE_TYPE} from \"../utils/shader\";\nimport FBO from \"../utils/fbo\";\nimport {SettingsService} from \"../settings/settings.service\";\nimport {VEC2_TYPE} from \"../utils/shader\";\nimport {ISettingAttribute} from \"../settings/setting\";\n\n\n/*\n Shader imports\n */\nconst thresholdFrag = require('raw-loader!glslify!./shaders/threshold.frag');\nconst thresholdVert = require('raw-loader!glslify!./shaders/threshold.vert');\nconst bloomVerticalFrag = require('raw-loader!glslify!./shaders/bloom-vertical.frag');\nconst bloomHorizontalFrag = require('raw-loader!glslify!./shaders/bloom-horizontal.frag');\nconst bloomVert = require('raw-loader!glslify!./shaders/bloom.vert');\n\nexport class BloomProgram {\n  private _thresholdProgram: FBO\n  private _thresholdShader: Shader\n\n  private _verticalBloomProgram: FBO\n  private _verticalBloomShader: Shader\n\n  private _horizontalBloomProgram: FBO\n  private _horizontalBloomShader: Shader\n\n  constructor(public settingsService: SettingsService) {\n    let renderSize = settingsService.renderSettings.getAttributeSub('resolution').getValue().value\n\n    this._thresholdShader = new Shader(thresholdVert, thresholdFrag);\n    this._thresholdShader.uniforms = {\n      u_buffer_texture: { type: TEXTURE_TYPE, value: null }\n    }\n    this._thresholdProgram = new FBO(this._thresholdShader, renderSize[0], renderSize[1])\n\n    this._verticalBloomShader = new Shader(bloomVert, bloomHorizontalFrag)\n    this._verticalBloomShader.uniforms = {\n      u_resolution: { type: VEC2_TYPE, value: renderSize },\n      u_buffer_texture: { type: TEXTURE_TYPE, value: null },\n    }\n    this._verticalBloomProgram = new FBO(this._verticalBloomShader, renderSize[0], renderSize[1])\n\n    this._horizontalBloomShader = new Shader(bloomVert, bloomVerticalFrag)\n    this._horizontalBloomShader.uniforms = {\n      u_resolution: { type: VEC2_TYPE, value: renderSize },\n      u_buffer_texture: { type: TEXTURE_TYPE, value: null },\n    }\n    this._horizontalBloomProgram = new FBO(this._horizontalBloomShader, renderSize[0], renderSize[1])\n\n    settingsService.renderSettings.getAttributeSub('resolution').asObservable().subscribe((attr: ISettingAttribute) => {\n      let resolution = attr.value\n      this._thresholdProgram.resize(resolution[0], resolution[1])\n      this._verticalBloomProgram.resize(resolution[0], resolution[1])\n      this._horizontalBloomProgram.resize(resolution[0], resolution[1])\n\n      this._verticalBloomShader.uniforms['u_resolution'].value = resolution\n      this._horizontalBloomShader.uniforms['u_resolution'].value = resolution\n    })\n  }\n\n  render(texture: WebGLTexture) {\n    let currentTexture = texture\n\n    this._thresholdShader.uniforms['u_buffer_texture'].value = currentTexture;\n    this._thresholdProgram.render()\n    currentTexture = this._thresholdProgram.texture\n\n    let bloomIterations = this.settingsService.bloomSettings.getAttribute('u_bloomIterations').value\n    for (let i = 0; i < bloomIterations; i++) {\n      this._verticalBloomShader.uniforms['u_buffer_texture'].value = currentTexture;\n      this._verticalBloomProgram.render()\n\n      this._horizontalBloomShader.uniforms['u_buffer_texture'].value = this._verticalBloomProgram.texture\n      this._horizontalBloomProgram.render()\n\n      currentTexture = this._horizontalBloomProgram.texture\n    }\n  }\n\n  get renderTexture(): WebGLTexture { return this._horizontalBloomProgram.texture }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/bloom-program/bloom-program.ts","import {SettingsService} from \"../settings/settings.service\";\nimport FBO from \"../utils/fbo\";\nimport Shader from \"../utils/shader\";\nimport {TEXTURE_TYPE} from \"../utils/shader\";\nimport {ISettingAttribute} from \"../settings/setting\";\n\n/*\n Shader imports\n */\nconst compositionFrag = require('raw-loader!glslify!./shaders/composition.frag');\nconst compositionVert = require('raw-loader!glslify!./shaders/composition.vert');\n\nexport class CompositionProgram {\n  private _compositionProgram: FBO\n  private _compositionShader: Shader\n\n  constructor(settingsService: SettingsService) {\n    let renderSize = settingsService.renderSettings.getAttribute('resolution').value\n\n    this._compositionShader = new Shader(compositionVert, compositionFrag);\n    this._compositionShader.uniforms = {\n      u_mainTexture: { type: TEXTURE_TYPE, value: null },\n      u_bloomTexture: { type: TEXTURE_TYPE, value: null }\n    }\n    this._compositionProgram = new FBO(this._compositionShader, renderSize[0], renderSize[1])\n    this._compositionProgram.enableWriteToTexture();\n\n    settingsService.connectShader(this._compositionShader)\n    settingsService.renderSettings.getAttributeSub('resolution').asObservable().subscribe((attr: ISettingAttribute) => {\n      let res = attr.value\n      this._compositionProgram.resize(res[0], res[1])\n    })\n  }\n\n  render(mainTexture: WebGLTexture, bloomTexture: WebGLTexture) {\n    this._compositionShader.uniforms['u_mainTexture'].value = mainTexture\n    this._compositionShader.uniforms['u_bloomTexture'].value = bloomTexture\n    this._compositionProgram.render()\n  }\n\n  get renderTexture(): WebGLTexture { return this._compositionProgram.texture }\n  get textureData(): Uint8Array { return this._compositionProgram.textureData }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/composition-program/composition-program.ts","import Triangle from \"../primitives/triangle\";\nimport Ray from \"../ray\";\n\nexport default class BoundingBox {\n  private _top: GLM.IArray;\n  private _bottom: GLM.IArray;\n  private _center: GLM.IArray;\n  private _distanceFromCamera: number;\n\n  constructor() {\n    this._top = vec3.fromValues(-10000, -10000, -10000);\n    this._bottom = vec3.fromValues(10000, 10000, 10000);\n    this._center = vec3.fromValues(0, 0, 0);\n  }\n\n  public calculateBoundingBoxFromTriangles(triangles: Array<Triangle>) {\n    this._bottom = vec3.fromValues(10000, 10000, 10000);\n    this._top = vec3.fromValues(-10000, -10000, -10000);\n\n    for (let triangle of triangles) {\n      // Set bottom of bounding box\n      vec3.min(this._bottom, this._bottom, triangle.v0);\n      vec3.min(this._bottom, this._bottom, triangle.v1);\n      vec3.min(this._bottom, this._bottom, triangle.v2);\n\n      // Set top of bounding box\n      vec3.max(this._top, this._top, triangle.v0);\n      vec3.max(this._top, this._top, triangle.v1);\n      vec3.max(this._top, this._top, triangle.v2);\n    }\n  }\n\n  public calculateBoundingBoxFromSphere(position: GLM.IArray, radius: number) {\n    this._bottom = vec3.fromValues(position[0] - radius, position[1] - radius, position[2] - radius);\n    this._top = vec3.fromValues(position[0] + radius, position[1] + radius, position[2] + radius);\n  }\n\n  public rayIntersection(ray: Ray): boolean {\n    let dirfrac = vec3.fromValues(0,0,0);\n    dirfrac[0] = 1.0 / ray.direction[0];\n    dirfrac[1] = 1.0 / ray.direction[1];\n    dirfrac[2] = 1.0 / ray.direction[2];\n\n    // lb is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\n    // r.org is origin of ray\n    let t1 = (this._bottom[0] - ray.startPosition[0]) * dirfrac[0];\n    let t2 = (this._top[0] - ray.startPosition[0]) * dirfrac[0];\n    let t3 = (this._bottom[1] - ray.startPosition[1]) * dirfrac[1];\n    let t4 = (this._top[1] - ray.startPosition[1]) * dirfrac[1];\n    let t5 = (this._bottom[2] - ray.startPosition[2]) * dirfrac[2];\n    let t6 = (this._top[2] - ray.startPosition[2]) * dirfrac[2];\n\n    let tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n    let tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6));\n\n    // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\n    if (tmax < 0.0 || tmin > tmax) return false;\n\n    let collision_distance = tmin;\n    return true;\n  }\n\n  get center(): GLM.IArray { return this._center; }\n  set center(value: GLM.IArray) { this._center = value; }\n  get bottom(): GLM.IArray { return this._bottom;}\n  set bottom(value: GLM.IArray) { this._bottom = value; }\n  get top(): GLM.IArray { return this._top; }\n  set top(value: GLM.IArray) { this._top = value; }\n  get distanceFromCamera(): number { return this._distanceFromCamera; }\n  set distanceFromCamera(value: number) { this._distanceFromCamera = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/bvh/bounding-box.ts","import Ray from \"../ray\";\nimport Triangle from \"../primitives/triangle\";\n\nexport class BVHNode {\n  private _bottom: GLM.IArray;\n  private _top: GLM.IArray;\n  private _nodeIndex: number;\n\n  constructor() {\n    this._bottom = vec3.fromValues(0,0,0);\n    this._top = vec3.fromValues(0,0,0);\n  }\n\n  public isLeaf(): boolean {\n    return false;\n  }\n\n  public rayIntersection(ray: Ray): boolean {\n    let tmin = (this._bottom[0] - ray.startPosition[0]) / ray.direction[0];\n    let tmax = (this._top[0] - ray.startPosition[0]) / ray.direction[0];\n\n    if (tmin > tmax) {\n      let temp = tmin;\n      tmin = tmax;\n      tmax = temp;\n    }\n\n    let tymin = (this._bottom[1] - ray.startPosition[1]) / ray.direction[1];\n    let tymax = (this._top[1] - ray.startPosition[1]) / ray.direction[1];\n\n    if (tymin > tymax) {\n      let temp = tymin;\n      tymin = tymax;\n      tymax = temp;\n    }\n\n    if ((tmin > tymax) || (tymin > tmax))\n      return false;\n\n    if (tymin > tmin)\n      tmin = tymin;\n\n    if (tymax < tmax)\n      tmax = tymax;\n\n    let tzmin = (this._bottom[2] - ray.startPosition[2]) / ray.direction[2];\n    let tzmax = (this._top[2] - ray.startPosition[2]) / ray.direction[2];\n\n    if (tzmin > tzmax) {\n      let temp = tzmin;\n      tzmin = tzmax;\n      tzmax = temp;\n    }\n\n    if ((tmin > tzmax) || (tzmin > tmax))\n      return false;\n\n    return true;\n  }\n\n  get bottom(): GLM.IArray { return this._bottom; }\n  set bottom(value: GLM.IArray) { this._bottom = value; }\n  get top(): GLM.IArray { return this._top; }\n  set top(value: GLM.IArray) { this._top = value; }\n  get nodeIndex(): number { return this._nodeIndex; }\n  set nodeIndex(value: number) { this._nodeIndex = value; }\n}\n\n\nexport class BVHInner extends BVHNode {\n  private _left: BVHNode;\n  private _right: BVHNode;\n\n  constructor() {\n    super();\n  }\n\n  public isLeaf(): boolean {\n    return false;\n  }\n\n  get right(): BVHNode { return this._right; }\n  set right(value: BVHNode) { this._right = value; }\n  get left(): BVHNode { return this._left; }\n  set left(value: BVHNode) { this._left = value; }\n}\n\nexport class BVHLeaf extends BVHNode {\n  private _triangles: Array<Triangle>;\n\n  constructor() {\n    super();\n    this._triangles = [];\n  }\n\n  public isLeaf() {\n    return true;\n  }\n\n  get triangles(): Array<Triangle> { return this._triangles; }\n  set triangles(value: Array<Triangle>) { this._triangles = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/bvh/bvh-node.ts","import Triangle from \"../primitives/triangle\";\nimport {BVHInner, BVHLeaf, BVHNode} from \"./bvh-node\";\n\nclass BVHSplit {\n  public min_cost;\n  public best_split;\n  public best_axis;\n\n  constructor(_min_cost: number, _best_split: number, _best_axis: number) {\n    this.min_cost = _min_cost;\n    this.best_split = _best_split;\n    this.best_axis = _best_axis;\n  }\n}\n\nexport default class BVH {\n  public static MAX_SIZE = 3000;\n\n  private _triangles: Array<Triangle>;\n  private _triangleIndices: Array<number>;\n  private _triangleIndexTexture: Float32Array;\n  private _triangleCount: number;\n  private _bvhTexture: Float32Array;\n  private _bvhArray: Array<number>;\n  public count = 0;\n\n  private _root: BVHInner | BVHLeaf | BVHNode;\n\n  constructor() {\n    this._bvhTexture = new Float32Array(2048 * 2048 * 3);\n    this._bvhArray = [];\n    this._triangleIndexTexture = new Float32Array(1024 * 1024 * 3);\n    this._triangleCount = 0;\n  }\n\n  public createBVH(triangles: Array<Triangle>) {\n    this._triangles = triangles;\n    let workBoxes = [];\n    let bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    let top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n\n    for (let triangle of triangles) {\n      let bbox = new WorkBoundingBox();\n      bbox.triangle = triangle;\n\n      // Set bottom of bounding box\n      vec3.min(bbox.bottom, bbox.bottom, triangle.v0);\n      vec3.min(bbox.bottom, bbox.bottom, triangle.v1);\n      vec3.min(bbox.bottom, bbox.bottom, triangle.v2);\n\n      // Set top of bounding box\n      vec3.max(bbox.top, bbox.top, triangle.v0);\n      vec3.max(bbox.top, bbox.top, triangle.v1);\n      vec3.max(bbox.top, bbox.top, triangle.v2);\n\n      // Set center of bounding box\n      vec3.add(bbox.center, bbox.top, bbox.bottom);\n      vec3.scale(bbox.center, bbox.center, 0.5);\n\n      vec3.min(bottom, bottom, bbox.bottom);\n      vec3.max(top, top, bbox.top);\n\n      workBoxes.push(bbox);\n    }\n\n    this._root = this.recurse(workBoxes, 0);\n    this._root.bottom = bottom;\n    this._root.top = top;\n\n    this.createBVHTexture(this._root, new NodeCounter(0), new NodeCounter(0), 0);\n  }\n\n  private findBestSplitPlane(bvh_split: BVHSplit, axis: number, test_split: number, workBoxes: Array<WorkBoundingBox>): any {\n    // Left and right bounding box\n    let left_bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    let left_top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n    let right_bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    let right_top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n\n    let count_left = 0;\n    let count_right = 0;\n\n    for (let box of workBoxes) {\n      let value = box.center[axis];\n\n      if (value < test_split) {\n        vec3.min(left_bottom, left_bottom, box.bottom);\n        vec3.max(left_top, left_top, box.top);\n        count_left++;\n      }\n      else {\n        vec3.min(right_bottom, right_bottom, box.bottom);\n        vec3.max(right_top, right_top, box.top);\n        count_right++;\n      }\n    }\n\n    // Bins with less than 1 elements not accepted\n    if (count_left <= 1 || count_right <= 1) return;\n\n    // Calculate surface areas\n    let left_side1 = left_top[0] - left_bottom[0];\n    let left_side2 = left_top[1] - left_bottom[1];\n    let left_side3 = left_top[2] - left_bottom[2];\n\n    let right_side1 = right_top[0] - right_bottom[0];\n    let right_side2 = right_top[1] - right_bottom[1];\n    let right_side3 = right_top[2] - right_bottom[2];\n\n    let surface_left = left_side1*left_side2 + left_side2*left_side3 + left_side3*left_side1;\n    let surface_right = right_side1*right_side2 + right_side2*right_side3 + right_side3*right_side1;\n\n    // Calculate total cost\n    let total_cost = surface_left*count_left + surface_right*count_right;\n\n    if (total_cost < bvh_split.min_cost) {\n      bvh_split.min_cost = total_cost;\n      bvh_split.best_split = test_split;\n      bvh_split.best_axis = axis;\n    }\n  }\n\n  private recurse(workBoxes: Array<WorkBoundingBox>, depth): BVHNode {\n    // Terminate if work boxes has less than 4 triangles\n    if (workBoxes.length < 4) {\n      let leaf = new BVHLeaf();\n      for (let box of workBoxes) {\n        leaf.triangles.push(box.triangle);\n      }\n      return leaf;\n    }\n\n    // Continue splitting if there are more than 4 triangles\n    let bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    let top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n\n    // Set size of box for remaining elements\n    for (let box of workBoxes) {\n      vec3.min(bottom, bottom, box.bottom);\n      vec3.max(top, top, box.top);\n    }\n\n    // Dimensions of bounding box\n    let side1 = top[0] - bottom[0]; // x\n    let side2 = top[1] - bottom[1]; // y\n    let side3 = top[2] - bottom[2]; // z\n\n    let bvh_split = new BVHSplit(workBoxes.length * (side1*side2 + side2*side3 + side3*side1), 10000, -1);\n\n    // Try all axis\n    for (let axis = 0; axis < 3; axis++) {\n      let start = bottom[axis];\n      let stop = top[axis];\n\n      if (Math.abs(stop - start) < 0.0001)\n        continue;\n\n      let step = (stop - start) / (128.0 / (depth + 1.0));\n      for (let test_split = start + step; test_split < stop - step; test_split += step) {\n        this.findBestSplitPlane(bvh_split, axis, test_split, workBoxes);\n      }\n\n    }\n\n    // No best axis found, create leaf node\n    if (bvh_split.best_axis == -1) {\n      let leaf = new BVHLeaf();\n      for (let box of workBoxes) {\n        leaf.triangles.push(box.triangle);\n      }\n      return leaf;\n    }\n\n    let left = []; // Left split bounding boxes\n    let right = []; // Right split bounding boxes\n\n    let left_bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    let left_top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n    let right_bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    let right_top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n\n    for (let box of workBoxes) {\n      let value = box.center[bvh_split.best_axis];\n\n      if (value < bvh_split.best_split) {\n        left.push(box);\n        vec3.min(left_bottom, left_bottom, box.bottom);\n        vec3.max(left_top, left_top, box.top);\n      }\n      else {\n        right.push(box);\n        vec3.min(right_bottom, right_bottom, box.bottom);\n        vec3.max(right_top, right_top, box.top);\n      }\n    }\n\n    // Create inner node\n    let inner = new BVHInner();\n    inner.left = this.recurse(left, depth + 1);\n    inner.left.bottom = left_bottom;\n    inner.left.top = left_top;\n\n    inner.right = this.recurse(right, depth + 1);\n    inner.right.bottom = right_bottom;\n    inner.right.top = right_top;\n\n    return inner;\n  }\n\n  public createBVHTexture(node: any, node_index: NodeCounter, triangle_index: NodeCounter, parent_index: number) {\n    node.nodeIndex = node_index.count;\n\n    //First slots gets filled with bounding box\n    this._bvhTexture[node.nodeIndex + 0] = node.bottom[0];\n    this._bvhTexture[node.nodeIndex + 1] = node.bottom[1];\n    this._bvhTexture[node.nodeIndex + 2] = node.bottom[2];\n\n    this._bvhTexture[node.nodeIndex + 3] = node.top[0];\n    this._bvhTexture[node.nodeIndex + 4] = node.top[1];\n    this._bvhTexture[node.nodeIndex + 5] = node.top[2];\n\n    this.count += 6;\n\n    if (!node.isLeaf()) {\n      let node_index_right = node_index.increment(12);\n      this.createBVHTexture(node.right, node_index, triangle_index, node.nodeIndex / 12);\n\n      let node_index_left = node_index.increment(12);\n      this.createBVHTexture(node.left, node_index, triangle_index, node.nodeIndex / 12);\n\n      this.setSibling(node.left, node_index_right / 12);\n      this.setSibling(node.right, node_index_left / 12);\n\n      this._bvhTexture[node.nodeIndex + 6] = 0;\n      this._bvhTexture[node.nodeIndex + 7] = node_index_left / 12;\n      this._bvhTexture[node.nodeIndex + 8] = node_index_right / 12;\n\n      this._bvhTexture[node.nodeIndex + 9] = parent_index;\n      this._bvhTexture[node.nodeIndex + 10] = 0;\n      this._bvhTexture[node.nodeIndex + 11] = 0;\n\n      this.count += 6;\n    }\n    else {\n      let count = node.triangles.length;\n      let start_triangle_index = triangle_index.count;\n\n      this._bvhTexture[node.nodeIndex + 6] = 1;\n      this._bvhTexture[node.nodeIndex + 7] = count;\n      this._bvhTexture[node.nodeIndex + 8] = start_triangle_index;\n\n      this._bvhTexture[node.nodeIndex + 9] = parent_index;\n      this._bvhTexture[node.nodeIndex + 10] = 0;\n      this._bvhTexture[node.nodeIndex + 11] = 0;\n\n      this.count += 6;\n\n      for (let triangle of node.triangles) {\n        this._triangleIndexTexture[3 * triangle_index.count] = triangle.triangleIndex;\n        this._triangleIndexTexture[3 * triangle_index.count + 1] = 0;\n        this._triangleIndexTexture[3 * triangle_index.count + 2] = 0;\n        triangle_index.increment(1);\n        this._triangleCount += 3;\n      }\n    }\n  }\n\n  setSibling(node: any, sibling: number) {\n    this._bvhTexture[node.nodeIndex + 10] = sibling;\n  }\n\n  get root(): any { return this._root; }\n  get bvhTexture(): Float32Array { return this._bvhTexture; }\n  get triangleIndexTexture(): Float32Array { return this._triangleIndexTexture; }\n  get bvhArray(): Array<number> { return this._bvhArray; }\n  get triangleCount(): number { return this._triangleCount; }\n}\n\n\nclass NodeCounter {\n  public count: number;\n  constructor(count: number) {\n    this.count = count;\n  }\n\n  public increment(count: number): number {\n    this.count += count;\n    return this.count;\n  }\n}\n\n// Used to build the BVH tree\nexport class WorkBoundingBox {\n  private _triangle: Triangle;\n  private _top: GLM.IArray;\n  private _bottom: GLM.IArray;\n  private _center: GLM.IArray;\n\n  constructor() {\n    this._top = vec3.fromValues(-BVH.MAX_SIZE, -BVH.MAX_SIZE, -BVH.MAX_SIZE);\n    this._bottom = vec3.fromValues(BVH.MAX_SIZE, BVH.MAX_SIZE, BVH.MAX_SIZE);\n    this._center = vec3.fromValues(0, 0, 0);\n  }\n\n  get triangle(): Triangle { return this._triangle; }\n  set triangle(value: Triangle) { this._triangle = value; }\n  get center(): GLM.IArray { return this._center; }\n  set center(value: GLM.IArray) { this._center = value; }\n  get bottom(): GLM.IArray { return this._bottom;}\n  set bottom(value: GLM.IArray) { this._bottom = value; }\n  get top(): GLM.IArray { return this._top; }\n  set top(value: GLM.IArray) { this._top = value; }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/bvh/bvh.ts","import {BehaviorSubject} from \"rxjs\";\nimport Shader from '../utils/shader'\n\nexport const UI_TYPE_SLIDER = 'UI_TYPE_SLIDER'\nexport const UI_TYPE_TOGGLE = 'UI_TYPE_TOGGLE'\nexport const UI_TYPE_TEXTFIELD = 'UI_TYPE_TEXTFIELD'\nexport const UI_TYPE_VEC2 = 'UI_TYPE_VEC2'\nexport const UI_TYPE_VEC3 = 'UI_TYPE_VEC3'\nexport const UI_TYPE_DROPDOWN = 'UI_TYPE_DROPDOWN'\nexport const UI_TYPE_COLORPICKER = 'UI_TYPE_COLORPICKER'\n\nexport interface ISliderAttribute {\n  minValue: number\n  maxValue: number\n  stepSize: number\n}\n\nexport interface IDropdownAttribute {\n  alternatives: any[]\n}\n\nexport interface ISettingAttribute {\n  name: string\n  uiType: string\n  uiAttributes?: ISliderAttribute | IDropdownAttribute\n  value: any\n  uniformName: string\n  uniformType: number\n}\n\nexport class Setting {\n  attributes: BehaviorSubject<ISettingAttribute>[] = []\n\n  constructor() {}\n\n  public connectShader(shader: Shader) {\n    for (let attribute of this.attributes) {\n      attribute.asObservable().subscribe(attr => shader.setUniform(attr.uniformName, { type: attr.uniformType, value: attr.value }))\n    }\n  }\n\n  public setAttribute(attributeSub: BehaviorSubject<ISettingAttribute>, value: any) {\n    let newAttribute = attributeSub.getValue()\n    newAttribute.value = value\n    attributeSub.next(newAttribute)\n  }\n\n  protected addAttribute(attribute: ISettingAttribute) {\n    this.attributes.push(new BehaviorSubject(attribute))\n  }\n\n  getAttribute(name: string): ISettingAttribute {\n    for (let attribute of this.attributes) {\n      if (attribute.getValue().uniformName == name) {\n        return attribute.getValue();\n      }\n    }\n  }\n\n  getAttributeSub(name: string): BehaviorSubject<ISettingAttribute> {\n    for (let attribute of this.attributes) {\n      if (attribute.getValue().uniformName == name) {\n        return attribute;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/setting.ts","import Scene from \"../scene\";\nimport {DiffuseMaterial} from \"../materials/diffuse-material\";\nimport {GlossyMaterial} from \"../materials/glossy-material\";\nimport TransmissionMaterial from \"../materials/transmission-material\";\nimport {LoadObjects} from \"../../utils/obj-loader\";\nimport {EmissionMaterial} from \"../materials/emission-material\";\n\nexport function createDefaultScene1(scene: Scene): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    scene.intersectables = [];\n    scene.materials = [];\n\n    let green_material = new DiffuseMaterial(vec3.fromValues(0,1,0));\n    let blue_material = new DiffuseMaterial(vec3.fromValues(0,0,1));\n    let white_material = new DiffuseMaterial(vec3.fromValues(1,1,1));\n    let green_glass = new TransmissionMaterial(vec3.fromValues(0.8,1,1.0));\n    let glossy_red_material = new GlossyMaterial(vec3.fromValues(1,0.5,0.5));\n    let glossy_blue_material = new GlossyMaterial(vec3.fromValues(0.5,0.5,1.0));\n    glossy_blue_material.shininess = 2.0;\n    let gold_material = new GlossyMaterial(vec3.fromValues(1.0,0.8,0.3));\n    gold_material.shininess = 20.0;\n    let silver_material = new GlossyMaterial(vec3.fromValues(0.8,0.8,0.8));\n\n    let emission_material = new EmissionMaterial(vec3.fromValues(1,1,1));\n    emission_material.emission_rate = 20.0;\n    let emission_red_material = new EmissionMaterial(vec3.fromValues(1,0.7,0.7));\n    emission_red_material.emission_rate = 10.0;\n    let light_emission_material = new EmissionMaterial(vec3.fromValues(0,1,1));\n    light_emission_material.emission_rate = 6.0;\n\n    scene.materials.push(green_material);\n    scene.materials.push(blue_material);\n    scene.materials.push(white_material);\n    scene.materials.push(green_glass);\n    scene.materials.push(glossy_red_material);\n    scene.materials.push(emission_material);\n    scene.materials.push(emission_red_material);\n    scene.materials.push(glossy_blue_material);\n    scene.materials.push(light_emission_material);\n    scene.materials.push(gold_material);\n    scene.materials.push(silver_material);\n\n    // Load objects from .obj files\n    LoadObjects([\n        { fileName: './assets/models/cylinder.obj', material: glossy_blue_material, smooth_shading: true },\n        //{ fileName: './assets/models/box.obj', material: white_material, smooth_shading: false },\n        { fileName: './assets/models/bottom_disc.obj', material: white_material, smooth_shading: false },\n        { fileName: './assets/models/teapot5.obj', material: gold_material, smooth_shading: true },\n        { fileName: './assets/models/bunny.obj', material: green_glass, smooth_shading: true },\n        //{ fileName: './assets/models/dragon2.obj', material: green_glass, smooth_shading: true },\n        //{ fileName: './assets/models/light_plane4.obj', material: emission_material, smooth_shading: false },\n        { fileName: './assets/models/light_plane5.obj', material: emission_red_material, smooth_shading: false },\n      ], (objects) => {\n        for (let object of objects) {\n          scene.intersectables.push(object);\n        }\n        resolve();\n      },\n      () => {});\n  })\n}\n\nexport function createDefaultScene2(scene: Scene): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    scene.intersectables = [];\n    scene.materials = [];\n\n    let white_material = new DiffuseMaterial(vec3.fromValues(1, 1, 1));\n    let green_glass = new TransmissionMaterial(vec3.fromValues(0.8, 1, 1.0));\n\n    scene.materials.push(white_material);\n    scene.materials.push(green_glass);\n\n    // Load objects from .obj files\n    LoadObjects([\n        {fileName: './assets/models/bottom_disc.obj', material: white_material, smooth_shading: false},\n        {fileName: './assets/models/dragon2.obj', material: green_glass, smooth_shading: true},\n      ], (objects) => {\n        for (let object of objects) {\n          scene.intersectables.push(object);\n        }\n        resolve()\n      },\n      () => {\n      });\n  })\n}\n\nexport function createDefaultScene3(scene: Scene): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    scene.intersectables = [];\n    scene.materials = [];\n\n    let white_material = new DiffuseMaterial(vec3.fromValues(1, 1, 1));\n    let green_glass = new TransmissionMaterial(vec3.fromValues(0.8, 1, 1.0));\n    let glossy_blue_material = new GlossyMaterial(vec3.fromValues(0.5, 0.5, 1.0));\n    glossy_blue_material.shininess = 2.0;\n    let gold_material = new GlossyMaterial(vec3.fromValues(1.0, 0.8, 0.3));\n    gold_material.shininess = 20.0;\n    let silver_material = new GlossyMaterial(vec3.fromValues(0.8, 0.8, 0.8));\n\n    let emission_material = new EmissionMaterial(vec3.fromValues(1, 1, 1));\n    emission_material.emission_rate = 20.0;\n    let emission_red_material = new EmissionMaterial(vec3.fromValues(1, 0.7, 0.7));\n    emission_red_material.emission_rate = 5.0;\n    let light_emission_material = new EmissionMaterial(vec3.fromValues(0, 1, 1));\n    light_emission_material.emission_rate = 0.3;\n\n    scene.materials.push(white_material);\n    scene.materials.push(green_glass);\n    scene.materials.push(emission_material);\n    scene.materials.push(emission_red_material);\n    scene.materials.push(glossy_blue_material);\n    scene.materials.push(light_emission_material);\n    scene.materials.push(gold_material);\n    scene.materials.push(silver_material);\n\n    // Load objects from .obj files\n    LoadObjects([\n        {fileName: './assets/models/cylinder.obj', material: glossy_blue_material, smooth_shading: true},\n        {fileName: './assets/models/box.obj', material: white_material, smooth_shading: false},\n        {fileName: './assets/models/teapot5.obj', material: gold_material, smooth_shading: true},\n        {fileName: './assets/models/bunny.obj', material: green_glass, smooth_shading: true},\n        {fileName: './assets/models/light_plane4.obj', material: emission_material, smooth_shading: false},\n        {fileName: './assets/models/light_plane5.obj', material: emission_red_material, smooth_shading: false},\n      ], (objects) => {\n        for (let object of objects) {\n          scene.intersectables.push(object);\n        }\n        resolve()\n      },\n      () => {\n    })\n  })\n}\n\nexport function createDefaultScene4(scene: Scene): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    scene.intersectables = [];\n    scene.materials = [];\n\n    let white_material = new DiffuseMaterial(vec3.fromValues(1, 1, 1));\n    let green_glass = new TransmissionMaterial(vec3.fromValues(0.8, 1, 1.0));\n    let glossy_blue_material = new GlossyMaterial(vec3.fromValues(0.5, 0.5, 1.0));\n    glossy_blue_material.shininess = 2.0;\n    let gold_material = new GlossyMaterial(vec3.fromValues(1.0, 0.8, 0.3));\n    gold_material.shininess = 20.0;\n    let silver_material = new GlossyMaterial(vec3.fromValues(0.8, 0.8, 0.8));\n\n    let emission_material = new EmissionMaterial(vec3.fromValues(1, 1, 1));\n    emission_material.emission_rate = 20.0;\n    let emission_red_material = new EmissionMaterial(vec3.fromValues(1, 0.7, 0.7));\n    emission_red_material.emission_rate = 5.0;\n    let light_emission_material = new EmissionMaterial(vec3.fromValues(0, 1, 1));\n    light_emission_material.emission_rate = 0.3;\n\n    scene.materials.push(white_material);\n    scene.materials.push(green_glass);\n    scene.materials.push(emission_material);\n    scene.materials.push(emission_red_material);\n    scene.materials.push(glossy_blue_material);\n    scene.materials.push(light_emission_material);\n    scene.materials.push(gold_material);\n    scene.materials.push(silver_material);\n\n    // Load objects from .obj files\n    LoadObjects([\n        {fileName: './assets/models/box.obj', material: white_material, smooth_shading: false},\n        {fileName: './assets/models/dragon2.obj', material: gold_material, smooth_shading: true},\n        {fileName: './assets/models/light_plane4.obj', material: emission_material, smooth_shading: false},\n        {fileName: './assets/models/light_plane5.obj', material: emission_red_material, smooth_shading: false},\n      ], (objects) => {\n        for (let object of objects) {\n          scene.intersectables.push(object);\n        }\n        resolve()\n      },\n      () => {\n      });\n  })\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/default-scenes/default-scenes.ts","import Material from \"../materials/material\";\nimport BoundingBox from \"../bvh/bounding-box\";\n\nexport default class Intersectable {\n  private _material: Material;\n  private _boundingBox: BoundingBox;\n  private _type: number;\n  private _position: GLM.IArray;\n  private _rotation: GLM.IArray;\n  private _scale: GLM.IArray;\n  private _textureIndex: number;\n\n  private _triangleStartIndex: number = -1;\n  private _triangleEndIndex: number = -1;\n  private _BVHStartIndex: number = -1;\n  private _BVHEndIndex: number = -1;\n\n  constructor(material: Material) {\n    this._material = material;\n    this._position = vec3.fromValues(0, 0, 0);\n    this._scale = vec3.fromValues(1, 1, 1);\n    this._rotation = vec3.fromValues(0, 0, 0);\n    this._boundingBox = new BoundingBox();\n  }\n\n  get boundingBox(): BoundingBox { return this._boundingBox; }\n  set boundingBox(value: BoundingBox) { this._boundingBox = value; }\n  get type(): number { return this._type; }\n  get scale(): GLM.IArray { return this._scale; }\n  set scale(value: GLM.IArray) { this._scale = value; }\n  get rotation(): GLM.IArray { return this._rotation;}\n  set rotation(value: GLM.IArray) { this._rotation = value; }\n  get position(): GLM.IArray { return this._position; }\n  set position(value: GLM.IArray) { this._position = value; }\n  get material(): Material { return this._material; }\n  set material(value: Material) { this._material = value; }\n  get textureIndex(): number { return this._textureIndex; }\n  set textureIndex(value: number) { this._textureIndex = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/primitives/intersectable.ts","import Intersectable from \"./intersectable\";\nimport Triangle from \"./triangle\";\nimport Ray from \"../ray\";\nimport BVH from \"../bvh/bvh\";\n\nexport class Object3d extends Intersectable {\n  private _bvh: BVH;\n  private _triangles: Array<Triangle>;\n  private _smoothShading: boolean = false;\n\n  constructor(triangles, material) {\n    super(material);\n\n    this._triangles = triangles;\n    this.boundingBox.calculateBoundingBoxFromTriangles(this._triangles);\n    this._bvh = new BVH();\n  }\n\n  public updatePosition(new_position: GLM.IArray) {\n    for (let triangle of this._triangles) {\n      vec3.sub(triangle.v0, triangle.v0, this.position);\n      vec3.sub(triangle.v1, triangle.v1, this.position);\n      vec3.sub(triangle.v2, triangle.v2, this.position);\n\n      vec3.add(triangle.v0, triangle.v0, new_position);\n      vec3.add(triangle.v1, triangle.v1, new_position);\n      vec3.add(triangle.v2, triangle.v2, new_position);\n    }\n    this.position = new_position;\n  }\n\n  private recurseBBoxes(node: any, ray: Ray, colliding_positions: Array<any>) {\n    if (!node.isLeaf()) {\n      if (node.left.rayIntersection(ray)) {\n        this.recurseBBoxes(node.left, ray, colliding_positions);\n      }\n\n      if (node.right.rayIntersection(ray)) {\n        this.recurseBBoxes(node.right, ray, colliding_positions);\n      }\n    }\n    else {\n      for (let triangle of node.triangles) {\n        let collision_pos = vec3.create();\n        if (triangle.rayIntersection(ray, collision_pos)) {\n          colliding_positions.push(collision_pos);\n        }\n      }\n    }\n  }\n\n  public rayIntersection(ray: Ray, collision_pos: GLM.IArray): boolean {\n    let colliding_positions = [];\n    let node = this._bvh.root;\n    this.recurseBBoxes(node, ray, colliding_positions);\n\n    if (colliding_positions.length != 0) {\n      collision_pos[0] = colliding_positions[0][0];\n      collision_pos[1] = colliding_positions[0][1];\n      collision_pos[2] = colliding_positions[0][2];\n\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  public toJSON() {\n    let triangles = [];\n    for (let triangle of this._triangles) {\n      triangles.push([\n        [triangle.v0[0], triangle.v0[1], triangle.v0[2]],\n        [triangle.v1[0], triangle.v1[1], triangle.v1[2]],\n        [triangle.v2[0], triangle.v2[1], triangle.v2[2]],\n      ]);\n    }\n\n    return {\n      position: [this.position[0], this.position[1], this.position[2]],\n      rotation: [this.position[0], this.position[1], this.position[2]],\n      triangles: triangles,\n      material_index: this.material.material_index\n    };\n  }\n\n  static LoadObj(objData, material) {\n    let vertices = [];\n    let vertexNormals = [];\n    let vertexUVs = [];\n    let triangles = [];\n\n    let lines = objData.split('\\n');\n    for (let line of lines) {\n      let components = line.split(' ');\n\n      switch (components[0]) {\n        // Vertex indices\n        case 'f':\n          let indices1 = components[1].split('/');\n          let indices2 = components[2].split('/');\n          let indices3 = components[3].split('/');\n\n          //vertexUVs[parseInt(indices1[1]) - 1], vertexUVs[parseInt(indices2[1]) - 1], vertexUVs[parseInt(indices3[1]) - 1])\n          triangles.push(new Triangle(\n            vertices[parseInt(indices1[0]) - 1], vertices[parseInt(indices2[0]) - 1], vertices[parseInt(indices3[0]) - 1],\n            vertexNormals[parseInt(indices1[2]) - 1], vertexNormals[parseInt(indices2[2]) - 1], vertexNormals[parseInt(indices3[2]) - 1],\n            vertexUVs[parseInt(indices1[1]) - 1], vertexUVs[parseInt(indices2[1]) - 1], vertexUVs[parseInt(indices3[1]) - 1])\n          );\n          break;\n\n        // Vertex positions\n        case 'v':\n          vertices.push(vec3.fromValues(components[1], components[2], components[3]));\n          break;\n        case 'vn':\n          vertexNormals.push(vec3.fromValues(components[1], components[2], components[3]));\n          break;\n        case 'vt':\n          vertexUVs.push(vec2.fromValues(components[1], components[2]));\n          break;\n      }\n    }\n\n    return new Object3d(triangles, material);\n  }\n\n  get triangles() { return this._triangles; }\n  get bvh(): BVH { return this._bvh; }\n  get smoothShading(): boolean { return this._smoothShading; }\n  set smoothShading(value: boolean) { this._smoothShading = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/primitives/object3d.ts","import Ray from \"../ray\";\nexport default class Triangle {\n  // Verices\n  private _v0: GLM.IArray;\n  private _v1: GLM.IArray;\n  private _v2: GLM.IArray;\n\n  // Vertex normals\n  private _n0: GLM.IArray;\n  private _n1: GLM.IArray;\n  private _n2: GLM.IArray;\n\n  // UV points\n  private _uv0: GLM.IArray;\n  private _uv1: GLM.IArray;\n  private _uv2: GLM.IArray;\n\n  private _edge1: GLM.IArray;\n  private _edge2: GLM.IArray;\n  private _triangleArea: number;\n  private _objectIndex: number;\n  private _triangleIndex: number;\n\n  constructor(v0: GLM.IArray, v1: GLM.IArray, v2: GLM.IArray, n0: GLM.IArray, n1: GLM.IArray, n2: GLM.IArray, uv0: GLM.IArray, uv1: GLM.IArray, uv2: GLM.IArray) {\n    this._v0 = v0;\n    this._v1 = v1;\n    this._v2 = v2;\n\n    this._n0 = n0;\n    this._n1 = n1;\n    this._n2 = n2;\n\n    this._uv0 = uv0;\n    this._uv1 = uv1;\n    this._uv2 = uv2;\n\n    this._edge1 = vec3.create();\n    vec3.subtract(this._edge1, v1, v0);\n    this._edge2 = vec3.create();\n    vec3.subtract(this._edge2, v2, v0);\n\n    // console.log(this._edge1[0] + \" \" + this._edge1[1] + \" \" + this._edge1[2]);\n    // console.log(this._edge2[0] + \" \" + this._edge2[1] + \" \" + this._edge2[2]);\n\n    let edge_cross = vec3.create();\n    vec3.cross(edge_cross, this._edge1, this._edge2);\n    this._triangleArea = 0.5 * vec3.length(edge_cross);\n    //console.log(this._triangleArea);\n  }\n\n  public updateTriangle() {\n    // this._edge1 = vec3.create();\n    // vec3.subtract(this._edge1, v1, v0);\n    // this._edge2 = vec3.create();\n    // vec3.subtract(this._edge2, v2, v0);\n  }\n\n\n  get v0() { return this._v0; }\n  get v1() { return this._v1; }\n  get v2() { return this._v2; }\n  set v2(value: GLM.IArray) { this._v2 = value; }\n  set v1(value: GLM.IArray) { this._v1 = value; }\n  set v0(value: GLM.IArray) { this._v0 = value; }\n  get n2(): GLM.IArray { return this._n2;}\n  get n1(): GLM.IArray { return this._n1; }\n  get n0(): GLM.IArray { return this._n0; }\n  get uv2(): GLM.IArray { return this._uv2; }\n  get uv1(): GLM.IArray { return this._uv1; }\n  get uv0(): GLM.IArray { return this._uv0; }\n  get edge1() { return this._edge1; }\n  get edge2() { return this._edge2; }\n  get objectIndex(): number { return this._objectIndex; }\n  set objectIndex(value: number) { this._objectIndex = value; }\n  get triangleIndex(): number { return this._triangleIndex; }\n  set triangleIndex(value: number) { this._triangleIndex = value; }\n  get triangleArea() { return this._triangleArea; }\n\n  public rayIntersection(ray: Ray, collision_pos: GLM.IArray): boolean {\n    let EPS = 0.0001;\n\n    //Begin calculating determinant - also used to calculate u parameter\n    let P = vec3.fromValues(0,0,0);\n    vec3.cross(P, ray.direction, this._edge2);\n    let det = vec3.dot(this._edge1, P);\n\n    if (det > -EPS && det < EPS) return false;\n    let inv_det = 1.0 / det;\n\n    //Distance from vertex1 to ray origin\n    let T = vec3.fromValues(0,0,0);\n    vec3.subtract(T, ray.startPosition, this._v0);\n    let u = vec3.dot(T, P);\n    if (u < 0.0 || u > det) return false;\n\n    let Q = vec3.fromValues(0,0,0);\n    vec3.cross(Q, T, this._edge1);\n\n    let v = vec3.dot(ray.direction, Q);\n    if(v < 0.0 || u+v > det) return false;\n\n    let t = vec3.dot(this._edge2, Q);\n\n    if(t > EPS) {\n      let dir = vec3.fromValues(0,0,0);\n      vec3.scale(dir, ray.direction, t * inv_det);\n      vec3.add(collision_pos, ray.startPosition, T);\n      return true;\n    }\n\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/primitives/triangle.ts","\nexport default class Ray {\n  private _startPosition: GLM.IArray\n  private _direction: GLM.IArray\n\n  constructor(startPosition: GLM.IArray, direction: GLM.IArray) {\n    this._startPosition = startPosition\n    this._direction = direction\n  }\n\n  get direction(): GLM.IArray { return this._direction }\n  get startPosition(): GLM.IArray { return this._startPosition }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/ray.ts","// import Scene from './scene'\n// import {Object3d} from './primitives/object3d'\n// import {MATERIAL_TYPES} from './materials/material'\n// import {DiffuseMaterial} from './materials/diffuse-material'\n// import {GlossyMaterial} from './materials/glossy-material'\n\nimport {Object3d} from \"./primitives/object3d\";\nimport {MATERIAL_TYPES} from \"./materials/material\";\nimport {DiffuseMaterial} from \"./materials/diffuse-material\";\nimport {GlossyMaterial} from \"./materials/glossy-material\";\nexport interface ISceneTextures {\n  objects: Float32Array\n  object_count: number\n  objects_bvh: Float32Array\n  triangles: Float32Array\n  triangle_count: number\n  triangle_indices: Float32Array\n  materials: Float32Array\n  material_count: number\n  light_triangles: Float32Array\n  light_count: number\n}\n\nexport default function buildScene(scene: any): Promise<ISceneTextures> {\n  return new Promise<ISceneTextures>((resolve, reject) => {\n    scene.buildScene();\n\n    let textureData: ISceneTextures = {\n      objects: new Float32Array(512 * 512 * 3),\n      object_count: scene.intersectables.length,\n      objects_bvh: new Float32Array(2048 * 2048 * 3),\n      triangles: new Float32Array(2048 * 2048 * 3),\n      triangle_count: 0,\n      triangle_indices: new Float32Array(1024 * 1024 * 3),\n      materials: new Float32Array(512 * 512 * 3),\n      material_count: 0,\n      light_triangles: new Float32Array(128 * 128 * 3),\n      light_count: 0,\n    };\n\n    // Build object data\n    let objectData = [];\n    let bvhCount = 0;\n    let triangleCount = 0;\n    for (let obj_idx = 0; obj_idx < scene.intersectables.length; obj_idx++) {\n      let object = scene.intersectables[obj_idx] as Object3d;\n      object.textureIndex = obj_idx;\n\n      let bvh_start_index = bvhCount;\n      for (let obj_bvh_idx = 0; obj_bvh_idx < object.bvh.count; obj_bvh_idx++) {\n        textureData.objects_bvh[bvhCount++] = object.bvh.bvhTexture[obj_bvh_idx];\n      }\n      let bvh_end_index = bvhCount;\n\n      let triangle_start_index = triangleCount;\n      for (let tri_idx = 0; tri_idx < object.bvh.triangleCount; tri_idx++) {\n        textureData.triangle_indices[triangleCount++] = object.bvh.triangleIndexTexture[tri_idx];\n      }\n      let triangle_end_index = triangleCount;\n\n      // Bounding box bottom\n      objectData.push(object.boundingBox.bottom[0]);\n      objectData.push(object.boundingBox.bottom[1]);\n      objectData.push(object.boundingBox.bottom[2]);\n\n      // Bounding box bottom\n      objectData.push(object.boundingBox.top[0]);\n      objectData.push(object.boundingBox.top[1]);\n      objectData.push(object.boundingBox.top[2]);\n\n      // Object position\n      objectData.push(object.position[0]);\n      objectData.push(object.position[1]);\n      objectData.push(object.position[2]);\n\n      // Object scale\n      objectData.push(object.scale[0]);\n      objectData.push(object.scale[1]);\n      objectData.push(object.scale[2]);\n\n      // Set indices for bvh texture\n      objectData.push(bvh_start_index / 12); // BVH start index\n      objectData.push(triangle_start_index / 3);\n      objectData.push(0);\n    }\n\n    for (let i = 0; i < objectData.length; i++) {\n      textureData.objects[i] = objectData[i];\n    }\n\n    // Build material data\n    let materialData = [];\n    for (let mat_idx = 0; mat_idx < scene.materials.length; mat_idx++) {\n      let material = scene.materials[mat_idx];\n\n      // Set material index\n      material.material_index = mat_idx;\n\n      // Color\n      materialData.push(material.color[0]);\n      materialData.push(material.color[1]);\n      materialData.push(material.color[2]);\n\n      // Extra data 1\n      materialData.push(material.material_type);\n      materialData.push(material.emission_rate);\n      materialData.push(0);\n\n      // Extra data 2\n      if (material.material_type == MATERIAL_TYPES.diffuse) {\n        let diffuse_material = <DiffuseMaterial> material;\n        materialData.push(diffuse_material.albedo);\n        materialData.push(diffuse_material.roughness);\n        materialData.push(0);\n      }\n      else if (material.material_type == MATERIAL_TYPES.glossy) {\n        let diffuse_material = <GlossyMaterial> material;\n        materialData.push(diffuse_material.shininess);\n        materialData.push(0);\n        materialData.push(0);\n      }\n      else {\n        materialData.push(0);\n        materialData.push(0);\n        materialData.push(0);\n      }\n    }\n\n    textureData.material_count = scene.materials.length;\n    for (let i = 0; i < materialData.length; i++) {\n      textureData.materials[i] = materialData[i];\n    }\n\n    // Build triangle data\n    let triangleData = [];\n    let lightData = [];\n    for (let object of scene.intersectables) {\n      // Find material index for current objtect\n      let material_index = 0;\n      for (let mat_idx = 0; mat_idx < scene.materials.length; mat_idx++) {\n        if (scene.materials[mat_idx] === object.material) {\n          material_index = mat_idx;\n          break;\n        }\n      }\n\n      // Add triangle data\n      for (let triangle of object.triangles) {\n        // v0\n        triangleData.push(triangle.v0[0]);\n        triangleData.push(triangle.v0[1]);\n        triangleData.push(triangle.v0[2]);\n\n        // edge1\n        triangleData.push(triangle.edge1[0]);\n        triangleData.push(triangle.edge1[1]);\n        triangleData.push(triangle.edge1[2]);\n\n        // edge2\n        triangleData.push(triangle.edge2[0]);\n        triangleData.push(triangle.edge2[1]);\n        triangleData.push(triangle.edge2[2]);\n\n        // n0\n        triangleData.push(triangle.n0[0]);\n        triangleData.push(triangle.n0[1]);\n        triangleData.push(triangle.n0[2]);\n\n        // n1\n        triangleData.push(triangle.n1[0]);\n        triangleData.push(triangle.n1[1]);\n        triangleData.push(triangle.n1[2]);\n\n        // n2\n        triangleData.push(triangle.n2[0]);\n        triangleData.push(triangle.n2[1]);\n        triangleData.push(triangle.n2[2]);\n\n        // uv0\n        triangleData.push(triangle.uv0[0]);\n        triangleData.push(triangle.uv0[1]);\n        triangleData.push(0);\n\n        // uv1\n        triangleData.push(triangle.uv1[0]);\n        triangleData.push(triangle.uv1[1]);\n        triangleData.push(0);\n\n        // uv2\n        triangleData.push(triangle.uv2[0]);\n        triangleData.push(triangle.uv2[1]);\n        triangleData.push(0);\n\n        // Extra data\n        triangleData.push(material_index);\n        triangleData.push(triangle.objectIndex);\n        triangleData.push(0);\n        triangleData.push(0);\n        triangleData.push(0);\n        triangleData.push(0);\n\n        // Add light data\n        if (object.material.emission_rate != 0.0) {\n          // v0\n          lightData.push(triangle.v0[0]);\n          lightData.push(triangle.v0[1]);\n          lightData.push(triangle.v0[2]);\n\n          // edge1\n          lightData.push(triangle.edge1[0]);\n          lightData.push(triangle.edge1[1]);\n          lightData.push(triangle.edge1[2]);\n\n          // edge2\n          lightData.push(triangle.edge2[0]);\n          lightData.push(triangle.edge2[1]);\n          lightData.push(triangle.edge2[2]);\n\n          // n0\n          lightData.push(triangle.n0[0]);\n          lightData.push(triangle.n0[1]);\n          lightData.push(triangle.n0[2]);\n\n          // n1\n          lightData.push(triangle.n1[0]);\n          lightData.push(triangle.n1[1]);\n          lightData.push(triangle.n1[2]);\n\n          // n2\n          lightData.push(triangle.n2[0]);\n          lightData.push(triangle.n2[1]);\n          lightData.push(triangle.n2[2]);\n\n          // Extra data\n          lightData.push(material_index);\n          lightData.push(triangle.objectIndex);\n          lightData.push(triangle.triangleArea);\n          lightData.push(0);\n          lightData.push(0);\n          lightData.push(0);\n        }\n      }\n    }\n\n    let tri_count = 0;\n    for (let i = 0; i < triangleData.length; ++i) {\n      if (i % 12 == 0) tri_count++;\n      textureData.triangles[i] = triangleData[i];\n    }\n    textureData.triangle_count = tri_count;\n\n    let light_count = 0;\n    for (let i = 0; i < lightData.length; ++i) {\n      if (i % 12 == 0) light_count++;\n      textureData.light_triangles[i] = lightData[i];\n    }\n    textureData.light_count = light_count;\n\n    resolve(textureData);\n  });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/scene-builder.ts","import {Object3d} from \"./primitives/object3d\";\nimport Triangle from \"./primitives/triangle\";\nimport Material from \"./materials/material\";\nimport Ray from \"./ray\";\n\nexport default class Scene {\n  private _intersectables: Array<Object3d>;\n  private _triangles: Array<Triangle>;\n  private _materials: Array<Material>;\n\n  constructor() {\n    this._intersectables = [];\n    this._triangles = [];\n    this._materials = [];\n  }\n\n  private recurseBBoxes(node: any, ray: Ray, colliding_objects: Array<Object3d>) {\n    if (!node.isLeaf()) {\n      if (node.left.rayIntersection(ray)) {\n        this.recurseBBoxes(node.left, ray, colliding_objects);\n      }\n      if (node.right.rayIntersection(ray)) {\n        this.recurseBBoxes(node.right, ray, colliding_objects);\n      }\n    }\n    else {\n      for (let triangle of node.triangles) {\n        let collision_pos = vec3.create();\n        if (triangle.rayIntersection(ray, collision_pos)) {\n          colliding_objects.push(this._intersectables[triangle.objectIndex]);\n        }\n      }\n    }\n  }\n\n  public sceneIntersection(ray: Ray): Object3d {\n    let closest_colliding_object;\n    let closest_distance = 100000;\n\n    for (let object of this._intersectables) {\n      if(object.boundingBox.rayIntersection(ray)) {\n        let colliding_pos = vec3.create();\n        if (object.rayIntersection(ray, colliding_pos)) {\n          let distance = vec3.distance(ray.startPosition, colliding_pos);\n          if (distance < closest_distance) {\n            closest_colliding_object = object;\n          }\n        }\n      }\n    }\n\n    return closest_colliding_object;\n  }\n\n  buildScene() {\n    this._triangles = [];\n    for (let obj_idx = 0; obj_idx < this._intersectables.length; obj_idx++) {\n      let object = this._intersectables[obj_idx];\n      for (let triangle of object.triangles) {\n        triangle.objectIndex = obj_idx;\n        this._triangles.push(triangle);\n      }\n    }\n\n    for (let tri_idx = 0; tri_idx < this._triangles.length; tri_idx++) {\n      this._triangles[tri_idx].triangleIndex = tri_idx;\n    }\n\n    for (let object of this._intersectables) {\n      object.bvh.createBVH(object.triangles);\n    }\n  }\n\n  get materials(): Array<Material> { return this._materials; }\n  set materials(value: Array<Material>) { this._materials = value;}\n  get intersectables(): Array<Object3d> { return this._intersectables; }\n  set intersectables(value: Array<Object3d>) { this._intersectables = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/scene.ts","import Shader, {IUniform, TEXTURE_TYPE, FLOAT_TYPE, INTEGER_TYPE, VEC2_TYPE, VEC3_TYPE} from \"../utils/shader\";\nimport PingPongFBO from \"../utils/pingpong-fbo\";\nimport {SettingsService} from \"../settings/settings.service\";\nimport Camera from \"./models/camera\";\nimport {CameraNavigator} from \"../camera-navigator\";\nimport {gl} from \"../utils/render-context\";\nimport {ISettingAttribute} from \"../settings/setting\";\n\n/*\n Shader imports\n */\nconst pathTracerVert = require('raw-loader!glslify!./shaders/path-tracer.vert');\nconst pathTracerFrag = require('raw-loader!./shaders/ray-marcher.glsl');\n\nexport default class RayMarcher {\n  private _camera: Camera\n  private _navigator: CameraNavigator\n  private _frameBuffer: PingPongFBO\n  private _pathTracerShader: Shader\n  private _pathTracerUniforms: {[name: string]: IUniform}\n  private _refreshScreen: boolean\n  private _shouldRender = true\n\n  constructor(private _settingsService: SettingsService) {\n    this._camera = new Camera(this._settingsService, vec3.fromValues(-2,0,0), vec3.fromValues(1,0,0))\n    this._navigator = new CameraNavigator(this._camera, _settingsService)\n    this._navigator.rotationYFactor = 1.0\n    this._navigator.zoomFactor = 1.0\n\n    this._pathTracerShader = new Shader(pathTracerVert, pathTracerFrag);\n    this._pathTracerUniforms = {\n      u_accumulated_texture: { type: TEXTURE_TYPE, value: null },\n      u_dome_texture: { type: TEXTURE_TYPE, value: null},\n\n      // Render settings uniforms\n      time: { type: FLOAT_TYPE, value: 1.0 },\n      samples: { type: FLOAT_TYPE, value: 0.0 },\n      global_lightning_enabled: { type: FLOAT_TYPE, value: 0.0 },\n\n      // Fractal uniforms\n      u_fractalType: { type: FLOAT_TYPE, value: 0.0 },\n      u_power: { type: FLOAT_TYPE, value: 10.0 },\n      u_bailout: { type: FLOAT_TYPE, value: 10.0 },\n      u_minDistance: { type: FLOAT_TYPE, value: 0.001 },\n      u_maxIterations: { type: FLOAT_TYPE, value: 300 },\n\n      // Camera\n      u_cameraYaw: { type: FLOAT_TYPE, value: 0.0},\n      u_cameraPitch: { type: FLOAT_TYPE, value: 0.0},\n      camera_position: { type: VEC3_TYPE, value: this._camera.position },\n      camera_direction: { type: VEC3_TYPE, value: this._camera.direction },\n      camera_right: { type: VEC3_TYPE, value: this._camera.camera_right },\n      camera_up: { type: VEC3_TYPE, value: this._camera.camera_up },\n    };\n\n    // Add fractal attributes\n    for (let attributeSub of this._settingsService.mengerSponge.attributes) {\n      let attr = attributeSub.getValue()\n      this._pathTracerUniforms[attr.uniformName] = {type: attr.uniformType, value: attr.value}\n    }\n\n    this._pathTracerShader.uniforms = this._pathTracerUniforms\n\n    this._settingsService.connectShader(this._pathTracerShader)\n\n    this._frameBuffer = new PingPongFBO(this._pathTracerShader, 512, 512)\n    this._refreshScreen = false\n\n    this.loadDomeTexture(\"./assets/sky-3.jpg\")\n\n    this.setupSettingsListeners();\n  }\n\n  public init() {\n    this._navigator = new CameraNavigator(this._camera, this._settingsService)\n    this._navigator.rotationYFactor = 1.0\n    this._navigator.zoomFactor = 1.0\n  }\n\n  public loadDomeTexture(url: any) {\n    //console.log(image)\n    let lightSphereTexture = gl.createTexture();\n    let lightSphereLocation = gl.getUniformLocation(this._frameBuffer._program, \"u_dome_texture\");\n\n    let lightSphereImage = new Image();\n    lightSphereImage.onload = () => {\n      gl.useProgram(this._frameBuffer._program);\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, lightSphereTexture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, lightSphereImage);\n      gl.uniform1i(lightSphereLocation, 2);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    lightSphereImage.src = url\n\n    this._pathTracerUniforms['u_dome_texture'].value = lightSphereTexture\n  }\n\n  public render() {\n    if (this._shouldRender) {\n      this._frameBuffer.scaleFactor = 1.0\n      this._pathTracerUniforms['resolution'].value = [this._frameBuffer.sizeX, this._frameBuffer.sizeY]\n\n      this._pathTracerUniforms['u_accumulated_texture'].value = this._frameBuffer.texture\n\n      this._pathTracerUniforms['u_cameraYaw'].value = this._camera.yawRotation\n      this._pathTracerUniforms['u_cameraPitch'].value = this._camera.pitchRotation\n      this._pathTracerUniforms['camera_position'].value = this._camera.position\n      this._pathTracerUniforms['camera_direction'].value = this._camera.direction\n      this._pathTracerUniforms['camera_right'].value = this._camera.camera_right\n      this._pathTracerUniforms['camera_up'].value = this._camera.camera_up\n\n      this._frameBuffer.render();\n\n      if (this._settingsService.refreshScreen) {\n        this._settingsService.refreshScreen = false;\n        this._frameBuffer.resetTextures()\n        this._pathTracerUniforms['samples'].value = 0.0\n      }\n      else if (this._camera.hasChanged || this._refreshScreen || this._pathTracerShader.needsUpdate) {\n        this._pathTracerUniforms['samples'].value = 0.0\n        this._camera.hasChanged = false\n        this._refreshScreen = false\n        this._pathTracerShader.needsUpdate = false\n      }\n      else {\n        this._pathTracerUniforms['samples'].value += 1.0\n      }\n      this._pathTracerUniforms['time'].value += 0.01\n    }\n  }\n\n  private setupSettingsListeners() {\n    this._settingsService.renderSettings.getAttributeSub('resolution').asObservable().subscribe((attr: ISettingAttribute) => {\n      let resolution = attr.value\n      this._pathTracerUniforms['resolution'].value = resolution\n      this._frameBuffer.setWindowSize(resolution[0], resolution[1])\n      this._frameBuffer.resetTextures()\n      this._refreshScreen = true\n    })\n    this._settingsService.powerObservable.subscribe(power => {\n      this._pathTracerUniforms['u_power'].value = power\n      this._refreshScreen = true\n    })\n    this._settingsService.detailLevelObservable.subscribe(val => {\n      this._pathTracerUniforms['u_minDistance'].value = 1 / val\n      this._refreshScreen = true\n    })\n    this._settingsService.maxIterationsObservable.subscribe(val => {\n      this._pathTracerUniforms['u_maxIterations'].value = val\n      this._refreshScreen = true\n    })\n    this._settingsService.shouldRenderSub.asObservable().subscribe(val => this._shouldRender = val)\n    this._settingsService.fractalTypeSub.asObservable().subscribe(val => {\n      this._pathTracerUniforms['u_fractalType'].value = val\n      this._refreshScreen = true\n    })\n    // this._settingsService.globalLightPowerSub.asObservable().subscribe(val => {\n    //   this._pathTracerUniforms['u_globalLightPower'].value = val\n    //   this._refreshScreen = true\n    // })\n\n    for (let attributeSub of this._settingsService.mengerSponge.attributes) {\n      attributeSub.asObservable().subscribe(val => { this._pathTracerUniforms[val.uniformName].value = val.value; this._refreshScreen = true })\n    }\n  }\n\n  get frameBuffer(): PingPongFBO { return this._frameBuffer }\n  get renderTexture(): WebGLTexture { return this._frameBuffer.texture }\n  get samples(): number { return this._pathTracerUniforms['samples'].value }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/ray-marcher.ts","import Shader, {IUniform, TEXTURE_TYPE, FLOAT_TYPE, INTEGER_TYPE, VEC2_TYPE, VEC3_TYPE} from \"../utils/shader\"\nimport PingPongFBO from \"../utils/pingpong-fbo\"\nimport {ISceneTextures} from \"./models/scene-builder\"\nimport DataTexture from \"../utils/data-texture\"\nimport {SettingsService} from \"../settings/settings.service\";\nimport Camera from \"./models/camera\";\nimport {CameraNavigator} from \"../camera-navigator\";\nimport {gl} from \"../utils/render-context\";\nimport {SceneService} from \"../scene.service\";\nimport {ISettingAttribute} from \"../settings/setting\";\n\n/*\n Shader imports\n */\nconst pathTracerVert = require('raw-loader!glslify!./shaders/path-tracer.vert');\n//const pathTracerFrag = require('raw-loader!glslify-loader!./shaders/path-tracer.frag');\nconst pathTracerFrag = require('raw-loader!./shaders/ray-tracer.glsl');\n\nexport default class RayTracer {\n  private _navigator: CameraNavigator\n  private _pathTracerShader: Shader\n  private _frameBuffer: PingPongFBO\n  private _pathTracerUniforms: {[name: string]: IUniform}\n  private _refreshScreen: boolean\n  private _shouldRender = true\n\n  // Data textures\n  private _triangleTexture: DataTexture;\n  private _lightTexture: DataTexture;\n  private _materialTexture: DataTexture;\n  private _objectsTexture: DataTexture;\n  private _objectsBVHTexture: DataTexture;\n  private _triangleIndexTexture: DataTexture;\n\n  constructor(\n    private _settingsService: SettingsService,\n    private _sceneService: SceneService,\n    sceneTextures: ISceneTextures\n  ) {\n    this._navigator = new CameraNavigator(this._sceneService.camera, _settingsService)\n\n    this._triangleTexture = new DataTexture(2048, 2048, sceneTextures.triangles, \"u_triangle_texture\")\n    this._lightTexture = new DataTexture(128, 128, sceneTextures.light_triangles, \"u_light_texture\")\n    this._materialTexture = new DataTexture(512, 512, sceneTextures.materials, \"u_material_texture\")\n    this._triangleIndexTexture = new DataTexture(1024, 1024, sceneTextures.triangle_indices, \"u_triangle_index_texture\")\n    this._objectsBVHTexture = new DataTexture(2048, 2048, sceneTextures.objects_bvh, \"u_objects_bvh_texture\")\n    this._objectsTexture = new DataTexture(512, 512, sceneTextures.objects, \"u_objects_texture\")\n\n    this._pathTracerShader = new Shader(pathTracerVert, pathTracerFrag);\n    this._pathTracerUniforms = {\n      // Data textures\n      u_accumulated_texture: { type: TEXTURE_TYPE, value: null },\n      u_dome_texture: { type: TEXTURE_TYPE, value: null},\n      u_triangle_texture: { type: TEXTURE_TYPE, value: this._triangleTexture.texture },\n      u_light_texture: { type: TEXTURE_TYPE, value: this._lightTexture.texture },\n      u_material_texture: { type: TEXTURE_TYPE, value: this._materialTexture.texture },\n      u_triangle_index_texture: { type: TEXTURE_TYPE, value: this._triangleIndexTexture.texture },\n      u_objects_bvh_texture: { type: TEXTURE_TYPE, value: this._objectsBVHTexture.texture },\n      u_objects_texture: { type: TEXTURE_TYPE, value: this._objectsTexture.texture },\n\n      // Uniforms\n      time: { type: FLOAT_TYPE, value: 1.0 },\n      samples: { type: FLOAT_TYPE, value: 0.0 },\n      global_lightning_enabled: { type: FLOAT_TYPE, value: 0.0 },\n      triangle_count: { type: INTEGER_TYPE, value: sceneTextures.triangle_count },\n      object_count: { type: INTEGER_TYPE, value: sceneTextures.object_count },\n\n      // Camera\n      u_cameraYaw: { type: FLOAT_TYPE, value: 0.0},\n      u_cameraPitch: { type: FLOAT_TYPE, value: 0.0},\n      camera_position: { type: VEC3_TYPE, value: this._sceneService.camera.position },\n      camera_direction: { type: VEC3_TYPE, value: this._sceneService.camera.direction },\n      camera_right: { type: VEC3_TYPE, value: this._sceneService.camera.camera_right },\n      camera_up: { type: VEC3_TYPE, value: this._sceneService.camera.camera_up },\n    };\n    this._pathTracerShader.uniforms = this._pathTracerUniforms\n    this._settingsService.connectShader( this._pathTracerShader)\n\n    this._frameBuffer = new PingPongFBO(this._pathTracerShader, 512, 512)\n\n    this.loadDomeTexture(\"./assets/dome.jpg\")\n\n    this.setupSettingsListeners()\n\n    this._refreshScreen = false\n  }\n\n  public init() {\n    this._navigator = new CameraNavigator(this._sceneService.camera, this._settingsService)\n  }\n\n  public loadDomeTexture(url: any) {\n    //console.log(image)w\n    let lightSphereTexture = gl.createTexture();\n    let lightSphereLocation = gl.getUniformLocation(this._frameBuffer._program, \"u_dome_texture\");\n\n    let lightSphereImage = new Image();\n    lightSphereImage.onload = () => {\n      gl.useProgram(this._frameBuffer._program);\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, lightSphereTexture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, lightSphereImage);\n      gl.uniform1i(lightSphereLocation, 2);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    lightSphereImage.src = url\n\n    this._pathTracerUniforms['u_dome_texture'].value = lightSphereTexture\n  }\n\n  private setupSettingsListeners() {\n    this._settingsService.renderSettings.getAttributeSub('resolution').asObservable().subscribe((attr: ISettingAttribute) => {\n      let resolution = attr.value\n      this._pathTracerUniforms['resolution'].value = resolution\n      this._frameBuffer.setWindowSize(resolution[0], resolution[1])\n      this._frameBuffer.resetTextures()\n      this._refreshScreen = true\n    })\n    this._settingsService.maxIterationsObservable.subscribe(val => {\n      this._pathTracerUniforms['u_maxIterations'].value = val\n      this._refreshScreen = true\n    })\n    this._settingsService.shouldRenderSub.asObservable().subscribe(val => this._shouldRender = val)\n  }\n\n  public render() {\n    if (this._shouldRender) {\n      this._pathTracerUniforms['u_accumulated_texture'].value = this._frameBuffer.texture\n\n      this._pathTracerUniforms['u_cameraYaw'].value = this._sceneService.camera.yawRotation\n      this._pathTracerUniforms['u_cameraPitch'].value = this._sceneService.camera.pitchRotation\n      this._pathTracerUniforms['camera_position'].value = this._sceneService.camera.position\n      this._pathTracerUniforms['camera_direction'].value = this._sceneService.camera.direction\n      this._pathTracerUniforms['camera_right'].value = this._sceneService.camera.camera_right\n      this._pathTracerUniforms['camera_up'].value = this._sceneService.camera.camera_up\n\n      this._frameBuffer.render();\n\n      if (this._sceneService.camera.hasChanged || this._refreshScreen || this._pathTracerShader.needsUpdate) {\n        this._pathTracerUniforms['samples'].value = 0.0\n        this._sceneService.camera.hasChanged = false\n        this._pathTracerShader.needsUpdate = false\n        this._refreshScreen = false\n      }\n      else {\n        this._pathTracerUniforms['samples'].value += 1.0\n      }\n      this._pathTracerUniforms['time'].value += 0.01\n    }\n  }\n\n  get renderTexture(): WebGLTexture { return this._frameBuffer.texture; }\n  get pathTracerUniforms(): {[p: string]: IUniform} { return this._pathTracerUniforms }\n  set pathTracerUniforms(value: {[p: string]: IUniform}) { this._pathTracerUniforms = value }\n  set refreshScreen(value: boolean) { this._refreshScreen = value; }\n\n  get triangleIndexTexture(): DataTexture { return this._triangleIndexTexture; }\n  get objectsBVHTexture(): DataTexture { return this._objectsBVHTexture; }\n  get objectsTexture(): DataTexture { return this._objectsTexture; }\n  get materialTexture(): DataTexture { return this._materialTexture; }\n  get lightTexture(): DataTexture { return this._lightTexture; }\n  get triangleTexture(): DataTexture { return this._triangleTexture; }\n  get samples(): number { return this._pathTracerUniforms['samples'].value }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/ray-tracer.ts","import {Object3d} from \"../models/primitives/object3d\";\n\nfunction LoadShader(fileName, index, callback) {\n  jQuery.get(fileName, (data) => {\n    callback(data, index);\n  });\n}\n\nexport function LoadShaders(fileNames, callback, errorCallback) {\n  let loaded_files = 0;\n  let shader_files = [];\n  for (let file_index = 0; file_index < fileNames.length; file_index++) {\n    LoadShader(fileNames[file_index], file_index, (data, shader_index) => {\n      shader_files[shader_index] = data;\n\n      loaded_files++;\n      if (loaded_files == fileNames.length) {\n        let total_shader_data = '';\n        for (let shader_data of shader_files) {\n          total_shader_data += shader_data;\n        }\n        callback(total_shader_data);\n      }\n    });\n\n  }\n}\n\n\nexport function LoadObjects(fileNames, callback, errorCallback) {\n  let loaded_files = 0;\n  let object_files = [];\n\n  for (let file_index = 0; file_index < fileNames.length; file_index++) {\n\n    LoadShader(fileNames[file_index].fileName, file_index, (data, shader_index) => {\n      object_files[shader_index] = Object3d.LoadObj(data, fileNames[shader_index].material);\n      loaded_files++;\n      if (loaded_files == fileNames.length) {\n        callback(object_files);\n      }\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/utils/obj-loader.ts","import Shader from \"../utils/shader\";\nimport RenderTarget from \"../utils/render-target\";\nimport {FLOAT_TYPE} from \"../utils/shader\";\nimport {TEXTURE_TYPE} from \"../utils/shader\";\nimport {IUniform} from \"../utils/shader\";\nimport {VEC2_TYPE} from \"../utils/shader\";\nimport {SettingsService} from \"../settings/settings.service\";\nimport {ISettingAttribute} from \"../settings/setting\";\n\n/*\n Shader imports\n */\nconst baseRendererVert = require('raw-loader!glslify-loader!./shaders/render-view.vert');\nconst baseRendererFrag = require('raw-loader!glslify-loader!./shaders/render-view.frag');\n\nexport default class RenderView {\n  private _renderTarget: RenderTarget\n  private _uniforms: {[name: string]: IUniform}\n\n  constructor(private _settingsService: SettingsService) {\n    let shader = new Shader(baseRendererVert, baseRendererFrag);\n    this._uniforms = {\n      u_time: { type: FLOAT_TYPE, value: 0.0 },\n      u_zoom: { type: FLOAT_TYPE, value: 1.0 },\n      u_rendererResolution: { type: VEC2_TYPE, value: vec2.fromValues(512, 512)},\n      u_resolution: { type: VEC2_TYPE, value: [window.innerWidth, window.innerHeight]},\n      u_mousePosition: { type: VEC2_TYPE, value: [0.0, 0.0]},\n      u_texture: { type: TEXTURE_TYPE, value: null },\n    };\n    shader.uniforms = this._uniforms;\n\n    this._renderTarget = new RenderTarget(shader, window.innerWidth, window.innerHeight)\n\n    window.onmousemove = (e) => this._uniforms['u_mousePosition'].value = [e.clientX, e.clientY]\n    //window.onresize = () => this._renderTarget.setWindowSize(window.innerWidth, window.innerHeight)\n\n    this._settingsService.zoomSub.asObservable().subscribe((value: number) => {\n      this._uniforms['u_zoom'].value = value\n    })\n\n    _settingsService.renderSettings.getAttributeSub('resolution').asObservable().subscribe((attr: ISettingAttribute) => this._uniforms['u_rendererResolution'].value = attr.value)\n  }\n\n  public render(pathTracerTexture: WebGLTexture) {\n    this._uniforms['u_time'].value += 0.01;\n    this._uniforms['u_texture'].value = pathTracerTexture;\n    this._uniforms['u_resolution'].value = [window.innerWidth, window.innerHeight];\n\n    // if (this._settingsService.scaledDown) {\n    //   this._uniforms['u_rendererResolution'].value = vec2.fromValues(this._settingsService.resolutionSub.getValue()[0] * 0.5, this._settingsService.resolutionSub.getValue()[1] * 0.5)\n    // }\n    // else {\n    //   this._uniforms['u_rendererResolution'].value = vec2.fromValues(this._settingsService.resolutionSub.getValue()[0], this._settingsService.resolutionSub.getValue()[1])\n    // }\n    //\n    // this._uniforms['u_zoom'].value = this._settingsService.scaledDown ? this._settingsService.zoomSub.getValue() * 2.0 : this._settingsService.zoomSub.getValue();\n\n    this._renderTarget.render();\n  }\n\n  public updateSize() {\n    this._renderTarget.setWindowSize(window.innerWidth, window.innerHeight)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/render-view/render-view.ts","import Fractal from \"./fractal\";\nimport {FLOAT_TYPE} from \"../../utils/shader\";\nimport {Setting, UI_TYPE_SLIDER} from \"../setting\";\n\nexport class MengerSponge extends Setting {\n  isEnabled: boolean = true\n\n  constructor() {\n    super()\n    this.addAttribute({\n      name: 'Sponge scale',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 3.0,\n        stepSize: 0.1,\n      },\n      value: 1.0,\n      uniformName: 'u_spongeScale',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Half sponge scale',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 3.0,\n        stepSize: 0.1,\n      },\n      value: 0.5,\n      uniformName: 'u_halfSpongeScale',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Sponge offset',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 1.0,\n        stepSize: 0.0001,\n      },\n      value: 0.0,\n      uniformName: 'u_spongeOffset',\n      uniformType: FLOAT_TYPE\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/fractal-settings/menger-sponge.ts","import {Setting, UI_TYPE_SLIDER, UI_TYPE_COLORPICKER, UI_TYPE_TOGGLE} from \"./setting\";\nimport {FLOAT_TYPE, VEC3_TYPE} from \"../utils/shader\";\n\nexport default class LightSettings extends Setting {\n  constructor() {\n    super()\n\n    this.addAttribute({\n      name: 'Image based lightning',\n      uiType: UI_TYPE_TOGGLE,\n      value: 1.0,\n      uniformName: 'u_imageBasedLightning',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Global light power',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 5.0,\n        stepSize: 0.01,\n      },\n      value: 1.0,\n      uniformName: 'u_globalLightPower',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Global light contrast',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 5.0,\n        stepSize: 0.1,\n      },\n      value: 1.5,\n      uniformName: 'u_globalLightContrast',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Fill background',\n      uiType: UI_TYPE_TOGGLE,\n      value: 0.0,\n      uniformName: 'u_fillBackgroundWithLight',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Global light color',\n      uiType: UI_TYPE_COLORPICKER,\n      value: [0.6,0.6,0.6],\n      uniformName: 'u_globalLightColor',\n      uniformType: VEC3_TYPE\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/light-settings.ts","import {Setting, UI_TYPE_SLIDER, UI_TYPE_COLORPICKER, UI_TYPE_DROPDOWN} from \"./setting\";\nimport {FLOAT_TYPE, VEC3_TYPE} from \"../utils/shader\";\n\nexport default class MaterialSettings extends Setting {\n  constructor() {\n    super()\n\n    this.addAttribute({\n      name: 'Material type',\n      uiType: UI_TYPE_DROPDOWN,\n      uiAttributes: {\n        alternatives: [{ id: 0, name: 'Diffuse' }, { id: 5, name: 'Glossy' },  { id: 1, name: 'Specular' }, { id: 2, name: 'Transmission' }]\n      },\n      value: 0.0,\n      uniformName: 'u_materialType',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Color',\n      uiType: UI_TYPE_COLORPICKER,\n      value: [1.0,1.0,1.0],\n      uniformName: 'u_materialColor',\n      uniformType: VEC3_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Shininess',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 10.0,\n        stepSize: 0.01,\n      },\n      value: 2.0,\n      uniformName: 'u_materialExtra1',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Albedo',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 10.0,\n        stepSize: 0.01,\n      },\n      value: 2.0,\n      uniformName: 'u_materialExtra2',\n      uniformType: FLOAT_TYPE\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/material-settings.ts","import {Setting, UI_TYPE_TOGGLE, UI_TYPE_SLIDER, UI_TYPE_COLORPICKER} from \"../setting\";\nimport {FLOAT_TYPE, VEC3_TYPE} from \"../../utils/shader\";\n\nexport class BloomSettings extends Setting {\n  constructor() {\n    super()\n\n    this.addAttribute({\n      name: 'Bloom enabled',\n      uiType: UI_TYPE_TOGGLE,\n      value: 0.0,\n      uniformName: 'u_bloomEnabled',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Bloom alpha',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 1.0,\n        stepSize: 0.01,\n      },\n      value: 0.2,\n      uniformName: 'u_bloomAlpha',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Bloom iterations',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 30.0,\n        stepSize: 1.0,\n      },\n      value: 5.0,\n      uniformName: 'u_bloomIterations',\n      uniformType: FLOAT_TYPE\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/post-effects-settings/bloom-settings.ts","\nimport {Setting, UI_TYPE_SLIDER, UI_TYPE_COLORPICKER, UI_TYPE_TOGGLE} from \"./setting\";\nimport {FLOAT_TYPE, VEC3_TYPE} from \"../utils/shader\";\nexport class RenderEffectsSetting extends Setting {\n  constructor() {\n    super()\n\n    this.addAttribute({\n      name: 'Fog enabled',\n      uiType: UI_TYPE_TOGGLE,\n      value: 0.0,\n      uniformName: 'u_fogEnabled',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Fog amount',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 0.0,\n        maxValue: 2.0,\n        stepSize: 0.001,\n      },\n      value: 0.2,\n      uniformName: 'u_fogDistance',\n      uniformType: FLOAT_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Fog color',\n      uiType: UI_TYPE_COLORPICKER,\n      value: [0.2, 0.2, 0.2],\n      uniformName: 'u_fogColor',\n      uniformType: VEC3_TYPE\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/render-effects-settings.ts","import {Setting, UI_TYPE_SLIDER, UI_TYPE_COLORPICKER, UI_TYPE_TOGGLE, UI_TYPE_VEC2} from \"./setting\";\nimport {FLOAT_TYPE, VEC3_TYPE, INTEGER_TYPE, VEC2_TYPE} from \"../utils/shader\";\n\nexport default class RenderSettings extends Setting {\n  constructor() {\n    super()\n\n    this.addAttribute({\n      name: 'Resolution',\n      uiType: UI_TYPE_VEC2,\n      value: vec2.fromValues(512,512),\n      uniformName: 'resolution',\n      uniformType: VEC2_TYPE\n    })\n\n    this.addAttribute({\n      name: 'Trace depth',\n      uiType: UI_TYPE_SLIDER,\n      uiAttributes: {\n        minValue: 1,\n        maxValue: 10,\n        stepSize: 1\n      },\n      value: 3,\n      uniformName: 'trace_depth',\n      uniformType: INTEGER_TYPE\n    })\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/settings/render-settings.ts","\nimport Shader from \"./shader\";\nexport default function createProgram(gl: WebGLRenderingContext, shader: Shader): WebGLProgram {\n  let program = gl.createProgram();\n  gl.attachShader(program, shader.fragmentShader);\n  gl.attachShader(program, shader.vertexShader);\n  gl.linkProgram(program);\n\n  if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/createProgram.ts","import {gl} from \"./render-context\";\n\nexport default class DataTexture {\n  public _texture: WebGLTexture;\n\n  constructor(\n    private _width: number,\n    private _height: number,\n    private _data: Float32Array,\n    private _name: string\n  ) {\n    this._texture = gl.createTexture();\n\n    this.updateTexture();\n  }\n\n  public updateTexture() {\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB32F, this._width, this._height, 0, gl.RGB, gl.FLOAT, this._data);\n  }\n\n  get texture() { return this._texture }\n  get width(): number { return this._width }\n  get height(): number { return this._height }\n  get textureData(): Float32Array { return this._data }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/data-texture.ts","export const rotationMatrixVector = (v: GLM.IArray, angle: number) => {\n  let c = Math.cos(angle)\n  let s = Math.sin(angle)\n\n  return mat3.fromValues(\n    c + (1.0 - c) * v[0] * v[0], (1.0 - c) * v[0] * v[1] - s * v[2], (1.0 - c) * v[0] * v[2] + s * v[1],\n    (1.0 - c) * v[0] * v[1] + s * v[2], c + (1.0 - c) * v[1] * v[1], (1.0 - c) * v[1] * v[2] - s * v[0],\n    (1.0 - c) * v[0] * v[2] - s * v[1], (1.0 - c) * v[1] * v[2] + s * v[0], c + (1.0 - c) * v[2] * v[2]\n  )\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/rotation-matrix-vector.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".spinner {\\n  margin: auto;\\n  z-index: 1000;\\n  width: 100px;\\n  height: 100px;\\n  margin-top: 300px;\\n}\\n.loader {\\n  position: absolute;\\n  background: rgba(0,0,0,0.6);\\n  width: 100%;\\n  height: 100%;\\n  z-index: 1000;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 375\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".bottom-bar {\\n  position: absolute;\\n  width: 100%;\\n  bottom: 0;\\n  height: 50px;\\n  background: rgba(40,40,40,1.0);\\n  pointer-events: visible;\\n}\\n\\n.zoom-slider {\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\n.bottom-info-label {\\n  font-family: Roboto, serif;\\n  font-size: 12px;\\n  font-weight: 200;\\n  line-height: 50px;\\n  color: #fff;\\n}\\n\\n.bottom-info-data-label {\\n  font-family: Roboto;\\n  font-size: 12px;\\n  font-weight: 200;\\n  line-height: 50px;\\n  color: #fff;\\n}\\n\\n.resolution-inputs {\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.resolution-input {\\n  color: #fff;\\n  font-weight: 200;\\n  font-size: 12px;\\n  width: 40px;\\n  text-align: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/bottom-bar/bottom-bar.css\n// module id = 376\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".spinner {\\n  width: 100px;\\n  margin: auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loading-dialog/loading-dialog.css\n// module id = 377\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".property-box {\\n}\\n.color-picker {\\n  border: none;\\n  border-radius: 4px;\\n  width: calc(100% - 10px);\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-top: 10px;\\n  opacity: 0.3;\\n}\\n\\n.dropdown {\\n  color: #fff;\\n  width: calc(100% - 10px);\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-top: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/fractal-settings/fractal-settings.css\n// module id = 378\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".vec3-input {\\n  color: #fff;\\n  font-weight: 200;\\n  font-size: 12px;\\n  width: 50px;\\n  text-align: center;\\n}\\n\\n.vec3-header {\\n  font-family: Roboto, serif;\\n  font-size: 12px;\\n  font-weight: 200;\\n  line-height: 12px;\\n  color: #fff;\\n  margin-top: 10px;\\n}\\n\\n.dropdown {\\n  color: #fff;\\n  width: calc(100% - 10px);\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-top: 5px;\\n}\\n\\n.color-picker {\\n  border: none;\\n  border-radius: 4px;\\n  width: calc(100% - 10px);\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-top: 10px;\\n  opacity: 0.3;\\n}\\n\\n.property-toggle {\\n  color: #fff;\\n  width: 50px;\\n  font-weight: 200;\\n  font-family: Roboto, serif;\\n  font-size: 12px;\\n}\\n\\n.color-input {\\n  color: #fff;\\n  font-weight: 200;\\n  font-size: 12px;\\n  width: 40px;\\n  text-align: center;\\n}\\n\\n.color-circle {\\n  border-radius: 50%;\\n  width: 10px;\\n  height: 10px;\\n  background: yellow;\\n  display: inline-block;\\n  margin-left: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/object-settings/object-settings.css\n// module id = 379\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".resolution-input {\\n  color: #fff;\\n  font-weight: 200;\\n  font-size: 12px;\\n  width: 80px;\\n  text-align: center;\\n}\\n\\n.dropdown {\\n  color: #fff;\\n  width: calc(100% - 10px);\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-top: 5px;\\n}\\n\\n.pane-button {\\n  width: 100%;\\n  opacity: 0.7;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/render-settings/render-settings.css\n// module id = 380\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".color-picker {\\n  border: none;\\n  border-radius: 4px;\\n  width: calc(100% - 10px);\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-top: 10px;\\n  opacity: 0.3;\\n}\\n\\n.property-toggle {\\n  color: #fff;\\n  width: 50px;\\n  font-weight: 200;\\n  font-family: Roboto, serif;\\n  font-size: 12px;\\n}\\n\\n.color-input {\\n  color: #fff;\\n  font-weight: 200;\\n  font-size: 12px;\\n  width: 40px;\\n  text-align: center;\\n}\\n\\n.color-circle {\\n  border-radius: 50%;\\n  width: 10px;\\n  height: 10px;\\n  background: yellow;\\n  display: inline-block;\\n  margin-left: 10px;\\n}\\n\\n.vec2-input {\\n  color: #fff;\\n  font-weight: 200;\\n  font-size: 12px;\\n  width: 70px;\\n  text-align: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/setting-attribute/setting-attribute.css\n// module id = 381\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".options-pane {\\n  position: relative;\\n  padding: 10px;\\n  margin: 5px;\\n  border-radius: 3px;\\n  width: 170px;\\n  background: rgba(0,0,0,0.2);\\n  overflow: hidden;\\n}\\n\\n.expand-button {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  color: #fff;\\n  cursor: pointer;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/settings-container/settings-container.css\n// module id = 382\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".top-bar {\\n  position: absolute;\\n  width: 100%;\\n  top: 0;\\n  height: 50px;\\n  background: rgba(0,0,0,0.0);\\n  pointer-events: visible;\\n}\\n\\n.header {\\n  font-size: 35px;\\n  font-weight: 200;\\n  font-family: 'Permanent Marker', cursive;\\n  line-height: 50px;\\n  color: #fff;\\n  width: 100%;\\n  text-align: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/top-bar/top-bar.css\n// module id = 383\n// module chunks = 1","var map = {\n\t\"./af\": 113,\n\t\"./af.js\": 113,\n\t\"./ar\": 120,\n\t\"./ar-dz\": 114,\n\t\"./ar-dz.js\": 114,\n\t\"./ar-kw\": 115,\n\t\"./ar-kw.js\": 115,\n\t\"./ar-ly\": 116,\n\t\"./ar-ly.js\": 116,\n\t\"./ar-ma\": 117,\n\t\"./ar-ma.js\": 117,\n\t\"./ar-sa\": 118,\n\t\"./ar-sa.js\": 118,\n\t\"./ar-tn\": 119,\n\t\"./ar-tn.js\": 119,\n\t\"./ar.js\": 120,\n\t\"./az\": 121,\n\t\"./az.js\": 121,\n\t\"./be\": 122,\n\t\"./be.js\": 122,\n\t\"./bg\": 123,\n\t\"./bg.js\": 123,\n\t\"./bn\": 124,\n\t\"./bn.js\": 124,\n\t\"./bo\": 125,\n\t\"./bo.js\": 125,\n\t\"./br\": 126,\n\t\"./br.js\": 126,\n\t\"./bs\": 127,\n\t\"./bs.js\": 127,\n\t\"./ca\": 128,\n\t\"./ca.js\": 128,\n\t\"./cs\": 129,\n\t\"./cs.js\": 129,\n\t\"./cv\": 130,\n\t\"./cv.js\": 130,\n\t\"./cy\": 131,\n\t\"./cy.js\": 131,\n\t\"./da\": 132,\n\t\"./da.js\": 132,\n\t\"./de\": 135,\n\t\"./de-at\": 133,\n\t\"./de-at.js\": 133,\n\t\"./de-ch\": 134,\n\t\"./de-ch.js\": 134,\n\t\"./de.js\": 135,\n\t\"./dv\": 136,\n\t\"./dv.js\": 136,\n\t\"./el\": 137,\n\t\"./el.js\": 137,\n\t\"./en-au\": 138,\n\t\"./en-au.js\": 138,\n\t\"./en-ca\": 139,\n\t\"./en-ca.js\": 139,\n\t\"./en-gb\": 140,\n\t\"./en-gb.js\": 140,\n\t\"./en-ie\": 141,\n\t\"./en-ie.js\": 141,\n\t\"./en-nz\": 142,\n\t\"./en-nz.js\": 142,\n\t\"./eo\": 143,\n\t\"./eo.js\": 143,\n\t\"./es\": 145,\n\t\"./es-do\": 144,\n\t\"./es-do.js\": 144,\n\t\"./es.js\": 145,\n\t\"./et\": 146,\n\t\"./et.js\": 146,\n\t\"./eu\": 147,\n\t\"./eu.js\": 147,\n\t\"./fa\": 148,\n\t\"./fa.js\": 148,\n\t\"./fi\": 149,\n\t\"./fi.js\": 149,\n\t\"./fo\": 150,\n\t\"./fo.js\": 150,\n\t\"./fr\": 153,\n\t\"./fr-ca\": 151,\n\t\"./fr-ca.js\": 151,\n\t\"./fr-ch\": 152,\n\t\"./fr-ch.js\": 152,\n\t\"./fr.js\": 153,\n\t\"./fy\": 154,\n\t\"./fy.js\": 154,\n\t\"./gd\": 155,\n\t\"./gd.js\": 155,\n\t\"./gl\": 156,\n\t\"./gl.js\": 156,\n\t\"./gom-latn\": 157,\n\t\"./gom-latn.js\": 157,\n\t\"./he\": 158,\n\t\"./he.js\": 158,\n\t\"./hi\": 159,\n\t\"./hi.js\": 159,\n\t\"./hr\": 160,\n\t\"./hr.js\": 160,\n\t\"./hu\": 161,\n\t\"./hu.js\": 161,\n\t\"./hy-am\": 162,\n\t\"./hy-am.js\": 162,\n\t\"./id\": 163,\n\t\"./id.js\": 163,\n\t\"./is\": 164,\n\t\"./is.js\": 164,\n\t\"./it\": 165,\n\t\"./it.js\": 165,\n\t\"./ja\": 166,\n\t\"./ja.js\": 166,\n\t\"./jv\": 167,\n\t\"./jv.js\": 167,\n\t\"./ka\": 168,\n\t\"./ka.js\": 168,\n\t\"./kk\": 169,\n\t\"./kk.js\": 169,\n\t\"./km\": 170,\n\t\"./km.js\": 170,\n\t\"./kn\": 171,\n\t\"./kn.js\": 171,\n\t\"./ko\": 172,\n\t\"./ko.js\": 172,\n\t\"./ky\": 173,\n\t\"./ky.js\": 173,\n\t\"./lb\": 174,\n\t\"./lb.js\": 174,\n\t\"./lo\": 175,\n\t\"./lo.js\": 175,\n\t\"./lt\": 176,\n\t\"./lt.js\": 176,\n\t\"./lv\": 177,\n\t\"./lv.js\": 177,\n\t\"./me\": 178,\n\t\"./me.js\": 178,\n\t\"./mi\": 179,\n\t\"./mi.js\": 179,\n\t\"./mk\": 180,\n\t\"./mk.js\": 180,\n\t\"./ml\": 181,\n\t\"./ml.js\": 181,\n\t\"./mr\": 182,\n\t\"./mr.js\": 182,\n\t\"./ms\": 184,\n\t\"./ms-my\": 183,\n\t\"./ms-my.js\": 183,\n\t\"./ms.js\": 184,\n\t\"./my\": 185,\n\t\"./my.js\": 185,\n\t\"./nb\": 186,\n\t\"./nb.js\": 186,\n\t\"./ne\": 187,\n\t\"./ne.js\": 187,\n\t\"./nl\": 189,\n\t\"./nl-be\": 188,\n\t\"./nl-be.js\": 188,\n\t\"./nl.js\": 189,\n\t\"./nn\": 190,\n\t\"./nn.js\": 190,\n\t\"./pa-in\": 191,\n\t\"./pa-in.js\": 191,\n\t\"./pl\": 192,\n\t\"./pl.js\": 192,\n\t\"./pt\": 194,\n\t\"./pt-br\": 193,\n\t\"./pt-br.js\": 193,\n\t\"./pt.js\": 194,\n\t\"./ro\": 195,\n\t\"./ro.js\": 195,\n\t\"./ru\": 196,\n\t\"./ru.js\": 196,\n\t\"./sd\": 197,\n\t\"./sd.js\": 197,\n\t\"./se\": 198,\n\t\"./se.js\": 198,\n\t\"./si\": 199,\n\t\"./si.js\": 199,\n\t\"./sk\": 200,\n\t\"./sk.js\": 200,\n\t\"./sl\": 201,\n\t\"./sl.js\": 201,\n\t\"./sq\": 202,\n\t\"./sq.js\": 202,\n\t\"./sr\": 204,\n\t\"./sr-cyrl\": 203,\n\t\"./sr-cyrl.js\": 203,\n\t\"./sr.js\": 204,\n\t\"./ss\": 205,\n\t\"./ss.js\": 205,\n\t\"./sv\": 206,\n\t\"./sv.js\": 206,\n\t\"./sw\": 207,\n\t\"./sw.js\": 207,\n\t\"./ta\": 208,\n\t\"./ta.js\": 208,\n\t\"./te\": 209,\n\t\"./te.js\": 209,\n\t\"./tet\": 210,\n\t\"./tet.js\": 210,\n\t\"./th\": 211,\n\t\"./th.js\": 211,\n\t\"./tl-ph\": 212,\n\t\"./tl-ph.js\": 212,\n\t\"./tlh\": 213,\n\t\"./tlh.js\": 213,\n\t\"./tr\": 214,\n\t\"./tr.js\": 214,\n\t\"./tzl\": 215,\n\t\"./tzl.js\": 215,\n\t\"./tzm\": 217,\n\t\"./tzm-latn\": 216,\n\t\"./tzm-latn.js\": 216,\n\t\"./tzm.js\": 217,\n\t\"./uk\": 218,\n\t\"./uk.js\": 218,\n\t\"./ur\": 219,\n\t\"./ur.js\": 219,\n\t\"./uz\": 221,\n\t\"./uz-latn\": 220,\n\t\"./uz-latn.js\": 220,\n\t\"./uz.js\": 221,\n\t\"./vi\": 222,\n\t\"./vi.js\": 222,\n\t\"./x-pseudo\": 223,\n\t\"./x-pseudo.js\": 223,\n\t\"./yo\": 224,\n\t\"./yo.js\": 224,\n\t\"./zh-cn\": 225,\n\t\"./zh-cn.js\": 225,\n\t\"./zh-hk\": 226,\n\t\"./zh-hk.js\": 226,\n\t\"./zh-tw\": 227,\n\t\"./zh-tw.js\": 227\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 385;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 385\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nhighp float random_1_0(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform vec2 u_rendererResolution;\\nuniform vec2 u_resolution;\\nuniform vec2 u_mousePosition;\\nuniform sampler2D u_texture;\\n\\nfloat distanceToBox(vec2 rendererResolution) {\\n  vec2 min = (vec2(1.0) - rendererResolution / u_resolution) / 2.0 * u_resolution;\\n  vec2 max = ((vec2(1.0) - rendererResolution / u_resolution) / 2.0 + rendererResolution / u_resolution) * u_resolution;\\n  vec2 closestPos = clamp(gl_FragCoord.xy, min, max);\\n\\n  vec2 toBox = (closestPos - gl_FragCoord.xy);\\n  return pow(abs(length(toBox)) / 500.0, 0.55 + 0.1 * sin(3.0 * u_time));\\n}\\n\\nfloat boundingBoxCollision3d(vec3 origin, vec3 direction, vec2 rendererResolution) {\\n  vec2 bottom2d = (vec2(1.0) - rendererResolution / u_resolution) / 2.0 * u_resolution;\\n  vec2 top2d = ((vec2(1.0) - rendererResolution / u_resolution) / 2.0 + rendererResolution / u_resolution) * u_resolution;\\n\\n  vec3 bottom = vec3(bottom2d.x, bottom2d.y, 0.1);\\n  vec3 top = vec3(top2d.x, top2d.y, 0.2);\\n\\n  vec3 dirfrac = vec3(1,1,1) / direction;\\n\\n  vec3 t1 = (bottom - origin) * dirfrac;\\n  vec3 t2 = (top - origin) * dirfrac;\\n\\n  float tmin = max(max(min(t1.x, t2.x), min(t1.y, t2.y)), min(t1.z, t2.z));\\n  float tmax = min(min(max(t1.x, t2.x), max(t1.y, t2.y)), max(t1.z, t2.z));\\n\\n  if (tmax < 0.0 || tmin > tmax) return 10000.0;\\n\\n  return tmin;\\n}\\n\\nvoid main() {\\n  vec3 mousePosition = vec3(u_mousePosition.x, u_resolution.y - u_mousePosition.y, 3.0);\\n  vec3 backgroundPosition = vec3(gl_FragCoord.x, gl_FragCoord.y, 0.0);\\n\\n  vec3 background;\\n  vec2 rendererResolution = u_rendererResolution * u_zoom;\\n\\n  vec2 rendererScale = (u_resolution / rendererResolution);\\n  vec2 rendererOffset = (vec2(1.0) - rendererScale) / 2.0;\\n  vec2 rendererSamplePosition = rendererOffset + v_texCoord * rendererScale;\\n  vec3 rendererColor = texture(u_texture, rendererSamplePosition).xyz;\\n\\n  if (rendererSamplePosition.x > 1.0 || rendererSamplePosition.x < 0.0 || rendererSamplePosition.y > 1.0 || rendererSamplePosition.y < 0.0) {\\n    float boxDistance = distanceToBox(rendererResolution);\\n    float lightDistance = abs(length(backgroundPosition - mousePosition));\\n\\n    float lightIntesity = 1.0 - clamp(pow(lightDistance / 1500.0, 2.0), 0.0, 1.0);\\n\\n    vec3 toLight = normalize(mousePosition - backgroundPosition);\\n    float distanceToBox = boundingBoxCollision3d(backgroundPosition, toLight, rendererResolution);\\n\\n    if (distanceToBox != 10000.0 && lightDistance > distanceToBox) {\\n      lightIntesity *= clamp(pow(distanceToBox / 30.0, 1.0), 0.0, 1.0);\\n    }\\n\\n    background = (0.2 * lightIntesity + 0.8) * (0.15 + boxDistance) * vec3(0.15 + 0.5 * (1.0 - length(vec2(0.5) - v_texCoord)));\\n  }\\n  else {\\n    background = rendererColor;\\n  }\\n  outColor = vec4(background, 1.0);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify-loader!./src/app/renderer/render-view/shaders/render-view.frag\n// module id = 387\n// module chunks = 1","module.exports = \"#version 300 es\\n#define GLSLIFY 1\\n\\nin vec2 a_texCoord;\\nin vec4 a_position;\\n\\nout vec2 v_texCoord;\\n\\nvoid main() {\\n  gl_Position = a_position;\\n  v_texCoord = a_texCoord;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify-loader!./src/app/renderer/render-view/shaders/render-view.vert\n// module id = 388\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\nuniform vec2 u_resolution;\\nuniform sampler2D u_buffer_texture;\\n\\nvoid main() {\\n  float offset[5];\\n  offset[0] = -2.0;\\n  offset[1] = -1.0;\\n  offset[2] = 0.0;\\n  offset[3] = 1.0;\\n  offset[4] = 2.0;\\n\\n  float weightInverse[5];\\n  weightInverse[0] = 0.0625;\\n  weightInverse[1] = 0.25;\\n  weightInverse[2] = 0.375;\\n  weightInverse[3] = 0.25;\\n  weightInverse[4] = 0.0625;\\n  vec3 color = vec3(0.0, 0.0, 0.0);\\n\\n  for (int x = 0; x < 5; x++) {\\n    color += vec3(texture(u_buffer_texture, v_texCoord + vec2(offset[x] / u_resolution.x, 0))) * weightInverse[x];\\n  }\\n\\n\\toutColor = vec4(color, 1.0);\\n }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/bloom-program/shaders/bloom-horizontal.frag\n// module id = 389\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\nuniform vec2 u_resolution;\\nuniform sampler2D u_buffer_texture;\\n\\nvoid main() {\\n  float offset[5];\\n  offset[0] = -2.0;\\n  offset[1] = -1.0;\\n  offset[2] = 0.0;\\n  offset[3] = 1.0;\\n  offset[4] = 2.0;\\n\\n  float weightInverse[5];\\n  weightInverse[0] = 0.0625;\\n  weightInverse[1] = 0.25;\\n  weightInverse[2] = 0.375;\\n  weightInverse[3] = 0.25;\\n  weightInverse[4] = 0.0625;\\n  vec3 color = vec3(0.0, 0.0, 0.0);\\n\\n  for (int x = 0; x < 5; x++) {\\n    color += vec3(texture(u_buffer_texture, v_texCoord + vec2(0.0, offset[x] / u_resolution.y))) * weightInverse[x];\\n  }\\n\\n\\toutColor = vec4(color, 1.0);\\n }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/bloom-program/shaders/bloom-vertical.frag\n// module id = 390\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 a_texCoord;\\nin vec4 a_position;\\n\\nout vec2 v_texCoord;\\n\\nvoid main() {\\n  gl_Position = a_position;\\n  v_texCoord = a_texCoord;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/bloom-program/shaders/bloom.vert\n// module id = 391\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\nuniform sampler2D u_buffer_texture;\\n\\nvoid main() {\\n\\tvec3 color = vec3(texture(u_buffer_texture, v_texCoord));\\n\\n  float bloomThreshold = 0.7;\\n  if (color.r < bloomThreshold) color.r = 0.0;\\n  if (color.g < bloomThreshold) color.g = 0.0;\\n  if (color.b < bloomThreshold) color.b = 0.0;\\n\\n  outColor = vec4(color, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/bloom-program/shaders/threshold.frag\n// module id = 392\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 a_texCoord;\\nin vec4 a_position;\\n\\nout vec2 v_texCoord;\\n\\nvoid main() {\\n  gl_Position = a_position;\\n  v_texCoord = a_texCoord;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/bloom-program/shaders/threshold.vert\n// module id = 393\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\nuniform sampler2D u_mainTexture;\\nuniform sampler2D u_bloomTexture;\\n\\nuniform float u_bloomEnabled;\\nuniform float u_bloomAlpha;\\n\\nvoid main() {\\n  vec3 mainColor = texture(u_mainTexture, v_texCoord).xyz;\\n  vec3 bloomColor = u_bloomAlpha * mix(texture(u_bloomTexture, v_texCoord).xyz, vec3(0.0), 1.0 - u_bloomEnabled);\\n\\toutColor = vec4(mainColor + bloomColor, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/composition-program/shaders/composition.frag\n// module id = 394\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision mediump float;\\n#define GLSLIFY 1\\n\\nin vec2 a_texCoord;\\nin vec4 a_position;\\n\\nout vec2 v_texCoord;\\n\\nvoid main() {\\n  gl_Position = a_position;\\n  v_texCoord = a_texCoord;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/glslify!./src/app/renderer/composition-program/shaders/composition.vert\n// module id = 395\n// module chunks = 1","module.exports = \"<div class=\\\"loader\\\" *ngIf=\\\"settingsService.isLoadingSub | async\\\">\\n  <md-spinner class=\\\"spinner\\\"></md-spinner>\\n</div>\\n\\n<canvas width=\\\"512\\\" height=\\\"512\\\" id=\\\"renderCanvas\\\" #renderCanvas></canvas>\\n<top-bar></top-bar>\\n<fractal-settings></fractal-settings>\\n<object-settings></object-settings>\\n<render-options></render-options>\\n<!--<bottom-bar></bottom-bar>-->\\n\\n<!--<loading-dialog></loading-dialog>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 396\n// module chunks = 1","module.exports = \"<div class=\\\"bottom-bar\\\">\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/bottom-bar/bottom-bar.html\n// module id = 397\n// module chunks = 1","module.exports = \"<h1 style=\\\"font-weight: 200\\\" md-dialog-title>Loading scene..</h1>\\n<div md-dialog-content>\\n  <md-spinner class=\\\"spinner\\\"></md-spinner>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/loading-dialog/loading-dialog.html\n// module id = 398\n// module chunks = 1","module.exports = \"<div class=\\\"right-pane\\\" *ngIf=\\\"rayMarchingMode\\\">\\n  <div class=\\\"scroll\\\">\\n    <settings-container title=\\\"Fractal settings\\\" [expanded]=\\\"true\\\">\\n      <div class=\\\"property-box\\\">\\n        <div class=\\\"property-header\\\">Fractal type</div>\\n        <md-select [(ngModel)]=\\\"selelectedMaterial\\\" class=\\\"dropdown\\\" (change)=\\\"settingsService.fractalTypeSub.next($event.value)\\\">\\n          <md-option *ngFor=\\\"let fractal of fractals\\\" [value]=\\\"fractal.id\\\">\\n            {{ fractal.name }}\\n          </md-option>\\n        </md-select>\\n      </div>\\n\\n      <div class=\\\"property-box\\\">\\n        <div class=\\\"property-header\\\">Shape</div>\\n        <md-slider min=\\\"1\\\" max=\\\"19\\\" step=\\\"0.1\\\" value=\\\"10.0\\\" (input)=\\\"powerUpdate($event)\\\"></md-slider>\\n        <span class=\\\"data-label\\\">{{settingsService.powerObservable | async | number: '1.1-1'}}</span>\\n      </div>\\n\\n      <div class=\\\"property-box\\\">\\n        <div class=\\\"property-header\\\">Detail level</div>\\n        <md-slider min=\\\"100\\\" max=\\\"10000\\\" step=\\\"1\\\" value=\\\"1000\\\" (input)=\\\"detailLevelUpdate($event)\\\"></md-slider>\\n        <span class=\\\"data-label\\\">{{settingsService.detailLevelObservable | async | number: '1.0-0'}}</span>\\n      </div>\\n\\n      <div class=\\\"property-box\\\">\\n        <div class=\\\"property-header\\\">Max iterations</div>\\n        <md-slider min=\\\"1\\\" max=\\\"1000\\\" step=\\\"1\\\" value=\\\"300\\\" (input)=\\\"maxIterationsUpdate($event)\\\"></md-slider>\\n        <span class=\\\"data-label\\\">{{settingsService.maxIterationsObservable | async | number: '1.0-0'}}</span>\\n      </div>\\n\\n      <!--\\n        Menger sponge attributes\\n      -->\\n\\n      <div *ngIf=\\\"settingsService.mengerSponge.isEnabled\\\">\\n        <div *ngFor=\\\"let attribute of settingsService.mengerSponge.attributes\\\">\\n          <setting-attribute [attribute]=\\\"attribute\\\"></setting-attribute>\\n        </div>\\n      </div>\\n    </settings-container>\\n\\n    <settings-container title=\\\"Material settings\\\" [expanded]=\\\"true\\\">\\n\\n      <div *ngFor=\\\"let attribute of settingsService.materialSettings.attributes\\\">\\n        <setting-attribute [attribute]=\\\"attribute\\\"></setting-attribute>\\n      </div>\\n\\n      <!--<div class=\\\"property-box\\\">-->\\n        <!--<div class=\\\"property-header\\\">Material type</div>-->\\n        <!--<md-select [(ngModel)]=\\\"selelectedMaterial\\\" class=\\\"dropdown\\\" (change)=\\\"materialTypeChange($event)\\\">-->\\n          <!--<md-option *ngFor=\\\"let material of materials\\\" [value]=\\\"material.id\\\">-->\\n            <!--{{ material.name }}-->\\n          <!--</md-option>-->\\n        <!--</md-select>-->\\n      <!--</div>-->\\n\\n\\n      <!--<div class=\\\"property-box\\\">-->\\n        <!--<div class=\\\"property-header\\\">Color</div>-->\\n        <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n          <!--<input class=\\\"color-input\\\" [(ngModel)]=\\\"redClr\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">-->\\n        <!--</md-input-container>-->\\n        <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n          <!--<input class=\\\"color-input\\\" [(ngModel)]=\\\"greenClr\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">-->\\n        <!--</md-input-container>-->\\n        <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n          <!--<input class=\\\"color-input\\\" [(ngModel)]=\\\"blueClr\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">-->\\n        <!--</md-input-container>-->\\n        <!--&lt;!&ndash;<input class=\\\"color-picker\\\" [cpPosition]=\\\"'left'\\\" [(colorPicker)]=\\\"materialColor\\\" [style.background]=\\\"materialColor\\\" (colorPickerChange)=\\\"materialColorChanged($event)\\\"/>&ndash;&gt;-->\\n      <!--</div>-->\\n    </settings-container>\\n  <!--<div class=\\\"options-pane\\\">-->\\n    <!--<div class=\\\"info-header\\\">-->\\n      <!--Render settings-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"property-box\\\">-->\\n      <!--<div class=\\\"property-header\\\">Resolution</div>-->\\n      <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n        <!--<input class=\\\"resolution-input\\\" [(ngModel)]=\\\"_resolutionWidth\\\" mdInput (change)=\\\"resolutionUpdate()\\\" type=\\\"number\\\" #resolutionWidth>-->\\n      <!--</md-input-container>-->\\n      <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n        <!--<input class=\\\"resolution-input\\\" [(ngModel)]=\\\"_resolutionHeight\\\" mdInput (change)=\\\"resolutionUpdate()\\\" type=\\\"number\\\" #resolutionHeight>-->\\n      <!--</md-input-container>-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"property-box\\\">-->\\n      <!--<div class=\\\"property-header\\\">Detail level</div>-->\\n      <!--<md-slider min=\\\"100\\\" max=\\\"10000\\\" step=\\\"1\\\" value=\\\"1000\\\" (input)=\\\"detailLevelUpdate($event)\\\"></md-slider>-->\\n      <!--<span class=\\\"data-label\\\">{{settingsService.detailLevelObservable | async | number: '1.0-0'}}</span>-->\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"property-box\\\">-->\\n      <!--<div class=\\\"property-header\\\">Max iterations</div>-->\\n      <!--<md-slider min=\\\"1\\\" max=\\\"1000\\\" step=\\\"1\\\" value=\\\"300\\\" (input)=\\\"maxIterationsUpdate($event)\\\"></md-slider>-->\\n      <!--<span class=\\\"data-label\\\">{{settingsService.detailLevelObservable | async | number: '1.0-0'}}</span>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/fractal-settings/fractal-settings.html\n// module id = 399\n// module chunks = 1","module.exports = \"<div class=\\\"right-pane\\\" *ngIf=\\\"rayTracingMode\\\">\\n  <div class=\\\"scroll\\\">\\n    <settings-container title=\\\"Scene settings\\\" [expanded]=\\\"true\\\">\\n      <div class=\\\"property-header\\\">Default scenes</div>\\n      <md-select [(ngModel)]=\\\"sceneId\\\" class=\\\"dropdown\\\" (change)=\\\"sceneUpdate()\\\">\\n        <md-option *ngFor=\\\"let type of defaultScenes\\\" [value]=\\\"type.id\\\">\\n          {{ type.name }}\\n        </md-option>\\n      </md-select>\\n    </settings-container>\\n\\n    <div *ngIf=\\\"rayTracingMode && selectedObject != null\\\">\\n      <settings-container title=\\\"Object settings\\\" [expanded]=\\\"true\\\">\\n        <div class=\\\"vec3-header\\\">Position</div>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"position[0]\\\" mdInput (change)=\\\"positionUpdate()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"position[1]\\\" mdInput (change)=\\\"positionUpdate()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"position[2]\\\" mdInput (change)=\\\"positionUpdate()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n\\n        <div class=\\\"vec3-header\\\">Scale</div>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"scale[0]\\\" mdInput (change)=\\\"scaleUpdate()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"scale[1]\\\" mdInput (change)=\\\"scaleUpdate()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"scale[2]\\\" mdInput (change)=\\\"scaleUpdate()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n\\n        <div class=\\\"vec3-header\\\">Rotation</div>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"rotation[0]\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"rotation[1]\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n        <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n          <input class=\\\"vec3-input\\\" [(ngModel)]=\\\"rotation[2]\\\" mdInput (change)=\\\"updateRotation()\\\" type=\\\"number\\\">\\n        </md-input-container>\\n      </settings-container>\\n\\n      <settings-container title=\\\"Object material\\\" [expanded]=\\\"true\\\">\\n        <div class=\\\"property-header\\\">Material type</div>\\n        <md-select [(ngModel)]=\\\"materialType\\\" class=\\\"dropdown\\\" (change)=\\\"materialUpdate()\\\">\\n          <md-option *ngFor=\\\"let type of materials\\\" [value]=\\\"type.id\\\">\\n            {{ type.name }}\\n          </md-option>\\n        </md-select>\\n\\n        <!-- MATERIAL COLOR -->\\n        <div>\\n          <div class=\\\"property-header\\\">\\n            Material color\\n            <div class=\\\"color-circle\\\" [style.background-color]=\\\"'rgba(' + materialColor[0] + ',' + materialColor[1] + ',' + materialColor[2] + ',1)'\\\"></div>\\n          </div>\\n\\n          <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n            <input class=\\\"color-input\\\" [(ngModel)]=\\\"materialColor[0]\\\" mdInput (change)=\\\"materialUpdate()\\\" type=\\\"number\\\">\\n          </md-input-container>\\n          <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n            <input class=\\\"color-input\\\" [(ngModel)]=\\\"materialColor[1]\\\" mdInput (change)=\\\"materialUpdate()\\\" type=\\\"number\\\">\\n          </md-input-container>\\n          <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n            <input class=\\\"color-input\\\" [(ngModel)]=\\\"materialColor[2]\\\" mdInput (change)=\\\"materialUpdate()\\\" type=\\\"number\\\">\\n          </md-input-container>\\n        </div>\\n\\n\\n        <!-- DIFFUSE MATERIAL -->\\n        <div *ngIf=\\\"materialType == 0\\\">\\n          <div class=\\\"property-header\\\">Albedo</div>\\n          <md-slider\\n            min=\\\"0\\\"\\n            max=\\\"20\\\"\\n            step=\\\"0.01\\\"\\n            value=\\\"{{materialExtraParameter1}}\\\"\\n            (input)=\\\"materialExtraParameter1 = $event.value; materialUpdate()\\\"\\n          ></md-slider>\\n          <span class=\\\"data-label\\\">{{materialExtraParameter1 | number: '1.2-2'}}</span>\\n\\n          <div class=\\\"property-header\\\">Roughness</div>\\n          <md-slider\\n            min=\\\"0\\\"\\n            max=\\\"20\\\"\\n            step=\\\"0.01\\\"\\n            value=\\\"{{materialExtraParameter2}}\\\"\\n            (input)=\\\"materialExtraParameter2 = $event.value; materialUpdate()\\\"\\n          ></md-slider>\\n          <span class=\\\"data-label\\\">{{materialExtraParameter2 | number: '1.2-2'}}</span>\\n        </div>\\n\\n        <!-- GLOSSY MATERIAL -->\\n        <div *ngIf=\\\"materialType == 5\\\">\\n          <div class=\\\"property-header\\\">Shininess</div>\\n          <md-slider\\n            min=\\\"0\\\"\\n            max=\\\"20\\\"\\n            step=\\\"0.01\\\"\\n            value=\\\"{{materialExtraParameter1}}\\\"\\n            (input)=\\\"materialExtraParameter1 = $event.value; materialUpdate()\\\"\\n          ></md-slider>\\n          <span class=\\\"data-label\\\">{{materialExtraParameter1 | number: '1.2-2'}}</span>\\n        </div>\\n\\n        <!-- Emission MATERIAL -->\\n        <div *ngIf=\\\"materialType == 2\\\">\\n          <div class=\\\"property-header\\\">Emission rate</div>\\n          <md-slider\\n            min=\\\"0\\\"\\n            max=\\\"100\\\"\\n            step=\\\"0.01\\\"\\n            value=\\\"{{materialEmission}}\\\"\\n            (input)=\\\"materialEmission = $event.value; materialUpdate()\\\"\\n          ></md-slider>\\n          <span class=\\\"data-label\\\">{{materialEmission | number: '1.2-2'}}</span>\\n        </div>\\n      </settings-container>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/object-settings/object-settings.html\n// module id = 400\n// module chunks = 1","module.exports = \"<div class=\\\"left-pane\\\">\\n  <div class=\\\"scroll\\\">\\n    <settings-container title=\\\"Render status\\\" [expanded]=\\\"true\\\">\\n      <div class=\\\"property-box\\\">\\n        <span class=\\\"property-header\\\">Start/stop render</span>\\n        <span *ngIf=\\\"!(settingsService.shouldRenderSub.asObservable() | async)\\\">\\n          <button (click)=\\\"settingsService.shouldRender = true\\\" md-icon-button><md-icon style=\\\"color: #fff\\\">play_arrow</md-icon></button>\\n        </span>\\n        <span *ngIf=\\\"settingsService.shouldRenderSub.asObservable() | async\\\">\\n          <button (click)=\\\"settingsService.shouldRender = false\\\" md-icon-button><md-icon style=\\\"color: #fff\\\">pause</md-icon></button>\\n        </span>\\n      </div>\\n      <div class=\\\"property-box\\\" style=\\\"margin-top: 10px\\\">\\n        <span class=\\\"property-header\\\">Rendered samples</span>\\n        <span class=\\\"property-header\\\" style=\\\"font-weight: 400\\\">{{renderService.samples}}</span>\\n      </div>\\n      <div class=\\\"property-box\\\" style=\\\"margin-top: 20px\\\">\\n        <div class=\\\"property-header\\\">Move with <b>w, a, s, d</b></div>\\n      </div>\\n    </settings-container>\\n    <settings-container title=\\\"Render settings\\\" [expanded]=\\\"true\\\">\\n      <div class=\\\"property-box\\\">\\n        <div class=\\\"property-header\\\">Render type</div>\\n        <md-select [(ngModel)]=\\\"renderType\\\" class=\\\"dropdown\\\" (change)=\\\"settingsService.renderTypeSub.next($event.value)\\\">\\n          <md-option *ngFor=\\\"let renderType of renderTypes\\\" [value]=\\\"renderType.id\\\">\\n            {{ renderType.name }}\\n          </md-option>\\n        </md-select>\\n      </div>\\n\\n      <!--<div class=\\\"property-box\\\">-->\\n        <!--<div class=\\\"property-header\\\">Resolution</div>-->\\n        <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n          <!--<input class=\\\"resolution-input\\\" [(ngModel)]=\\\"resolutionWidth\\\" mdInput (change)=\\\"resolutionUpdate()\\\" type=\\\"number\\\">-->\\n        <!--</md-input-container>-->\\n        <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n          <!--<input class=\\\"resolution-input\\\" [(ngModel)]=\\\"resolutionHeight\\\" mdInput (change)=\\\"resolutionUpdate()\\\" type=\\\"number\\\">-->\\n        <!--</md-input-container>-->\\n      <!--</div>-->\\n\\n      <!--<div class=\\\"property-box\\\">-->\\n        <!--<div class=\\\"property-header\\\">Trace depth</div>-->\\n        <!--<md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">-->\\n          <!--<input class=\\\"resolution-input\\\" [(ngModel)]=\\\"resolutionWidth\\\" mdInput (change)=\\\"resolutionUpdate()\\\" type=\\\"number\\\">-->\\n        <!--</md-input-container>-->\\n      <!--</div>-->\\n\\n      <div class=\\\"property-box\\\" style=\\\"margin-top: 15px;\\\">\\n        <div class=\\\"property-header\\\">Render view zoom</div>\\n        <md-slider min=\\\"20\\\" max=\\\"300\\\" step=\\\"0.1\\\" value=\\\"100.0\\\" (input)=\\\"zoomSliderUpdate($event)\\\" #zoomSlider></md-slider>\\n        <span class=\\\"data-label\\\">{{settingsService.zoomSub.asObservable() | async }}x</span>\\n      </div>\\n\\n      <div *ngFor=\\\"let attribute of settingsService.renderSettings.attributes\\\">\\n        <setting-attribute [attribute]=\\\"attribute\\\"></setting-attribute>\\n      </div>\\n    </settings-container>\\n\\n    <settings-container title=\\\"Lightning\\\" [expanded]=\\\"true\\\">\\n      <div *ngFor=\\\"let attribute of settingsService.lightSettings.attributes\\\">\\n        <setting-attribute [attribute]=\\\"attribute\\\"></setting-attribute>\\n      </div>\\n\\n      <div class=\\\"property-box\\\">\\n        <div class=\\\"property-header\\\">Custom light dome texture</div>\\n        <input style=\\\"color: #fff; width: 170px; margin-top: 10px; font-weight: 200\\\" type=\\\"file\\\" (change)=\\\"imageUpload($event)\\\" />\\n      </div>\\n\\n    </settings-container>\\n\\n    <settings-container title=\\\"Render effects\\\" [expanded]=\\\"false\\\">\\n      <div *ngFor=\\\"let attribute of settingsService.renderEffectSettings.attributes\\\">\\n        <setting-attribute [attribute]=\\\"attribute\\\"></setting-attribute>\\n      </div>\\n    </settings-container>\\n\\n    <settings-container title=\\\"Post effects\\\" [expanded]=\\\"false\\\">\\n      <div *ngFor=\\\"let attribute of settingsService.bloomSettings.attributes\\\">\\n        <setting-attribute [attribute]=\\\"attribute\\\"></setting-attribute>\\n      </div>\\n    </settings-container>\\n\\n    <div class=\\\"options-pane\\\">\\n      <button class=\\\"pane-button\\\" (click)=\\\"downloadImage()\\\" md-raised-button>Save image</button>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/render-settings/render-settings.html\n// module id = 401\n// module chunks = 1","module.exports = \"<div class=\\\"property-box\\\">\\n  <div *ngIf=\\\"attribute.getValue().uiType == 'UI_TYPE_SLIDER'\\\">\\n    <div class=\\\"property-header\\\">{{attribute.getValue().name}}</div>\\n\\n    <md-slider\\n      min=\\\"{{attribute.getValue().uiAttributes.minValue}}\\\"\\n      max=\\\"{{attribute.getValue().uiAttributes.maxValue}}\\\"\\n      step=\\\"{{attribute.getValue().uiAttributes.stepSize}}\\\"\\n      value=\\\"{{(attribute | async ).value}}\\\"\\n      (input)=\\\"updateAttribute($event.value)\\\"\\n    ></md-slider>\\n    <span class=\\\"data-label\\\">{{(attribute.asObservable() | async).value | number: '1.2-2'}}</span>\\n  </div>\\n\\n  <div *ngIf=\\\"attribute.getValue().uiType == 'UI_TYPE_COLORPICKER'\\\">\\n    <div class=\\\"property-header\\\">\\n      {{attribute.getValue().name}}\\n      <div class=\\\"color-circle\\\" [style.background-color]=\\\"'rgba(' + redClr + ',' + greenClr + ',' + blueClr + ',1)'\\\"></div>\\n    </div>\\n\\n    <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n      <input class=\\\"color-input\\\" [(ngModel)]=\\\"redClr\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">\\n    </md-input-container>\\n    <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n      <input class=\\\"color-input\\\" [(ngModel)]=\\\"greenClr\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">\\n    </md-input-container>\\n    <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n      <input class=\\\"color-input\\\" [(ngModel)]=\\\"blueClr\\\" mdInput (change)=\\\"updateColor()\\\" type=\\\"number\\\">\\n    </md-input-container>\\n  </div>\\n\\n  <div *ngIf=\\\"attribute.getValue().uiType == 'UI_TYPE_DROPDOWN'\\\">\\n    <div class=\\\"property-header\\\">{{attribute.getValue().name}}</div>\\n    <md-select [(ngModel)]=\\\"dropdownSelection\\\" class=\\\"dropdown\\\" (change)=\\\"updateDropdown()\\\">\\n      <md-option *ngFor=\\\"let type of attribute.getValue().uiAttributes.alternatives\\\" [value]=\\\"type.id\\\">\\n        {{ type.name }}\\n      </md-option>\\n    </md-select>\\n  </div>\\n\\n  <div *ngIf=\\\"attribute.getValue().uiType == 'UI_TYPE_VEC2'\\\">\\n    <div class=\\\"property-header\\\">{{attribute.getValue().name}}</div>\\n    <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n      <input class=\\\"vec2-input\\\" [(ngModel)]=\\\"vec[0]\\\" mdInput (change)=\\\"updateVec2()\\\" type=\\\"number\\\">\\n    </md-input-container>\\n    <md-input-container dividerColor=\\\"accent\\\" mdSuffix=\\\"px\\\">\\n      <input class=\\\"vec2-input\\\" [(ngModel)]=\\\"vec[1]\\\" mdInput (change)=\\\"updateVec2()\\\" type=\\\"number\\\">\\n    </md-input-container>\\n  </div>\\n\\n  <div *ngIf=\\\"attribute.getValue().uiType == 'UI_TYPE_TOGGLE'\\\" style=\\\"margin-top: 10px;\\\">\\n    <span style=\\\"height: 50px;\\\">\\n       <md-slide-toggle [checked]=\\\"enabled\\\" class=\\\"property-toggle\\\" (change)=\\\"updateAttribute($event.checked ? 1.0 : 0.0)\\\">\\n         <span style=\\\"padding-left: 35px;\\\">\\n            {{attribute.getValue().name}}\\n         </span>\\n       </md-slide-toggle>\\n    </span>\\n\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/setting-attribute/setting-attribute.html\n// module id = 402\n// module chunks = 1","module.exports = \"<div class=\\\"options-pane\\\" [ngStyle]=\\\"{'height': expanded ? '' : '20px'}\\\">\\n  <div (click)=\\\"expanded = !expanded\\\" class=\\\"expand-button\\\" md-button>\\n    <button *ngIf=\\\"!expanded\\\" md-icon-button>\\n      <md-icon style=\\\"\\\">keyboard_arrow_down</md-icon>\\n    </button>\\n    <button *ngIf=\\\"expanded\\\" md-icon-button>\\n      <md-icon style=\\\"\\\">keyboard_arrow_up</md-icon>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"info-header\\\">{{title}}</div>\\n  <ng-content></ng-content>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/settings-container/settings-container.html\n// module id = 403\n// module chunks = 1","module.exports = \"<div class=\\\"top-bar\\\">\\n  <div class=\\\"header\\\">Pathtracer WebGL 2</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/top-bar/top-bar.html\n// module id = 404\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision lowp float;\\n#define GLSLIFY 1\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\n// Fractal uniforms\\nuniform float u_fractalType;\\nuniform float u_power;\\nuniform float u_minDistance;\\nuniform float u_maxIterations;\\nuniform float u_bailout;\\n\\n// Menger sponge\\nuniform float u_halfSpongeScale;\\nuniform float u_spongeScale;\\nuniform float u_spongeOffset;\\n\\n// Material uniforms\\nuniform float u_materialType;\\nuniform vec3 u_materialColor;\\nuniform float u_materialExtra1;\\nuniform float u_materialExtra2;\\n\\n// Global light uniforms\\nuniform float u_imageBasedLightning;\\nuniform vec3 u_globalLightColor;\\nuniform float u_fillBackgroundWithLight;\\nuniform float u_globalLightPower;\\nuniform float u_globalLightContrast;\\n\\n// Render effect settings\\nuniform float u_fogEnabled;\\nuniform float u_fogDistance;\\nuniform vec3 u_fogColor;\\n\\n// Renderer uniforms\\nuniform float time;\\nuniform float samples;\\nuniform int trace_depth;\\nuniform float global_lightning_enabled;\\nuniform int triangle_count;\\nuniform int object_count;\\nuniform vec2 resolution;\\n\\n// Camera uniforms\\nuniform float u_cameraYaw;\\nuniform float u_cameraPitch;\\nuniform vec3 camera_position;\\nuniform vec3 camera_direction;\\nuniform vec3 camera_right;\\nuniform vec3 camera_up;\\n\\nuniform sampler2D u_dome_texture;\\n\\nuniform sampler2D u_accumulated_texture;\\nuniform sampler2D u_buffer_texture;\\nuniform sampler2D u_triangle_texture;\\nuniform sampler2D u_triangle_index_texture;\\nuniform sampler2D u_bvh_texture;\\nuniform sampler2D u_light_texture;\\nuniform sampler2D u_material_texture;\\nuniform sampler2D u_objects_bvh_texture;\\nuniform sampler2D u_objects_texture;\\nuniform sampler2D u_light_sphere_texture;\\n\\n#define EPS 0.00000001\\n#define PI 3.14\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\n#define DIFFUSE_MATERIAL 0\\n#define SPECULAR_MATERIAL 1\\n#define EMISSION_MATERIAL 2\\n#define TRANSMISSION_MATERIAL 3\\n#define GLOSSY_MATERIAL 5\\n\\nstruct Collision {\\n  vec3 position;\\n  vec3 normal;\\n  vec2 uv;\\n  vec3 n0;\\n  vec3 n1;\\n  vec3 n2;\\n  int material_index;\\n  float distance;\\n};\\n\\nstruct Triangle {\\n  vec3 v0;\\n  vec3 edge1;\\n  vec3 edge2;\\n  vec3 n0;\\n  vec3 n1;\\n  vec3 n2;\\n  vec2 uv0;\\n  vec2 uv1;\\n  vec2 uv2;\\n  float triangle_area;\\n  int material_index;\\n};\\n\\nstruct Object {\\n  vec3 bounding_bottom;\\n  vec3 bounding_top;\\n  vec3 position;\\n  vec3 scale;\\n  float object_bvh_start_index;\\n  float triangle_start_index;\\n};\\n\\n// Ray\\nstruct Ray {\\n  vec3 start_position;\\n  vec3 direction;\\n};\\n\\nhighp float random(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\nmat3 rotationMatrixVector(vec3 v, float angle) {\\n  float c = cos(angle);\\n  float s = sin(angle);\\n\\n  return mat3(c + (1.0 - c) * v.x * v.x, (1.0 - c) * v.x * v.y - s * v.z, (1.0 - c) * v.x * v.z + s * v.y,\\n            (1.0 - c) * v.x * v.y + s * v.z, c + (1.0 - c) * v.y * v.y, (1.0 - c) * v.y * v.z - s * v.x,\\n            (1.0 - c) * v.x * v.z - s * v.y, (1.0 - c) * v.y * v.z + s * v.x, c + (1.0 - c) * v.z * v.z);\\n}\\n\\nRay createRay(vec2 pixel_position, int sample_step) {\\n\\n  mat3 cameraRotation = rotationMatrixVector(vec3(0, 1, 0), u_cameraYaw) * rotationMatrixVector(vec3(0, 0, 1), u_cameraPitch);\\n\\n  float width = resolution.x;\\n  float height = resolution.y;\\n\\n  float i = ((pixel_position.x / width) - 0.5) * width / height;\\n  float j = ((pixel_position.y / height) - 0.5);\\n  vec3 image_point = i * 1.5 * camera_right + j * 1.5 * camera_up + camera_position + cross(camera_up, camera_right);\\n\\n  vec3 dx = (camera_up / width);\\n  vec3 dy = (camera_right / height);\\n  vec3 rand_x = dx * random(vec2(pixel_position.x, pixel_position.y) * vec2(1.9898, 128.13) * (time + float(sample_step)));\\n  vec3 rand_y = dy * random(vec2(pixel_position.x, pixel_position.y) * vec2(134.9898, 36.342) * (time + float(sample_step)));\\n  image_point += rand_x + rand_y;\\n\\n  vec3 direction = normalize(cameraRotation * (image_point - camera_position));\\n\\n  return Ray(camera_position, direction);\\n}\\n\\n// Material\\nstruct Material {\\n  vec3 color;\\n  int material_type;\\n  float emission_rate;\\n  float material_parameter1;\\n  float material_parameter2;\\n};\\n\\nvec2 getSample(vec2 start_sample, vec2 sample_step, float resolution, float steps) {\\n  float s = start_sample.x + steps * sample_step.x;\\n  return vec2(fract(s), floor(s) / resolution);\\n}\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\nMaterial getMaterial(int material_index) {\\n  // Fetch material from texture\\n  vec2 start_sample = SAMPLE_STEP_512 * float(material_index) * 3.0;\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 2.0);\\n\\n  vec3 color = vec3(texture(u_material_texture, sample1));\\n  vec3 extra_data1 = vec3(texture(u_material_texture, sample2));\\n  vec3 extra_data2 = vec3(texture(u_material_texture, sample3));\\n\\n  int material_type = int(extra_data1.x);\\n  float emission_rate = extra_data1.y;\\n\\n  float material_parameter1 = extra_data2.x;\\n  float material_parameter2 = extra_data2.y;\\n\\n  return Material(color, material_type, emission_rate, material_parameter1, material_parameter2);\\n}\\n\\n#define DIFFUSE_MATERIAL 0\\n#define SPECULAR_MATERIAL 1\\n#define EMISSION_MATERIAL 2\\n#define TRANSMISSION_MATERIAL 3\\n#define GLOSSY_MATERIAL 5\\n\\nvec3 BRDF(Ray ray, Material material, vec2 uv, vec3 collision_normal, vec3 next_dir) {\\n\\n//  // Emission material\\n//  if (material.material_type == EMISSION_MATERIAL) {\\n//    return material.color;\\n//  }\\n//\\n//  // Specular material\\n//  if (material.material_type == SPECULAR_MATERIAL) {\\n//    return material.color;\\n//  }\\n//\\n//  // Transmission material\\n//  if (material.material_type == TRANSMISSION_MATERIAL) {\\n//    return material.color;\\n//  }\\n//\\n//  // Glossy material\\n//  if (material.material_type == GLOSSY_MATERIAL) {\\n//    return material.color;\\n//  }\\n\\n  // Lambertian diffuse material\\n  if (material.material_type == DIFFUSE_MATERIAL) {\\n    float albedo = material.material_parameter1; // material parameter 1 is albedo\\n    float roughness = material.material_parameter2; // material parameter 2 is roughness\\n    vec3 view_direction = -1.0 * ray.direction;\\n\\n    // calculate intermediary values\\n    float NdotL = dot(collision_normal, next_dir);\\n    float NdotV = dot(collision_normal, view_direction);\\n\\n    float angleVN = acos(NdotV);\\n    float angleLN = acos(NdotL);\\n\\n    float alpha = max(angleVN, angleLN);\\n    float beta = min(angleVN, angleLN);\\n    float gamma = dot(view_direction - collision_normal * dot(view_direction, collision_normal), next_dir - collision_normal * dot(next_dir, collision_normal));\\n\\n    float roughnessSquared = roughness * roughness;\\n\\n    // calculate A and B\\n    float A = 1.0 - 0.5 * (roughnessSquared / (roughnessSquared + 0.57));\\n    float B = 0.45 * (roughnessSquared / (roughnessSquared + 0.09));\\n    float C = sin(alpha) * tan(beta);\\n\\n    // put it all together\\n    float L1 = max(0.0, NdotL) * (A + B * max(0.0, gamma) * C);\\n\\n    // get the final color\\n    return material.color * L1;\\n  }\\n\\n  return material.color;\\n}\\n\\n#define DIFFUSE_MATERIAL 0\\n#define SPECULAR_MATERIAL 1\\n#define EMISSION_MATERIAL 2\\n#define TRANSMISSION_MATERIAL 3\\n#define GLOSSY_MATERIAL 5\\n\\nvec3 PDF(Ray ray, Material material, vec3 collision_normal, float iteration, inout float distribution) {\\n  vec3 real_normal = dot(collision_normal, ray.direction) > 0.0 ? -1.0 * collision_normal : collision_normal;\\n  vec3 next_dir;\\n\\n  if (material.material_type == DIFFUSE_MATERIAL) {\\n    float r1 = 2.0 * 3.14 * random(v_texCoord * vec2(0.24, 78.233) * (time + 32.0 * iteration));\\n    float r2 = random(v_texCoord * vec2(63.7264, 10.873) * (time + 12.0 * iteration));\\n    float r2s = sqrt(r2);\\n\\n    vec3 w = collision_normal;\\n\\n    vec3 u = normalize(cross(mix(vec3(1,0,0), vec3(0,1,0), step(0.1, abs(w.x))), w));\\n    vec3 v = cross(w, u);\\n\\n    // compute cosine weighted random ray direction on hemisphere\\n    next_dir = normalize(u * cos(r1) * r2s + v * sin(r1) * r2s + w * sqrt(1.0 - r2));\\n\\n    return next_dir;\\n  }\\n\\n  // Fully specular material\\n  if (material.material_type == SPECULAR_MATERIAL) {\\n    return normalize(ray.direction - 2.0 * dot(ray.direction, collision_normal) * collision_normal);\\n  }\\n\\n  // Glossy material\\n  if (material.material_type == GLOSSY_MATERIAL) {\\n    vec3 reflected = normalize(ray.direction - 2.0 * dot(ray.direction, collision_normal) * collision_normal);\\n\\n    float r1 = 2.0 * 3.14 * random(v_texCoord * vec2(521.9898, 2321.233) * (time + 100.0 * iteration));\\n    float r2 = random(v_texCoord * vec2(2631.7264, 5.873) * (time + 12.0 * iteration));\\n    float r2s = pow(r2, material.material_parameter1);\\n\\n    vec3 w = reflected;\\n    vec3 u = normalize(cross(mix(vec3(1,0,0), vec3(0,1,0), step(0.1, abs(w.x))), w));\\n    vec3 v = cross(w, u);\\n\\n    // compute cosine weighted random ray direction on hemisphere\\n    next_dir = normalize(u * cos(r1) * r2s + v * sin(r1) * r2s + w * sqrt(1.0 - r2));\\n    return next_dir;\\n  }\\n\\n  if (material.material_type == TRANSMISSION_MATERIAL) {\\n    bool into = dot(collision_normal, real_normal) > 0.0; // is ray entering or leaving refractive material?\\n    float nc = 1.0;  // Index of Refraction air\\n    float nt = 1.5;  // Index of Refraction glass/water\\n    float nnt = into ? nc / nt : nt / nc;  // IOR ratio of refractive materials\\n    float ddn = dot(ray.direction, real_normal);\\n    float cos2t = 1.0 - nnt*nnt * (1.0 - ddn*ddn);\\n\\n    if (cos2t < 0.0) // total internal reflection\\n    {\\n        next_dir = normalize(ray.direction - collision_normal * 2.0 * dot(collision_normal, ray.direction));\\n    }\\n    else // cos2t > 0\\n    {\\n      // compute direction of transmission ray\\n      vec3 tdir = ray.direction * nnt;\\n      tdir -= normalize(collision_normal * ((into ? 1.0 : -1.0) * (ddn * nnt + sqrt(cos2t))));\\n\\n      float R0 = (nt - nc)*(nt - nc) / (nt + nc)*(nt + nc);\\n      float c = 1.0 - (into ? -ddn : dot(tdir, collision_normal));\\n      float Re = R0 + (1.0 - R0) * c * c * c * c * c;\\n      float Tr = 1.0 - Re; // Transmission\\n      float P = 0.25 + 0.5 * Re;\\n      float RP = Re / P;\\n      float TP = Tr / (1.0 - P);\\n\\n      // randomly choose reflection or transmission ray\\n      float rand = random(v_texCoord * vec2(86.425, 145.233) * (time + iteration));\\n      if (rand < 0.2) // reflection ray\\n      {\\n        distribution = RP;\\n        next_dir = normalize(ray.direction - collision_normal * 2.0 * dot(collision_normal, ray.direction));\\n      }\\n      else // transmission ray\\n      {\\n        distribution = TP;\\n        next_dir = normalize(tdir);\\n      }\\n\\n      return next_dir;\\n    }\\n  }\\n\\n  return vec3(0,0,0);\\n}\\n\\n// Triangle\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\nTriangle GetTriangleFromIndex(float triangle_index) {\\n  // Fetch triangle from texture\\n  vec2 start_sample = SAMPLE_STEP_2048 * triangle_index * 11.0;\\n\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 2.0);\\n  vec2 sample4 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 3.0);\\n  vec2 sample5 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 4.0);\\n  vec2 sample6 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 5.0);\\n  vec2 sample7 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 6.0);\\n  vec2 sample8 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 7.0);\\n  vec2 sample9 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 8.0);\\n  vec2 sample10 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 9.0);\\n\\n  vec3 v0 = vec3(texture(u_triangle_texture, sample1));\\n  vec3 edge1 = vec3(texture(u_triangle_texture, sample2));\\n  vec3 edge2 = vec3(texture(u_triangle_texture, sample3));\\n\\n  vec3 n0 = vec3(texture(u_triangle_texture, sample4));\\n  vec3 n1 = vec3(texture(u_triangle_texture, sample5));\\n  vec3 n2 = vec3(texture(u_triangle_texture, sample6));\\n\\n  vec2 uv0 = vec2(texture(u_triangle_texture, sample7));\\n  vec2 uv1 = vec2(texture(u_triangle_texture, sample8));\\n  vec2 uv2 = vec2(texture(u_triangle_texture, sample9));\\n\\n  int material_index = int(texture(u_triangle_texture, sample10).x);\\n  float triangle_area = texture(u_light_texture, sample10).z;\\n\\n  return Triangle(v0, edge1, edge2, n0, n1, n2, uv0, uv1, uv2, triangle_area, material_index);\\n}\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\nfloat getTriangleIndex(float stackIdx) {\\n  vec2 start_sample = SAMPLE_STEP_1024 * stackIdx;\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_1024, 1024.0, 0.0);\\n\\n  vec4 triangle_index_slot = texture(u_triangle_index_texture, sample1);\\n  return triangle_index_slot.x;\\n}\\n\\nfloat triangleIntersection(Ray ray, Triangle triangle, vec3 object_position, inout Collision collision_0, float closest_collision_distance) {\\n  vec3 v0_0 = object_position + triangle.v0;\\n\\n  //Begin calculating determinant - also used to calculate u parameter\\n  vec3 P = cross(ray.direction, triangle.edge2);\\n  float det = dot(triangle.edge1, P);\\n\\n  //Distance from vertex1 to ray origin\\n  vec3 T = ray.start_position - v0_0;\\n  float u = dot(T, P);\\n  vec3 Q = cross(T, triangle.edge1);\\n  float v = dot(ray.direction, Q);\\n  float t = dot(triangle.edge2, Q);\\n\\n  if(t < EPS || v < 0.0 || u+v > det || u < 0.0 || u > det || (det > -EPS && det < EPS)) return -1.0;\\n\\n  float inv_det = 1.0 / det;\\n\\n  collision_0.position = ray.start_position + inv_det * t * ray.direction;\\n  collision_0.distance = length(ray.start_position - collision_0.position);\\n\\n  if (closest_collision_distance < collision_0.distance) return -1.0;\\n\\n  collision_0.material_index = triangle.material_index;\\n\\n  u = u * inv_det;\\n  v = v * inv_det;\\n  collision_0.uv = (1.0 - u - v) * triangle.uv0 + u * triangle.uv1 + v * triangle.uv2;\\n  collision_0.normal = (1.0 - u - v) * triangle.n0 + u * triangle.n1 + v * triangle.n2;\\n\\n  return 1.0;\\n}\\n\\n//float triangleIntersection(Ray ray, Triangle triangle, vec3 object_position, inout Collision collision, float closest_collision_distance) {\\n//  vec3 e1 = triangle.edge1;\\n//  vec3 e2 = triangle.edge2;\\n//\\n//  vec3 normal = normalize(cross(e1,e2));\\n//  float b = dot(normal, ray.direction);\\n//\\n//  vec3 w0 = ray.start_position - triangle.v0;\\n//  float a = -dot(normal, w0);\\n//  float t = a / b;\\n//\\n//  vec3 p = ray.start_position + t * ray.direction;\\n//  float uu, uv, vv, wu, wv, inverseD;\\n//  uu = dot(e1,e1);\\n//  uv = dot(e1,e2);\\n//  vv = dot(e2,e2);\\n//\\n//  vec3 w = p - triangle.v0;\\n//  wu = dot(w, e1);\\n//  wv = dot(w, e2);\\n//  inverseD = uv * uv - uu * vv;\\n//  inverseD = 1.0 / inverseD;\\n//\\n//  float u = (uv * wv - vv * wu) * inverseD;\\n//  if (u < 0.0 || u > 1.0) return -1.0;\\n//\\n//  float v = (uv * wu - uu * wv) * inverseD;\\n//  if (v < 0.0 || (u + v) > 1.0) return -1.0;\\n//\\n//  collision.position = p; //ray.start_position + inverseD * t * ray.direction;\\n//  collision.distance = length(ray.start_position - collision.position);\\n//\\n//  //if (closest_collision_distance < collision.distance) return -1.0;\\n//\\n//  collision.material_index = triangle.material_index;\\n//  collision.uv = (1.0 - u - v) * triangle.uv0 + u * triangle.uv1 + v * triangle.uv2;\\n//  collision.normal = (1.0 - u - v) * triangle.n0 + u * triangle.n1 + v * triangle.n2;\\n//\\n//  return 1.0;\\n//}\\n\\n// BBOX\\nbool pointInsideBox(vec3 bottom, vec3 top, vec3 point) {\\n  return (bottom.x < point.x && bottom.y < point.y && bottom.z < point.z && top.x > point.x && top.y > point.y && top.z > point.z);\\n}\\n\\nfloat boundingBoxCollision_0(vec3 bottom, vec3 top, Ray r) {\\n  vec3 dirfrac = vec3(1,1,1) / r.direction;\\n\\n  vec3 t1 = (bottom - r.start_position) * dirfrac;\\n  vec3 t2 = (top - r.start_position) * dirfrac;\\n\\n  float tmin = max(max(min(t1.x, t2.x), min(t1.y, t2.y)), min(t1.z, t2.z));\\n  float tmax = min(min(max(t1.x, t2.x), max(t1.y, t2.y)), max(t1.z, t2.z));\\n\\n  return (tmax < 0.0 || tmin > tmax) ? 10000.0 : tmin;\\n}\\n\\n// Scene\\n\\nvoid getObjectAtIndex(int index, inout Object object_1) {\\n  vec2 start_sample = SAMPLE_STEP_512 * float(index) * 5.0;\\n\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 2.0);\\n  vec2 sample4 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 3.0);\\n  vec2 sample5 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 4.0);\\n\\n  vec3 bottom_bbox = vec3(texture(u_objects_texture, sample1));\\n  vec3 top_bbox = vec3(texture(u_objects_texture, sample2));\\n  vec3 position = vec3(texture(u_objects_texture, sample3));\\n  vec3 scale = vec3(texture(u_objects_texture, sample4));\\n  vec3 extra_data = vec3(texture(u_objects_texture, sample5));\\n\\n  // Triangle model\\n  float bvh_start_index = extra_data.x;\\n  float triangle_start_index = extra_data.y;\\n\\n  object_1 = Object(bottom_bbox, top_bbox, position, scale, bvh_start_index, triangle_start_index);\\n}\\n\\nfloat boundingBoxCollision_1(vec3 bottom, vec3 top, Ray r) {\\n  vec3 dirfrac = vec3(1,1,1) / r.direction;\\n\\n  vec3 t1 = (bottom - r.start_position) * dirfrac;\\n  vec3 t2 = (top - r.start_position) * dirfrac;\\n\\n  float tmin = max(max(min(t1.x, t2.x), min(t1.y, t2.y)), min(t1.z, t2.z));\\n  float tmax = min(min(max(t1.x, t2.x), max(t1.y, t2.y)), max(t1.z, t2.z));\\n\\n  return (tmax < 0.0 || tmin > tmax) ? 10000.0 : tmin;\\n}\\n\\nstruct BVHNode {\\n  vec3 bottom_bbox;\\n  vec3 top_bbox;\\n  float is_leaf;\\n  float distance;\\n  float extra_data1;\\n  float extra_data2;\\n  float node_index;\\n  float parent_index;\\n  float sibling_index;\\n};\\n\\nvoid getNodeData(float index, float start_index, Ray ray, inout BVHNode node_0) {\\n  vec2 start_sample = SAMPLE_STEP_2048 * (index + start_index) * 4.0;\\n\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 2.0);\\n  vec2 sample4 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 3.0);\\n\\n  node_0.bottom_bbox = vec3(texture(u_objects_bvh_texture, sample1));\\n  node_0.top_bbox = vec3(texture(u_objects_bvh_texture, sample2));\\n\\n  vec3 extra_data1 = vec3(texture(u_objects_bvh_texture, sample3));\\n  node_0.is_leaf = extra_data1.x;\\n  node_0.extra_data1 = extra_data1.y;\\n  node_0.extra_data2 = extra_data1.z;\\n\\n  vec3 extra_data2 = vec3(texture(u_objects_bvh_texture, sample4));\\n  node_0.parent_index = extra_data2.x;\\n  node_0.sibling_index = extra_data2.y;\\n\\n//  node.distance = boundingBoxCollision(node.bottom_bbox, node.top_bbox, ray, node.is_leaf);\\n\\n  node_0.node_index = index;\\n}\\n\\nvoid processLeaf(BVHNode node, inout Collision closest_collision_2352739786, Ray ray, float triangle_start_index_2352739786, Object object_0) {\\n  float triangle_count_2352739786 = node.extra_data1;\\n  float start_triangle_index = node.extra_data2 + triangle_start_index_2352739786;\\n\\n  float current_index = start_triangle_index;\\n  float end_index = start_triangle_index + triangle_count_2352739786;\\n\\n  Collision collision;\\n  for (float idx = 0.0; idx < triangle_count_2352739786; idx++) {\\n    Triangle triangle = GetTriangleFromIndex(getTriangleIndex(start_triangle_index + idx));\\n\\n    if (triangleIntersection(ray, triangle, object_0.position, collision, closest_collision_2352739786.distance) == 1.0) {\\n      closest_collision_2352739786 = collision;\\n    }\\n  }\\n}\\n\\nvoid traverseObjectTree(Ray ray, inout Collision closest_collision_2352739786, Object object) {\\n  float start_index_2352739786 = object.object_bvh_start_index;\\n  float triangle_start_index = object.triangle_start_index;\\n\\n  Collision collision;\\n  BVHNode node;\\n  BVHNode left_node;\\n  BVHNode right_node;\\n\\n  //float stack[32];\\n  float[] stack = float[] (.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0);\\n  int stackIdx = 1;\\n\\n  for (int i = 0; i < 100; i++) {\\n    if (stackIdx < 1) return;\\n\\n    float box_index = stack[--stackIdx];\\n\\n    // Fetch node data\\n    getNodeData(box_index, start_index_2352739786, ray, node);\\n\\n    if (node.is_leaf == 0.0) {\\n      // Check collision with bounding box\\n      float collision_distance = 0.0;\\n\\n      getNodeData(node.extra_data1, start_index_2352739786, ray, left_node);\\n      getNodeData(node.extra_data2, start_index_2352739786, ray, right_node);\\n\\n      left_node.distance = boundingBoxCollision_1(left_node.bottom_bbox + object.position, left_node.top_bbox + object.position, ray);\\n      right_node.distance = boundingBoxCollision_1(right_node.bottom_bbox + object.position, right_node.top_bbox + object.position, ray);\\n\\n      float near_distance = min(left_node.distance, right_node.distance);\\n      float far_distance = max(left_node.distance, right_node.distance);\\n\\n      float mixer = clamp(step(right_node.distance, left_node.distance), 0.0, 1.0);\\n      float near_child = mix(node.extra_data1, node.extra_data2, mixer);\\n      float far_child = mix(node.extra_data2, node.extra_data1, mixer);\\n\\n      if (far_distance < closest_collision_2352739786.distance) {\\n        stack[stackIdx++] = far_child; // Set left child index: extra_data1 = left index\\n        stack[stackIdx++] = near_child; // Set left child index: extra_data1 = left index\\n      }\\n      else if (near_distance < closest_collision_2352739786.distance) {\\n        stack[stackIdx++] = near_child; // Set left child index: extra_data1 = left index\\n      }\\n\\n      // Return if stack index exceeds stack size\\n      if (stackIdx > 31) return;\\n    }\\n    else {\\n      processLeaf(node, closest_collision_2352739786, ray, triangle_start_index, object);\\n    }\\n  }\\n}\\n\\nvec3 lightSphereContribution(Ray ray) {\\n  vec3 sun_position = normalize(vec3(1.0, 1.0, 1.0));\\n  vec3 position = vec3(0,0,0);\\n  float radius = 100.0;\\n\\n  vec3 op = position - ray.start_position;\\n  float t, epsilon = 0.0001;\\n  float b = dot(op, ray.direction);\\n  float disc = b * b - dot(op, op) + radius * radius;\\n  if (disc < 0.0) return vec3(0,0,0);\\n  else disc = sqrt(disc);\\n\\n  t = (t = b - disc) > epsilon ? t : ((t = b + disc) > epsilon ? t : 0.0);\\n\\n  if (t < 0.01)\\n    return vec3(0,0,0);\\n\\n  vec3 collision_position = (ray.start_position + ray.direction * t) / 100.0;\\n  vec3 normal = normalize(collision_position);\\n  float u = 0.5 - atan(normal.z, normal.x) / 6.28;\\n  float v = 0.5 - 2.0 * asin(normal.y) / 6.28;\\n\\n  vec3 clr = texture(u_dome_texture, vec2(u,v)).rgb;\\n  return clr;\\n}\\n\\n// Fractal uniform\\n\\nfloat mandelbulbDe(vec3 pos) {\\n  int Iterations = 10;\\n\\n  vec3 z = pos;\\n  float dr = 1.0;\\n  float r = 0.0;\\n\\n  for (int i = 0; i < Iterations; i++) {\\n    r = length(z);\\n    if (r > 3.0)\\n      break;\\n\\n    // Convert to polar coordinates\\n    float theta = acos(z.z/r);\\n    float phi = atan(z.y, z.x);\\n    dr = pow(r, u_power - 1.0) * u_power * dr + 1.0;\\n\\n    // Scale and rotate the point\\n    float zr = pow(r, u_power);\\n    theta = theta * u_power;\\n    phi = phi * u_power;\\n\\n    z = zr * vec3(sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta));\\n    z += pos;\\n  }\\n\\n  float mandelBulbDistance = 0.5 * log(r) * r / dr;\\n  return mandelBulbDistance;\\n}\\n\\nfloat mengerSpongeDe(vec3 w) {\\n  int Iterations = 5;\\n  vec3 offset = vec3(u_spongeOffset);\\n  float scale = u_spongeScale;\\n\\n  w = (w * 0.5 + vec3(0.5)) * scale;  // scale [-1, 1] range to [0, 1]\\n\\n  vec3 v = abs(w - u_halfSpongeScale) - u_halfSpongeScale;\\n  float d1 = max(v.x, max(v.y, v.z));     // distance to the box\\n  float d = d1;\\n  float p = 1.0;\\n  vec3 cd = v;\\n\\n  for (int i = 0; i < Iterations; i++) {\\n    vec3 a = mod(3.0 * w * p, 3.0);\\n    p *= 3.0;\\n\\n    v = vec3(0.5) - abs(a - vec3(1.5)) + offset;\\n\\n    // distance inside the 3 axis aligned square tubes\\n    d1 = min(max(v.x, v.z), min(max(v.x, v.y), max(v.y, v.z))) / p;\\n\\n    // intersection\\n    d = max(d, d1);\\n  }\\n\\n  // The distance estimate, min distance, and fractional iteration count\\n  return d * 2.0;\\n}\\n\\nfloat distanceEstimator(vec3 pos) {\\n  if (u_fractalType == 0.0) {\\n    return mandelbulbDe(pos);\\n  }\\n\\n  if (u_fractalType == 1.0) {\\n    return mengerSpongeDe(pos);\\n  }\\n\\n  return 0.0;\\n}\\n\\n//float distanceEstimator(vec3 pos) {\\n//  int Iterations = 10;\\n//\\n//  vec3 z = pos;\\n//  float dr = 1.0;\\n//  float r = 0.0;\\n//\\n//  for (int i = 0; i < Iterations; i++) {\\n//    r = length(z);\\n//    if (r > 3.0)\\n//      break;\\n//\\n//    // Convert to polar coordinates\\n//    float theta = acos(z.z/r);\\n//    float phi = atan(z.y, z.x);\\n//    dr = pow(r, Power - 1.0) * Power * dr + 1.0;\\n//\\n//    // Scale and rotate the point\\n//    float zr = pow(r, Power);\\n//    theta = theta * Power;\\n//    phi = phi * Power;\\n//\\n//    z = zr * vec3(sin(theta) * cos(phi), sin(theta) * sin(phi), cos(theta));\\n//    z += pos;\\n//  }\\n//\\n//  float mandelBulbDistance = 0.5 * log(r) * r / dr;\\n//  return mandelBulbDistance;\\n//}\\n\\n//float distanceEstimator(vec3 w) {\\n//  int Iterations = 5;\\n//  vec3 offset = vec3(spongeOffset);\\n//  float scale = spongeScale;\\n//\\n//  w = (w * 0.5 + vec3(0.5)) * scale;  // scale [-1, 1] range to [0, 1]\\n//\\n//  vec3 v = abs(w - halfSpongeScale) - halfSpongeScale;\\n//  float d1 = max(v.x, max(v.y, v.z));     // distance to the box\\n//  float d = d1;\\n//  float p = 1.0;\\n//  vec3 cd = v;\\n//\\n//  for (int i = 0; i < Iterations; i++) {\\n//    vec3 a = mod(3.0 * w * p, 3.0);\\n//    p *= 3.0;\\n//\\n//    v = vec3(0.5) - abs(a - vec3(1.5)) + offset;\\n//\\n//    // distance inside the 3 axis aligned square tubes\\n//    d1 = min(max(v.x, v.z), min(max(v.x, v.y), max(v.y, v.z))) / p;\\n//\\n//    // intersection\\n//    d = max(d, d1);\\n//  }\\n//\\n//  // The distance estimate, min distance, and fractional iteration count\\n//  return d * 2.0;\\n//}\\n\\n//float distanceEstimator(vec3 z) {\\n//  int Iterations = 20;\\n//  float Scale = 10.0;\\n//\\n//  vec3 a1 = vec3(1,1,1);\\n//\\tvec3 a2 = vec3(-1,-1,1);\\n//\\tvec3 a3 = vec3(1,-1,-1);\\n//\\tvec3 a4 = vec3(-1,1,-1);\\n//\\tvec3 c;\\n//\\tfloat dist, d;\\n//\\n//  int n = 0;\\n//\\tfor (n = 0; n < Iterations; n++) {\\n//    c = a1;\\n//    dist = length(z - a1);\\n//\\n//    d = length(z-a2);\\n//    if (d < dist) {\\n//      c = a2;\\n//      dist=d;\\n//    }\\n//\\n//    d = length(z-a3);\\n//    if (d < dist) {\\n//      c = a3;\\n//      dist=d;\\n//    }\\n//\\n//    d = length(z-a4);\\n//    if (d < dist) {\\n//      c = a4;\\n//      dist=d;\\n//    }\\n//\\n//\\t\\tz = Scale * z - c * (Scale - 1.0);\\n//\\t}\\n//\\n//\\treturn length(z) * pow(Scale, float(-n));\\n//}\\n\\n//const float minRadius2 = 0.1;\\n//const float fixedRadius2 = 0.2;\\n//\\n//void sphereFold(inout vec3 z, inout float dz) {\\n//\\tfloat r2 = dot(z,z);\\n//\\tif (r2 < minRadius2) {\\n//\\t\\t// linear inner scaling\\n//\\t\\tfloat temp = (fixedRadius2 / minRadius2);\\n//\\t\\tz *= temp;\\n//\\t\\tdz*= temp;\\n//\\t} else if (r2 < fixedRadius2) {\\n//\\t\\t// this is the actual sphere inversion\\n//\\t\\tfloat temp = fixedRadius2 / r2;\\n//\\t\\tz *= temp;\\n//\\t\\tdz*= temp;\\n//\\t}\\n//}\\n//\\n//void boxFold(inout vec3 z, inout float dz) {\\n//  z = clamp(z, -1.0, 1.0) * 2.0 - z;\\n//}\\n//\\n//float distanceEstimator(vec3 z) {\\n//  int Iterations = 100;\\n//  float Scale = 1.0;\\n//\\n//  vec3 offset = z;\\n//  float dr = 1.0;\\n//  for (int n = 0; n < Iterations; n++) {\\n//    boxFold(z,dr);       // Reflect\\n//    sphereFold(z,dr);    // Sphere Inversion\\n//\\n//    z = Scale*z + offset;  // Scale & Translate\\n//    dr = dr * abs(Scale) + 1.0;\\n//  }\\n//  float r = length(z);\\n//  return r/abs(dr);\\n//}\\n\\nvec3 calculateNormal(vec3 pos) {\\n  float e = 0.000001;\\n  float n = distanceEstimator(pos);\\n  float dx = distanceEstimator(pos + vec3(e, 0, 0)) - n;\\n  float dy = distanceEstimator(pos + vec3(0, e, 0)) - n;\\n  float dz = distanceEstimator(pos + vec3(0, 0, e)) - n;\\n\\n  vec3 grad = vec3(dx,dy,dz);\\n  return normalize(grad);\\n}\\n\\n//vec3 calculateNormal(vec3 pos) {\\n//  float e = minDistance * 0.5;\\n//  //float n = distanceEstimator(pos);\\n//\\n//  float dx1 = distanceEstimator(pos + vec3(e, 0, 0));\\n//  float dx2  = distanceEstimator(pos - vec3(e, 0, 0));\\n//\\n//  float dy1 = distanceEstimator(pos + vec3(0, e, 0));\\n//  float dy2 = distanceEstimator(pos - vec3(0, e, 0));\\n//\\n//  float dz1 = distanceEstimator(pos + vec3(0, 0, e));\\n//  float dz2 = distanceEstimator(pos - vec3(0, 0, e));\\n//\\n//  return normalize(vec3(dx1 - dx2, dy1 - dy2, dz1 - dz2));\\n//}\\n\\nbool rayMarch(Ray ray, inout Collision collision_1) {\\n  float totalDistance = 0.0;\\n  float steps;\\n  vec3 p;\\n  for (steps = 0.0; steps < u_maxIterations; steps++) {\\n    p = ray.start_position + totalDistance * ray.direction;\\n    float distance = distanceEstimator(p);\\n    totalDistance += distance;\\n\\n    if (distance < u_minDistance) {\\n      collision_1.position = p;\\n      collision_1.normal = calculateNormal(p);\\n      collision_1.distance = totalDistance;\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\nvec3 applyFog(vec3 color, float distance) {\\n  float fogAmount = 1.0 - exp( -distance * u_fogDistance );\\n  return mix(color, u_fogColor, fogAmount);\\n}\\n\\nvec3 pathTrace(Ray ray) {\\n  vec3 mask = vec3(1,1,1);\\n  float fogDistance = 0.0;\\n  vec3 accumulated_color = vec3(0,0,0);\\n  Collision collision;\\n  Material collision_material = Material(u_materialColor, int(u_materialType), 0.0, u_materialExtra1, u_materialExtra2);\\n\\n  for (float iteration = 0.0; iteration < float(trace_depth); iteration++) {\\n    float distribution = 1.0;\\n\\n    if (!rayMarch(ray, collision)) {\\n      vec3 lightSphereColor = mix(u_globalLightColor, lightSphereContribution(ray), u_imageBasedLightning);\\n      if (iteration == 0.0) {\\n        return mix(u_fogColor, lightSphereColor, u_fillBackgroundWithLight);\\n      }\\n      else {\\n        float lightPower = (u_globalLightPower - 0.5) * u_globalLightContrast + 0.5;\\n        accumulated_color += mask * lightSphereColor * lightPower;\\n      }\\n\\n      return applyFog(accumulated_color, fogDistance);\\n    }\\n\\n    vec3 next_dir = PDF(ray, collision_material, collision.normal, iteration, distribution);\\n    vec3 color = BRDF(ray, collision_material, collision.uv, collision.normal, next_dir) * distribution;\\n    mask *= color;\\n\\n    float collisionDistance = length(ray.start_position - collision.position);\\n\\n    if (iteration == 0.0 && u_fogEnabled == 1.0) {\\n      fogDistance = collisionDistance; //clamp(collisionDistance / fogDistance, 0.0, 1.0);\\n    }\\n\\n    ray = Ray(collision.position + next_dir * 0.001, next_dir);\\n  }\\n\\n  return applyFog(accumulated_color, fogDistance);\\n\\n//  if (rayMarch(ray, collision)) {\\n//    return vec3(0.8);\\n//  }\\n//  else {\\n//    return vec3(0.2);\\n//  }\\n//  return vec3(1.0 - steps / maxSteps);\\n}\\n\\nvoid main( void ) {\\n  vec3 traceColor = vec3(0,0,0);\\n  Ray ray = createRay(gl_FragCoord.xy, 0);\\n  traceColor += pathTrace(ray);\\n\\n  vec3 texture = texture(u_accumulated_texture, v_texCoord).rgb;\\n\\n  vec3 mixedTraceColor = mix(traceColor, texture, samples / (samples + 1.0));\\n  outColor = vec4(mixedTraceColor, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/app/renderer/path-tracer/shaders/ray-marcher.glsl\n// module id = 405\n// module chunks = 1","module.exports = \"#version 300 es\\nprecision lowp float;\\n#define GLSLIFY 1\\n\\nin vec2 v_texCoord;\\nout vec4 outColor;\\n\\n// Fractal uniforms\\nuniform float u_fractalType;\\nuniform float u_power;\\nuniform float u_minDistance;\\nuniform float u_maxIterations;\\nuniform float u_bailout;\\n\\n// Menger sponge\\nuniform float u_halfSpongeScale;\\nuniform float u_spongeScale;\\nuniform float u_spongeOffset;\\n\\n// Material uniforms\\nuniform float u_materialType;\\nuniform vec3 u_materialColor;\\nuniform float u_materialExtra1;\\nuniform float u_materialExtra2;\\n\\n// Global light uniforms\\nuniform float u_imageBasedLightning;\\nuniform vec3 u_globalLightColor;\\nuniform float u_fillBackgroundWithLight;\\nuniform float u_globalLightPower;\\nuniform float u_globalLightContrast;\\n\\n// Render effect settings\\nuniform float u_fogEnabled;\\nuniform float u_fogDistance;\\nuniform vec3 u_fogColor;\\n\\n// Renderer uniforms\\nuniform float time;\\nuniform float samples;\\nuniform int trace_depth;\\nuniform float global_lightning_enabled;\\nuniform int triangle_count;\\nuniform int object_count;\\nuniform vec2 resolution;\\n\\n// Camera uniforms\\nuniform float u_cameraYaw;\\nuniform float u_cameraPitch;\\nuniform vec3 camera_position;\\nuniform vec3 camera_direction;\\nuniform vec3 camera_right;\\nuniform vec3 camera_up;\\n\\nuniform sampler2D u_dome_texture;\\n\\nuniform sampler2D u_accumulated_texture;\\nuniform sampler2D u_buffer_texture;\\nuniform sampler2D u_triangle_texture;\\nuniform sampler2D u_triangle_index_texture;\\nuniform sampler2D u_bvh_texture;\\nuniform sampler2D u_light_texture;\\nuniform sampler2D u_material_texture;\\nuniform sampler2D u_objects_bvh_texture;\\nuniform sampler2D u_objects_texture;\\nuniform sampler2D u_light_sphere_texture;\\n\\n#define EPS 0.00000001\\n#define PI 3.14\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\n#define DIFFUSE_MATERIAL 0\\n#define SPECULAR_MATERIAL 1\\n#define EMISSION_MATERIAL 2\\n#define TRANSMISSION_MATERIAL 3\\n#define GLOSSY_MATERIAL 5\\n\\nstruct Collision {\\n  vec3 position;\\n  vec3 normal;\\n  vec2 uv;\\n  vec3 n0;\\n  vec3 n1;\\n  vec3 n2;\\n  int material_index;\\n  float distance;\\n};\\n\\nstruct Triangle {\\n  vec3 v0;\\n  vec3 edge1;\\n  vec3 edge2;\\n  vec3 n0;\\n  vec3 n1;\\n  vec3 n2;\\n  vec2 uv0;\\n  vec2 uv1;\\n  vec2 uv2;\\n  float triangle_area;\\n  int material_index;\\n};\\n\\nstruct Object {\\n  vec3 bounding_bottom;\\n  vec3 bounding_top;\\n  vec3 position;\\n  vec3 scale;\\n  float object_bvh_start_index;\\n  float triangle_start_index;\\n};\\n\\n// Ray\\nstruct Ray {\\n  vec3 start_position;\\n  vec3 direction;\\n};\\n\\nhighp float random(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\nmat3 rotationMatrixVector(vec3 v, float angle) {\\n  float c = cos(angle);\\n  float s = sin(angle);\\n\\n  return mat3(c + (1.0 - c) * v.x * v.x, (1.0 - c) * v.x * v.y - s * v.z, (1.0 - c) * v.x * v.z + s * v.y,\\n            (1.0 - c) * v.x * v.y + s * v.z, c + (1.0 - c) * v.y * v.y, (1.0 - c) * v.y * v.z - s * v.x,\\n            (1.0 - c) * v.x * v.z - s * v.y, (1.0 - c) * v.y * v.z + s * v.x, c + (1.0 - c) * v.z * v.z);\\n}\\n\\nRay createRay(vec2 pixel_position, int sample_step) {\\n\\n  mat3 cameraRotation = rotationMatrixVector(vec3(0, 1, 0), u_cameraYaw) * rotationMatrixVector(vec3(0, 0, 1), u_cameraPitch);\\n\\n  float width = resolution.x;\\n  float height = resolution.y;\\n\\n  float i = ((pixel_position.x / width) - 0.5) * width / height;\\n  float j = ((pixel_position.y / height) - 0.5);\\n  vec3 image_point = i * 1.5 * camera_right + j * 1.5 * camera_up + camera_position + cross(camera_up, camera_right);\\n\\n  vec3 dx = (camera_up / width);\\n  vec3 dy = (camera_right / height);\\n  vec3 rand_x = dx * random(vec2(pixel_position.x, pixel_position.y) * vec2(1.9898, 128.13) * (time + float(sample_step)));\\n  vec3 rand_y = dy * random(vec2(pixel_position.x, pixel_position.y) * vec2(134.9898, 36.342) * (time + float(sample_step)));\\n  image_point += rand_x + rand_y;\\n\\n  vec3 direction = normalize(cameraRotation * (image_point - camera_position));\\n\\n  return Ray(camera_position, direction);\\n}\\n\\n// Material\\nstruct Material {\\n  vec3 color;\\n  int material_type;\\n  float emission_rate;\\n  float material_parameter1;\\n  float material_parameter2;\\n};\\n\\nvec2 getSample(vec2 start_sample, vec2 sample_step, float resolution, float steps) {\\n  float s = start_sample.x + steps * sample_step.x;\\n  return vec2(fract(s), floor(s) / resolution);\\n}\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\nMaterial getMaterial(int material_index) {\\n  // Fetch material from texture\\n  vec2 start_sample = SAMPLE_STEP_512 * float(material_index) * 3.0;\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 2.0);\\n\\n  vec3 color = vec3(texture(u_material_texture, sample1));\\n  vec3 extra_data1 = vec3(texture(u_material_texture, sample2));\\n  vec3 extra_data2 = vec3(texture(u_material_texture, sample3));\\n\\n  int material_type = int(extra_data1.x);\\n  float emission_rate = extra_data1.y;\\n\\n  float material_parameter1 = extra_data2.x;\\n  float material_parameter2 = extra_data2.y;\\n\\n  return Material(color, material_type, emission_rate, material_parameter1, material_parameter2);\\n}\\n\\n#define DIFFUSE_MATERIAL 0\\n#define SPECULAR_MATERIAL 1\\n#define EMISSION_MATERIAL 2\\n#define TRANSMISSION_MATERIAL 3\\n#define GLOSSY_MATERIAL 5\\n\\nvec3 BRDF(Ray ray, Material material, vec2 uv, vec3 collision_normal, vec3 next_dir) {\\n\\n//  // Emission material\\n//  if (material.material_type == EMISSION_MATERIAL) {\\n//    return material.color;\\n//  }\\n//\\n//  // Specular material\\n//  if (material.material_type == SPECULAR_MATERIAL) {\\n//    return material.color;\\n//  }\\n//\\n//  // Transmission material\\n//  if (material.material_type == TRANSMISSION_MATERIAL) {\\n//    return material.color;\\n//  }\\n//\\n//  // Glossy material\\n//  if (material.material_type == GLOSSY_MATERIAL) {\\n//    return material.color;\\n//  }\\n\\n  // Lambertian diffuse material\\n  if (material.material_type == DIFFUSE_MATERIAL) {\\n    float albedo = material.material_parameter1; // material parameter 1 is albedo\\n    float roughness = material.material_parameter2; // material parameter 2 is roughness\\n    vec3 view_direction = -1.0 * ray.direction;\\n\\n    // calculate intermediary values\\n    float NdotL = dot(collision_normal, next_dir);\\n    float NdotV = dot(collision_normal, view_direction);\\n\\n    float angleVN = acos(NdotV);\\n    float angleLN = acos(NdotL);\\n\\n    float alpha = max(angleVN, angleLN);\\n    float beta = min(angleVN, angleLN);\\n    float gamma = dot(view_direction - collision_normal * dot(view_direction, collision_normal), next_dir - collision_normal * dot(next_dir, collision_normal));\\n\\n    float roughnessSquared = roughness * roughness;\\n\\n    // calculate A and B\\n    float A = 1.0 - 0.5 * (roughnessSquared / (roughnessSquared + 0.57));\\n    float B = 0.45 * (roughnessSquared / (roughnessSquared + 0.09));\\n    float C = sin(alpha) * tan(beta);\\n\\n    // put it all together\\n    float L1 = max(0.0, NdotL) * (A + B * max(0.0, gamma) * C);\\n\\n    // get the final color\\n    return material.color * L1;\\n  }\\n\\n  return material.color;\\n}\\n\\n#define DIFFUSE_MATERIAL 0\\n#define SPECULAR_MATERIAL 1\\n#define EMISSION_MATERIAL 2\\n#define TRANSMISSION_MATERIAL 3\\n#define GLOSSY_MATERIAL 5\\n\\nvec3 PDF(Ray ray, Material material, vec3 collision_normal, float iteration, inout float distribution) {\\n  vec3 real_normal = dot(collision_normal, ray.direction) > 0.0 ? -1.0 * collision_normal : collision_normal;\\n  vec3 next_dir;\\n\\n  if (material.material_type == DIFFUSE_MATERIAL) {\\n    float r1 = 2.0 * 3.14 * random(v_texCoord * vec2(0.24, 78.233) * (time + 32.0 * iteration));\\n    float r2 = random(v_texCoord * vec2(63.7264, 10.873) * (time + 12.0 * iteration));\\n    float r2s = sqrt(r2);\\n\\n    vec3 w = collision_normal;\\n\\n    vec3 u = normalize(cross(mix(vec3(1,0,0), vec3(0,1,0), step(0.1, abs(w.x))), w));\\n    vec3 v = cross(w, u);\\n\\n    // compute cosine weighted random ray direction on hemisphere\\n    next_dir = normalize(u * cos(r1) * r2s + v * sin(r1) * r2s + w * sqrt(1.0 - r2));\\n\\n    return next_dir;\\n  }\\n\\n  // Fully specular material\\n  if (material.material_type == SPECULAR_MATERIAL) {\\n    return normalize(ray.direction - 2.0 * dot(ray.direction, collision_normal) * collision_normal);\\n  }\\n\\n  // Glossy material\\n  if (material.material_type == GLOSSY_MATERIAL) {\\n    vec3 reflected = normalize(ray.direction - 2.0 * dot(ray.direction, collision_normal) * collision_normal);\\n\\n    float r1 = 2.0 * 3.14 * random(v_texCoord * vec2(521.9898, 2321.233) * (time + 100.0 * iteration));\\n    float r2 = random(v_texCoord * vec2(2631.7264, 5.873) * (time + 12.0 * iteration));\\n    float r2s = pow(r2, material.material_parameter1);\\n\\n    vec3 w = reflected;\\n    vec3 u = normalize(cross(mix(vec3(1,0,0), vec3(0,1,0), step(0.1, abs(w.x))), w));\\n    vec3 v = cross(w, u);\\n\\n    // compute cosine weighted random ray direction on hemisphere\\n    next_dir = normalize(u * cos(r1) * r2s + v * sin(r1) * r2s + w * sqrt(1.0 - r2));\\n    return next_dir;\\n  }\\n\\n  if (material.material_type == TRANSMISSION_MATERIAL) {\\n    bool into = dot(collision_normal, real_normal) > 0.0; // is ray entering or leaving refractive material?\\n    float nc = 1.0;  // Index of Refraction air\\n    float nt = 1.5;  // Index of Refraction glass/water\\n    float nnt = into ? nc / nt : nt / nc;  // IOR ratio of refractive materials\\n    float ddn = dot(ray.direction, real_normal);\\n    float cos2t = 1.0 - nnt*nnt * (1.0 - ddn*ddn);\\n\\n    if (cos2t < 0.0) // total internal reflection\\n    {\\n        next_dir = normalize(ray.direction - collision_normal * 2.0 * dot(collision_normal, ray.direction));\\n    }\\n    else // cos2t > 0\\n    {\\n      // compute direction of transmission ray\\n      vec3 tdir = ray.direction * nnt;\\n      tdir -= normalize(collision_normal * ((into ? 1.0 : -1.0) * (ddn * nnt + sqrt(cos2t))));\\n\\n      float R0 = (nt - nc)*(nt - nc) / (nt + nc)*(nt + nc);\\n      float c = 1.0 - (into ? -ddn : dot(tdir, collision_normal));\\n      float Re = R0 + (1.0 - R0) * c * c * c * c * c;\\n      float Tr = 1.0 - Re; // Transmission\\n      float P = 0.25 + 0.5 * Re;\\n      float RP = Re / P;\\n      float TP = Tr / (1.0 - P);\\n\\n      // randomly choose reflection or transmission ray\\n      float rand = random(v_texCoord * vec2(86.425, 145.233) * (time + iteration));\\n      if (rand < 0.2) // reflection ray\\n      {\\n        distribution = RP;\\n        next_dir = normalize(ray.direction - collision_normal * 2.0 * dot(collision_normal, ray.direction));\\n      }\\n      else // transmission ray\\n      {\\n        distribution = TP;\\n        next_dir = normalize(tdir);\\n      }\\n\\n      return next_dir;\\n    }\\n  }\\n\\n  return vec3(0,0,0);\\n}\\n\\n// Triangle\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\nTriangle GetTriangleFromIndex(float triangle_index) {\\n  // Fetch triangle from texture\\n  vec2 start_sample = SAMPLE_STEP_2048 * triangle_index * 11.0;\\n\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 2.0);\\n  vec2 sample4 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 3.0);\\n  vec2 sample5 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 4.0);\\n  vec2 sample6 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 5.0);\\n  vec2 sample7 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 6.0);\\n  vec2 sample8 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 7.0);\\n  vec2 sample9 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 8.0);\\n  vec2 sample10 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 9.0);\\n\\n  vec3 v0 = vec3(texture(u_triangle_texture, sample1));\\n  vec3 edge1 = vec3(texture(u_triangle_texture, sample2));\\n  vec3 edge2 = vec3(texture(u_triangle_texture, sample3));\\n\\n  vec3 n0 = vec3(texture(u_triangle_texture, sample4));\\n  vec3 n1 = vec3(texture(u_triangle_texture, sample5));\\n  vec3 n2 = vec3(texture(u_triangle_texture, sample6));\\n\\n  vec2 uv0 = vec2(texture(u_triangle_texture, sample7));\\n  vec2 uv1 = vec2(texture(u_triangle_texture, sample8));\\n  vec2 uv2 = vec2(texture(u_triangle_texture, sample9));\\n\\n  int material_index = int(texture(u_triangle_texture, sample10).x);\\n  float triangle_area = texture(u_light_texture, sample10).z;\\n\\n  return Triangle(v0, edge1, edge2, n0, n1, n2, uv0, uv1, uv2, triangle_area, material_index);\\n}\\n\\n#define SAMPLE_STEP_128 vec2(1,0) / 128.0\\n#define SAMPLE_STEP_256 vec2(1,0) / 256.0\\n#define SAMPLE_STEP_512 vec2(1,0) / 512.0\\n#define SAMPLE_STEP_1024 vec2(1,0) / 1024.0\\n#define SAMPLE_STEP_2048 vec2(1,0) / 2048.0\\n\\nfloat getTriangleIndex(float stackIdx) {\\n  vec2 start_sample = SAMPLE_STEP_1024 * stackIdx;\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_1024, 1024.0, 0.0);\\n\\n  vec4 triangle_index_slot = texture(u_triangle_index_texture, sample1);\\n  return triangle_index_slot.x;\\n}\\n\\nfloat triangleIntersection(Ray ray, Triangle triangle, vec3 object_position, inout Collision collision_1, float closest_collision_distance) {\\n  vec3 v0_0 = object_position + triangle.v0;\\n\\n  //Begin calculating determinant - also used to calculate u parameter\\n  vec3 P = cross(ray.direction, triangle.edge2);\\n  float det = dot(triangle.edge1, P);\\n\\n  //Distance from vertex1 to ray origin\\n  vec3 T = ray.start_position - v0_0;\\n  float u = dot(T, P);\\n  vec3 Q = cross(T, triangle.edge1);\\n  float v = dot(ray.direction, Q);\\n  float t = dot(triangle.edge2, Q);\\n\\n  if(t < EPS || v < 0.0 || u+v > det || u < 0.0 || u > det || (det > -EPS && det < EPS)) return -1.0;\\n\\n  float inv_det = 1.0 / det;\\n\\n  collision_1.position = ray.start_position + inv_det * t * ray.direction;\\n  collision_1.distance = length(ray.start_position - collision_1.position);\\n\\n  if (closest_collision_distance < collision_1.distance) return -1.0;\\n\\n  collision_1.material_index = triangle.material_index;\\n\\n  u = u * inv_det;\\n  v = v * inv_det;\\n  collision_1.uv = (1.0 - u - v) * triangle.uv0 + u * triangle.uv1 + v * triangle.uv2;\\n  collision_1.normal = (1.0 - u - v) * triangle.n0 + u * triangle.n1 + v * triangle.n2;\\n\\n  return 1.0;\\n}\\n\\n//float triangleIntersection(Ray ray, Triangle triangle, vec3 object_position, inout Collision collision, float closest_collision_distance) {\\n//  vec3 e1 = triangle.edge1;\\n//  vec3 e2 = triangle.edge2;\\n//\\n//  vec3 normal = normalize(cross(e1,e2));\\n//  float b = dot(normal, ray.direction);\\n//\\n//  vec3 w0 = ray.start_position - triangle.v0;\\n//  float a = -dot(normal, w0);\\n//  float t = a / b;\\n//\\n//  vec3 p = ray.start_position + t * ray.direction;\\n//  float uu, uv, vv, wu, wv, inverseD;\\n//  uu = dot(e1,e1);\\n//  uv = dot(e1,e2);\\n//  vv = dot(e2,e2);\\n//\\n//  vec3 w = p - triangle.v0;\\n//  wu = dot(w, e1);\\n//  wv = dot(w, e2);\\n//  inverseD = uv * uv - uu * vv;\\n//  inverseD = 1.0 / inverseD;\\n//\\n//  float u = (uv * wv - vv * wu) * inverseD;\\n//  if (u < 0.0 || u > 1.0) return -1.0;\\n//\\n//  float v = (uv * wu - uu * wv) * inverseD;\\n//  if (v < 0.0 || (u + v) > 1.0) return -1.0;\\n//\\n//  collision.position = p; //ray.start_position + inverseD * t * ray.direction;\\n//  collision.distance = length(ray.start_position - collision.position);\\n//\\n//  //if (closest_collision_distance < collision.distance) return -1.0;\\n//\\n//  collision.material_index = triangle.material_index;\\n//  collision.uv = (1.0 - u - v) * triangle.uv0 + u * triangle.uv1 + v * triangle.uv2;\\n//  collision.normal = (1.0 - u - v) * triangle.n0 + u * triangle.n1 + v * triangle.n2;\\n//\\n//  return 1.0;\\n//}\\n\\n// BBOX\\nbool pointInsideBox(vec3 bottom, vec3 top, vec3 point) {\\n  return (bottom.x < point.x && bottom.y < point.y && bottom.z < point.z && top.x > point.x && top.y > point.y && top.z > point.z);\\n}\\n\\nfloat boundingBoxCollision_0(vec3 bottom, vec3 top, Ray r) {\\n  vec3 dirfrac = vec3(1,1,1) / r.direction;\\n\\n  vec3 t1 = (bottom - r.start_position) * dirfrac;\\n  vec3 t2 = (top - r.start_position) * dirfrac;\\n\\n  float tmin = max(max(min(t1.x, t2.x), min(t1.y, t2.y)), min(t1.z, t2.z));\\n  float tmax = min(min(max(t1.x, t2.x), max(t1.y, t2.y)), max(t1.z, t2.z));\\n\\n  return (tmax < 0.0 || tmin > tmax) ? 10000.0 : tmin;\\n}\\n\\n// Scene\\n\\nvoid getObjectAtIndex(int index, inout Object object_1) {\\n  vec2 start_sample = SAMPLE_STEP_512 * float(index) * 5.0;\\n\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 2.0);\\n  vec2 sample4 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 3.0);\\n  vec2 sample5 = getSample(start_sample, SAMPLE_STEP_512, 512.0, 4.0);\\n\\n  vec3 bottom_bbox = vec3(texture(u_objects_texture, sample1));\\n  vec3 top_bbox = vec3(texture(u_objects_texture, sample2));\\n  vec3 position = vec3(texture(u_objects_texture, sample3));\\n  vec3 scale = vec3(texture(u_objects_texture, sample4));\\n  vec3 extra_data = vec3(texture(u_objects_texture, sample5));\\n\\n  // Triangle model\\n  float bvh_start_index = extra_data.x;\\n  float triangle_start_index = extra_data.y;\\n\\n  object_1 = Object(bottom_bbox, top_bbox, position, scale, bvh_start_index, triangle_start_index);\\n}\\n\\nfloat boundingBoxCollision_1(vec3 bottom, vec3 top, Ray r) {\\n  vec3 dirfrac = vec3(1,1,1) / r.direction;\\n\\n  vec3 t1 = (bottom - r.start_position) * dirfrac;\\n  vec3 t2 = (top - r.start_position) * dirfrac;\\n\\n  float tmin = max(max(min(t1.x, t2.x), min(t1.y, t2.y)), min(t1.z, t2.z));\\n  float tmax = min(min(max(t1.x, t2.x), max(t1.y, t2.y)), max(t1.z, t2.z));\\n\\n  return (tmax < 0.0 || tmin > tmax) ? 10000.0 : tmin;\\n}\\n\\nstruct BVHNode {\\n  vec3 bottom_bbox;\\n  vec3 top_bbox;\\n  float is_leaf;\\n  float distance;\\n  float extra_data1;\\n  float extra_data2;\\n  float node_index;\\n  float parent_index;\\n  float sibling_index;\\n};\\n\\nvoid getNodeData(float index, float start_index, Ray ray, inout BVHNode node_0) {\\n  vec2 start_sample = SAMPLE_STEP_2048 * (index + start_index) * 4.0;\\n\\n  vec2 sample1 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 0.0);\\n  vec2 sample2 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 1.0);\\n  vec2 sample3 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 2.0);\\n  vec2 sample4 = getSample(start_sample, SAMPLE_STEP_2048, 2048.0, 3.0);\\n\\n  node_0.bottom_bbox = vec3(texture(u_objects_bvh_texture, sample1));\\n  node_0.top_bbox = vec3(texture(u_objects_bvh_texture, sample2));\\n\\n  vec3 extra_data1 = vec3(texture(u_objects_bvh_texture, sample3));\\n  node_0.is_leaf = extra_data1.x;\\n  node_0.extra_data1 = extra_data1.y;\\n  node_0.extra_data2 = extra_data1.z;\\n\\n  vec3 extra_data2 = vec3(texture(u_objects_bvh_texture, sample4));\\n  node_0.parent_index = extra_data2.x;\\n  node_0.sibling_index = extra_data2.y;\\n\\n//  node.distance = boundingBoxCollision(node.bottom_bbox, node.top_bbox, ray, node.is_leaf);\\n\\n  node_0.node_index = index;\\n}\\n\\nvoid processLeaf(BVHNode node, inout Collision closest_collision_1248018414, Ray ray, float triangle_start_index_1248018414, Object object_0) {\\n  float triangle_count_1248018414 = node.extra_data1;\\n  float start_triangle_index = node.extra_data2 + triangle_start_index_1248018414;\\n\\n  float current_index = start_triangle_index;\\n  float end_index = start_triangle_index + triangle_count_1248018414;\\n\\n  Collision collision;\\n  for (float idx = 0.0; idx < triangle_count_1248018414; idx++) {\\n    Triangle triangle = GetTriangleFromIndex(getTriangleIndex(start_triangle_index + idx));\\n\\n    if (triangleIntersection(ray, triangle, object_0.position, collision, closest_collision_1248018414.distance) == 1.0) {\\n      closest_collision_1248018414 = collision;\\n    }\\n  }\\n}\\n\\nvoid traverseObjectTree(Ray ray, inout Collision closest_collision_1248018414, Object object) {\\n  float start_index_1248018414 = object.object_bvh_start_index;\\n  float triangle_start_index = object.triangle_start_index;\\n\\n  Collision collision;\\n  BVHNode node;\\n  BVHNode left_node;\\n  BVHNode right_node;\\n\\n  //float stack[32];\\n  float[] stack = float[] (.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0);\\n  int stackIdx = 1;\\n\\n  for (int i = 0; i < 100; i++) {\\n    if (stackIdx < 1) return;\\n\\n    float box_index = stack[--stackIdx];\\n\\n    // Fetch node data\\n    getNodeData(box_index, start_index_1248018414, ray, node);\\n\\n    if (node.is_leaf == 0.0) {\\n      // Check collision with bounding box\\n      float collision_distance = 0.0;\\n\\n      getNodeData(node.extra_data1, start_index_1248018414, ray, left_node);\\n      getNodeData(node.extra_data2, start_index_1248018414, ray, right_node);\\n\\n      left_node.distance = boundingBoxCollision_1(left_node.bottom_bbox + object.position, left_node.top_bbox + object.position, ray);\\n      right_node.distance = boundingBoxCollision_1(right_node.bottom_bbox + object.position, right_node.top_bbox + object.position, ray);\\n\\n      float near_distance = min(left_node.distance, right_node.distance);\\n      float far_distance = max(left_node.distance, right_node.distance);\\n\\n      float mixer = clamp(step(right_node.distance, left_node.distance), 0.0, 1.0);\\n      float near_child = mix(node.extra_data1, node.extra_data2, mixer);\\n      float far_child = mix(node.extra_data2, node.extra_data1, mixer);\\n\\n      if (far_distance < closest_collision_1248018414.distance) {\\n        stack[stackIdx++] = far_child; // Set left child index: extra_data1 = left index\\n        stack[stackIdx++] = near_child; // Set left child index: extra_data1 = left index\\n      }\\n      else if (near_distance < closest_collision_1248018414.distance) {\\n        stack[stackIdx++] = near_child; // Set left child index: extra_data1 = left index\\n      }\\n\\n      // Return if stack index exceeds stack size\\n      if (stackIdx > 31) return;\\n    }\\n    else {\\n      processLeaf(node, closest_collision_1248018414, ray, triangle_start_index, object);\\n    }\\n  }\\n}\\n\\nvec3 lightSphereContribution(Ray ray) {\\n  vec3 sun_position = normalize(vec3(1.0, 1.0, 1.0));\\n  vec3 position = vec3(0,0,0);\\n  float radius = 100.0;\\n\\n  vec3 op = position - ray.start_position;\\n  float t, epsilon = 0.0001;\\n  float b = dot(op, ray.direction);\\n  float disc = b * b - dot(op, op) + radius * radius;\\n  if (disc < 0.0) return vec3(0,0,0);\\n  else disc = sqrt(disc);\\n\\n  t = (t = b - disc) > epsilon ? t : ((t = b + disc) > epsilon ? t : 0.0);\\n\\n  if (t < 0.01)\\n    return vec3(0,0,0);\\n\\n  vec3 collision_position = (ray.start_position + ray.direction * t) / 100.0;\\n  vec3 normal = normalize(collision_position);\\n  float u = 0.5 - atan(normal.z, normal.x) / 6.28;\\n  float v = 0.5 - 2.0 * asin(normal.y) / 6.28;\\n\\n  vec3 clr = texture(u_dome_texture, vec2(u,v)).rgb;\\n  return clr;\\n}\\n\\nbool sceneIntersection(Ray ray, inout Collision collision_0) {\\n  Collision closest_collision;\\n  closest_collision.distance = 10000.0;\\n\\n  Object object;\\n  int collision_count = 0;\\n  for (int i = 0; i < object_count; i++) {\\n    getObjectAtIndex(i, object);\\n\\n    float collision_distance = boundingBoxCollision_0(object.bounding_bottom + object.position, object.bounding_top + object.position, ray);\\n\\n    if (collision_distance < closest_collision.distance) {\\n      traverseObjectTree(ray, closest_collision, object);\\n    }\\n  }\\n\\n  if (closest_collision.distance == 10000.0) {\\n    return false;\\n  }\\n  else {\\n    collision_0 = closest_collision;\\n    return true;\\n  }\\n}\\n\\nvec3 applyFog(vec3 color, float distance) {\\n  float fogAmount = 1.0 - exp( -distance * u_fogDistance * 0.2 );\\n  return mix(color, u_fogColor, fogAmount);\\n}\\n\\nvec3 pathTrace(Ray ray) {\\n  vec3 mask = vec3(1,1,1);\\n  float fogDistance = 0.0;\\n  vec3 accumulated_color = vec3(0,0,0);\\n  Collision collision;\\n  Material collision_material;\\n\\n  for (float iteration = 0.0; iteration < float(trace_depth); iteration++) {\\n    float distribution = 1.0;\\n\\n    if (!sceneIntersection(ray, collision)) {\\n      vec3 lightSphereColor = mix(u_globalLightColor, lightSphereContribution(ray), u_imageBasedLightning);\\n      if (iteration == 0.0) {\\n        return mix(u_fogColor, lightSphereColor, u_fillBackgroundWithLight);\\n      }\\n      else {\\n        float lightPower = (u_globalLightPower - 0.5) * u_globalLightContrast + 0.5;\\n        accumulated_color += mask * lightSphereColor * lightPower;\\n        return applyFog(accumulated_color, fogDistance);\\n      }\\n    }\\n\\n    collision_material = getMaterial(collision.material_index);\\n\\n    vec3 next_dir = PDF(ray, collision_material, collision.normal, iteration, distribution);\\n    mask *= BRDF(ray, collision_material, collision.uv, collision.normal, next_dir) * distribution;\\n    //mask *= 2.0;\\n\\n    accumulated_color += mask * collision_material.emission_rate;\\n\\n    float collisionDistance = length(ray.start_position - collision.position);\\n    if (iteration == 0.0 && u_fogEnabled == 1.0) {\\n      fogDistance = collisionDistance; //clamp(collisionDistance / fogDistance, 0.0, 1.0);\\n    }\\n\\n    if (collision_material.emission_rate != 0.0) return applyFog(accumulated_color, fogDistance);\\n\\n    ray = Ray(collision.position + next_dir * EPS, next_dir);\\n  }\\n\\n  return applyFog(accumulated_color, fogDistance);\\n}\\n\\nvoid main( void ) {\\n  vec3 traceColor = vec3(0,0,0);\\n  Ray ray = createRay(gl_FragCoord.xy, 0);\\n  traceColor += pathTrace(ray);\\n\\n  vec3 texture = texture(u_accumulated_texture, v_texCoord).rgb;\\n\\n  vec3 mixedTraceColor = mix(traceColor, texture, samples / (samples + 1.0));\\n  outColor = vec4(mixedTraceColor, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/app/renderer/path-tracer/shaders/ray-tracer.glsl\n// module id = 406\n// module chunks = 1","import {Injectable, ElementRef} from \"@angular/core\";\nimport {initContext} from \"./utils/render-context\";\nimport RenderView from \"./render-view/render-view\";\nimport RayMarcher from \"./path-tracer/ray-marcher\";\nimport RayTracer from \"./path-tracer/ray-tracer\";\nimport * as moment from \"moment\";\nimport {SettingsService} from \"./settings/settings.service\";\nimport {BloomProgram} from \"./bloom-program/bloom-program\";\nimport {CompositionProgram} from \"./composition-program/composition-program\";\nimport {SceneService} from \"./scene.service\";\nimport {ISceneTextures} from \"./path-tracer/models/scene-builder\";\nimport {CameraNavigator} from \"./camera-navigator\";\nconst Stats = require('stats-js')\n\n\n@Injectable()\nexport class RenderService {\n  private _canvas: any\n  private _rayMarcher: RayMarcher\n  private _rayTracer: RayTracer\n  private _rayTracingEnabled: boolean = true\n  private _cameraNavigator: CameraNavigator\n  private _bloomProgram: BloomProgram\n  private _bloomEnabled: boolean = false\n  private _compositionProgram: CompositionProgram\n  private _renderView: RenderView\n  private _stats: any\n\n  // Used for timing\n  private _startTime: number\n  private _samples: number = 0\n  private _sceneLoaded: boolean = false\n\n  constructor(\n    public settingsService: SettingsService,\n    public sceneService: SceneService\n  ) {}\n\n  public init(canvas: ElementRef) {\n    this._canvas = canvas\n    initContext(canvas)\n\n    canvas.nativeElement.width = window.innerWidth\n    canvas.nativeElement.height = window.innerHeight\n\n    window.onresize = () => {\n      canvas.nativeElement.width = window.innerWidth\n      canvas.nativeElement.height = window.innerHeight\n      this._renderView.updateSize()\n    }\n\n    this._stats = new Stats()\n    this._stats.setMode(0)\n    this._stats.domElement.style.position = 'absolute'\n    this._stats.domElement.style.left = '200px'\n    this._stats.domElement.style.top = '0px'\n    document.body.appendChild(this._stats.domElement)\n\n    this.sceneService.init()\n    this.sceneService.loadScene(3).then((sceneTextures: ISceneTextures) => {\n      this._rayTracer = new RayTracer(this.settingsService, this.sceneService, sceneTextures)\n      this._startTime = moment().valueOf()\n      this._sceneLoaded = true\n    })\n\n    this.settingsService.bloomSettings.getAttributeSub('u_bloomEnabled').asObservable().subscribe(attr => {\n      this._bloomEnabled = attr.value == 1.0\n    })\n\n    this.settingsService.renderTypeSub.asObservable().subscribe((renderType: number) => {\n      this._rayTracingEnabled = renderType == 0\n\n      if (this._rayTracingEnabled && this._rayTracer != null) {\n        this._rayTracer.init()\n      }\n      else if (!this._rayTracingEnabled) {\n        this._rayMarcher.init()\n      }\n    })\n\n    this._rayMarcher = new RayMarcher(this.settingsService)\n    this._bloomProgram = new BloomProgram(this.settingsService)\n    this._compositionProgram = new CompositionProgram(this.settingsService)\n    this._renderView = new RenderView(this.settingsService)\n    this.render()\n  }\n\n  private render = () => {\n    this._stats.begin();\n\n    let renderTexture: WebGLTexture\n    let rayTracing = this.settingsService.renderTypeSub.getValue() == 0;\n\n    if (this._sceneLoaded) {\n      if (rayTracing) {\n        this._rayTracer.render()\n        renderTexture = this._rayTracer.renderTexture\n      }\n      else {\n        this._rayMarcher.render()\n        renderTexture = this._rayMarcher.renderTexture\n      }\n    }\n\n    if (this._bloomEnabled) {\n      this._bloomProgram.render(renderTexture)\n    }\n\n    this._compositionProgram.render(renderTexture, this._bloomProgram.renderTexture)\n    this._renderView.render(this._compositionProgram.renderTexture)\n\n    this._stats.end();\n    requestAnimationFrame(this.render)\n  }\n\n  public newDomeImage(image: any) {\n    this._rayMarcher.loadDomeTexture(image)\n    this._rayTracer.loadDomeTexture(image)\n  }\n\n  public loadNewScene(sceneId: number) {\n    this.sceneService.loadScene(sceneId).then((sceneTextures: ISceneTextures) => {\n      this._rayTracer = new RayTracer(this.settingsService, this.sceneService, sceneTextures)\n      this._startTime = moment().valueOf()\n      this._sceneLoaded = true\n    })\n  }\n\n  get canvas(): any { return this._canvas }\n  get renderTexture(): WebGLTexture { return this._compositionProgram.renderTexture }\n  get textureData(): any { return this._compositionProgram.textureData }\n  get rayTracer(): RayTracer { return this._rayTracer }\n  get samples(): number {\n    if (this._rayTracer != null) {\n      let rayTracing = this.settingsService.renderTypeSub.getValue() == 0;\n      return rayTracing ? this._rayTracer.samples : this._rayMarcher.samples\n    }\n\n    return 0\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/render.service.ts","import {Injectable, ElementRef} from \"@angular/core\";\nimport Camera from \"./path-tracer/models/camera\";\nimport Scene from \"./path-tracer/models/scene\";\nimport {\n  createDefaultScene1, createDefaultScene2,\n  createDefaultScene4, createDefaultScene3\n} from \"./path-tracer/models/default-scenes/default-scenes\";\nimport {ISceneTextures, default as buildScene} from \"./path-tracer/models/scene-builder\";\nimport {SettingsService} from \"./settings/settings.service\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {ISettingAttribute} from \"./settings/setting\";\n\n@Injectable()\nexport class SceneService {\n  private _scene: Scene;\n  private _camera: Camera;\n  private _resolutionSub: BehaviorSubject<ISettingAttribute>\n\n  constructor(private _settingsService: SettingsService) {}\n\n  public init() {\n    this._scene = new Scene();\n    this._camera = new Camera(this._settingsService, vec3.fromValues(10.90, 3.51, 4.00), vec3.fromValues(1.59, 3.79, 2.27))\n    this._resolutionSub = this._settingsService.renderSettings.getAttributeSub('resolution')\n\n    let renderCanvas = $('#renderCanvas')\n    renderCanvas.click((event) => {\n      let windowSize = vec2.fromValues(window.innerWidth, window.innerHeight)\n      let resolution = this._resolutionSub.getValue().value\n      let zoom = this._settingsService.zoomSub.getValue()\n      let clickPosition = vec2.fromValues(event.offsetX, event.offsetY)\n\n      let windowTop = vec2.fromValues(\n        windowSize[0] / 2.0 - (resolution[0] * zoom) / 2.0,\n        windowSize[1] / 2.0 - (resolution[1] * zoom) / 2.0\n      )\n\n      let windowBottom = vec2.fromValues(\n        windowSize[0] / 2.0 - (resolution[0] * zoom) / 2.0 + resolution[0] * zoom,\n        windowSize[1] / 2.0 - (resolution[1] * zoom) / 2.0 + resolution[1] * zoom\n      )\n\n      if (clickPosition[0] > windowTop[0] && clickPosition[1] > windowTop[1] && clickPosition[0] < windowBottom[0] && clickPosition[1] < windowBottom[1]) {\n        let realClickPosition = vec2.fromValues((clickPosition[0] - windowTop[0]) / zoom, resolution[1] - (clickPosition[1] - windowTop[1]) / zoom)\n        let ray = this.camera.createRayFromPixel(realClickPosition)\n        let selectedObject = this._scene.sceneIntersection(ray)\n        this._settingsService.selectedObjectSub.next(selectedObject)\n      }\n    })\n  }\n\n  public loadScene(sceneId: number): Promise<ISceneTextures> {\n    this._settingsService.isLoadingSub.next(true)\n\n    switch (sceneId) {\n      case 1:\n        return createDefaultScene1(this._scene).then(() => {\n          this._settingsService.isLoadingSub.next(false)\n          return buildScene(this._scene)\n        })\n      case 2:\n        return createDefaultScene2(this._scene).then(() => {\n          this._settingsService.isLoadingSub.next(false)\n          return buildScene(this._scene)\n        })\n      case 3:\n        return createDefaultScene3(this._scene).then(() => {\n          this._settingsService.isLoadingSub.next(false)\n          return buildScene(this._scene)\n        })\n      case 4:\n        return createDefaultScene4(this._scene).then(() => {\n          this._settingsService.isLoadingSub.next(false)\n          return buildScene(this._scene)\n        })\n    }\n\n  }\n\n  get camera(): Camera { return this._camera; }\n  get scene(): Scene { return this._scene; }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/scene.service.ts","import Shader from \"./shader\";\nimport createProgram from \"./createProgram\";\nimport {gl} from \"./render-context\";\n\nexport default class RenderTarget {\n\n  public _program: WebGLProgram;\n  protected _positionAttribLocation: number;\n  protected _positionBuffer: WebGLBuffer;\n  protected _texCoordAttribLocation: number;\n  protected _texCoordBuffer: WebGLBuffer;\n  private _scaleFactor: number\n\n  constructor(\n    protected _shader: Shader,\n    private _sizeX: number,\n    private _sizeY: number\n  ) {\n    this._program = createProgram(gl, this._shader);\n    this._shader.program = this._program;\n\n    this._scaleFactor = 1.0\n\n    let positions = new Float32Array([\n      -1.0, -1.0,\n      -1.0,  1.0,\n      1.0, -1.0,\n      -1.0,  1.0,\n      1.0,  1.0,\n      1.0, -1.0,\n    ]);\n\n    let texCoords = new Float32Array([\n      0.0,  0.0,\n      0.0,  1.0,\n      1.0,  0.0,\n      0.0,  1.0,\n      1.0,  1.0,\n      1.0,  0.0,\n    ]);\n\n    let vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n\n    this._positionAttribLocation = gl.getAttribLocation(this._program, 'a_position');\n    this._texCoordAttribLocation = gl.getAttribLocation(this._program, 'a_texCoord');\n\n    this._positionBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._positionBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW)\n\n    this._texCoordBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, texCoords, gl.STATIC_DRAW)\n\n    gl.viewport(0, 0, this._sizeX, this._sizeY)\n    gl.clearColor(0, 0, 0, 1)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n  }\n\n  public render() {\n    gl.viewport(0, 0, this._sizeX, this._sizeY)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    gl.useProgram(this._program)\n\n    gl.enableVertexAttribArray(this._positionAttribLocation)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._positionBuffer)\n    gl.vertexAttribPointer(this._positionAttribLocation, 2, gl.FLOAT, false, 0, 0)\n\n    gl.enableVertexAttribArray(this._texCoordAttribLocation)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer)\n    gl.vertexAttribPointer(this._texCoordAttribLocation, 2, gl.FLOAT, false, 0, 0)\n\n    this._shader.update();\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  public setWindowSize(sizeX: number, sizeY: number) {\n    this._sizeX = sizeX\n    this._sizeY = sizeY\n  }\n\n  get scaleFactor(): number { return this._scaleFactor; }\n  set scaleFactor(value: number) { this._scaleFactor = value; }\n  get sizeX(): number { return this._sizeX }\n  get sizeY(): number { return this._sizeY }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/render-target.ts","import {gl} from \"./render-context\";\n\nexport interface IUniform {\n  value: any;\n  type: number;\n  location?: WebGLUniformLocation;\n}\n\nexport const FLOAT_TYPE = 0;\nexport const INTEGER_TYPE = 1;\nexport const VEC2_TYPE = 2;\nexport const VEC3_TYPE = 3;\nexport const VEC4_TYPE = 4;\nexport const TEXTURE_TYPE = 5;\n\nexport default class Shader {\n  private _vertexShader: WebGLShader;\n  private _fragmentShader: WebGLShader;\n  private _program: WebGLProgram;\n  private _uniforms: {[name: string]: IUniform};\n  needsUpdate: boolean = false\n\n  constructor(vertexSource: string, fragmentSource: string) {\n    this._vertexShader = this.createShader(gl.VERTEX_SHADER, vertexSource);\n    this._fragmentShader = this.createShader(gl.FRAGMENT_SHADER, fragmentSource);\n    this._uniforms = {};\n  }\n\n  public update() {\n    let textureCount = 0;\n\n    for (let uniformName in this._uniforms) {\n      let uniform = this._uniforms[uniformName];\n      switch (uniform.type) {\n        case FLOAT_TYPE:\n          gl.uniform1f(uniform.location, uniform.value);\n          break;\n        case VEC2_TYPE:\n          gl.uniform2fv(uniform.location, uniform.value);\n          break;\n        case VEC3_TYPE:\n          gl.uniform3fv(uniform.location, uniform.value);\n          break;\n        case INTEGER_TYPE:\n          gl.uniform1i(uniform.location, uniform.value);\n          break;\n        case TEXTURE_TYPE:\n\n          gl.uniform1i(uniform.location, textureCount);\n\n          switch (textureCount) {\n            case 0:\n              gl.activeTexture(gl.TEXTURE0);\n              break;\n            case 1:\n              gl.activeTexture(gl.TEXTURE1);\n              break;\n            case 2:\n              gl.activeTexture(gl.TEXTURE2);\n              break;\n            case 3:\n              gl.activeTexture(gl.TEXTURE3);\n              break;\n            case 4:\n              gl.activeTexture(gl.TEXTURE4);\n              break;\n            case 5:\n              gl.activeTexture(gl.TEXTURE5);\n              break;\n            case 6:\n              gl.activeTexture(gl.TEXTURE6);\n              break;\n            case 7:\n              gl.activeTexture(gl.TEXTURE7);\n              break;\n            case 8:\n              gl.activeTexture(gl.TEXTURE8);\n              break;\n            case 9:\n              gl.activeTexture(gl.TEXTURE9);\n              break;\n            case 10:\n              gl.activeTexture(gl.TEXTURE10);\n              break;\n          }\n          gl.bindTexture(gl.TEXTURE_2D, uniform.value);\n          textureCount++;\n          break;\n      }\n    }\n  }\n\n  public updateTexture(data) {\n\n  }\n\n  private createShader(type: number, source: string): WebGLShader {\n    let shader = gl.createShader(type)\n    gl.shaderSource(shader, source)\n    gl.compileShader(shader)\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      return shader;\n    }\n\n    console.warn(gl.getShaderInfoLog(shader))\n    //console.warn(gl.getShaderSource(shader))\n    //console.debug(gl.getShaderSource(shader))\n    gl.deleteShader(shader)\n  }\n\n  private updateUniforms() {\n    if (this._program) {\n      for (let name in this._uniforms) {\n        let uniform = this._uniforms[name];\n        uniform.location = gl.getUniformLocation(this._program, name);\n      }\n    }\n  }\n\n  public setUniform(id: string, data: IUniform) {\n    this._uniforms[id] = data\n    this.updateUniforms()\n    this.needsUpdate = true\n  }\n\n  set uniforms(value: {[p: string]: IUniform}) {\n    this._uniforms = value;\n    this.updateUniforms();\n  }\n\n  get uniforms() { return this._uniforms }\n\n  set program(value: WebGLProgram) {\n    this._program = value;\n    this.updateUniforms();\n  }\n\n  get fragmentShader(): WebGLShader { return this._fragmentShader; }\n  get vertexShader(): WebGLShader { return this._vertexShader; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/utils/shader.ts","import Camera from \"./path-tracer/models/camera\";\nimport {SettingsService} from \"./settings/settings.service\";\nexport class CameraNavigator {\n  private renderCanvas: any;\n\n  // Interaction data\n  private leftMouseDown: boolean\n  private startCameraPosition: GLM.IArray\n  private startMousePosition: any\n\n  zoomFactor: number = 6.0\n  rotationYFactor: number = -1.0;\n\n\n  startYaw: number = 0.0\n  startPitch: number = 0.0\n\n  constructor(private camera: Camera, private settingsService: SettingsService) {\n    this.renderCanvas = $('#renderCanvas')\n    this.setupCameraKeyboardMove()\n    this.setupCameraZoom();\n    this.setupCameraRotation();\n\n  }\n\n  setupCameraKeyboardMove() {\n    let movement = vec3.fromValues(0,0,0)\n    let dir = vec3.create()\n    let right = vec3.create()\n    let rotMat = mat3.create()\n\n    let delta = 0.02 * this.zoomFactor\n    window.onkeydown = e => {\n      switch (e.key) {\n        case 'w':\n          mat3.multiply(rotMat, this.rotationMatrixVector(vec3.fromValues(0,1,0), this.camera.yawRotation), this.rotationMatrixVector(vec3.fromValues(0,0,1), this.camera.pitchRotation))\n          vec3.transformMat3(dir, this.camera.direction, rotMat)\n          vec3.scale(movement, dir, delta)\n          vec3.add(this.camera.position, this.camera.position, movement)\n          this.camera.hasChanged = true\n          break\n        case 's':\n          mat3.multiply(rotMat, this.rotationMatrixVector(vec3.fromValues(0,1,0), this.camera.yawRotation), this.rotationMatrixVector(vec3.fromValues(0,0,1), this.camera.pitchRotation))\n          vec3.transformMat3(dir, this.camera.direction, rotMat)\n          vec3.scale(movement, dir, -delta)\n          vec3.add(this.camera.position, this.camera.position, movement)\n          this.camera.hasChanged = true\n          break\n        case 'a':\n          mat3.multiply(rotMat, this.rotationMatrixVector(vec3.fromValues(0,1,0), this.camera.yawRotation), this.rotationMatrixVector(vec3.fromValues(0,0,1), this.camera.pitchRotation))\n          vec3.transformMat3(right, this.camera.camera_right, rotMat)\n          vec3.scale(movement, right, -delta)\n          vec3.add(this.camera.position, this.camera.position, movement)\n          this.camera.hasChanged = true\n          break\n        case 'd':\n          mat3.multiply(rotMat, this.rotationMatrixVector(vec3.fromValues(0,1,0), this.camera.yawRotation), this.rotationMatrixVector(vec3.fromValues(0,0,1), this.camera.pitchRotation))\n          vec3.transformMat3(right, this.camera.camera_right, rotMat)\n          vec3.scale(movement, right, delta)\n          vec3.add(this.camera.position, this.camera.position, movement)\n          this.camera.hasChanged = true\n          break\n      }\n    }\n  }\n\n  rotationMatrixVector(v: GLM.IArray, angle: number) {\n    let c = Math.cos(angle)\n    let s = Math.sin(angle)\n\n    return mat3.fromValues(\n      c + (1.0 - c) * v[0] * v[0], (1.0 - c) * v[0] * v[1] - s * v[2], (1.0 - c) * v[0] * v[2] + s * v[1],\n      (1.0 - c) * v[0] * v[1] + s * v[2], c + (1.0 - c) * v[1] * v[1], (1.0 - c) * v[1] * v[2] - s * v[0],\n      (1.0 - c) * v[0] * v[2] - s * v[1], (1.0 - c) * v[1] * v[2] + s * v[0], c + (1.0 - c) * v[2] * v[2]\n    )\n  }\n\n\n  setupCameraZoom() {\n    let rotMat = mat3.create()\n    let dir = vec3.fromValues(0,0,0);\n    this.renderCanvas.on('mousewheel', (event) => {\n\n      mat3.multiply(rotMat, this.rotationMatrixVector(vec3.fromValues(0,1,0), this.camera.yawRotation), this.rotationMatrixVector(vec3.fromValues(0,0,1), this.camera.pitchRotation))\n      vec3.transformMat3(dir, this.camera.direction, rotMat)\n      if (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0) {\n        vec3.scale(dir, dir, 0.05 * this.zoomFactor);\n        vec3.add(this.camera.position, this.camera.position, dir);\n      }\n      else {\n        vec3.scale(dir, dir, -0.05 * this.zoomFactor);\n        vec3.add(this.camera.position, this.camera.position, dir);\n      }\n      this.camera.hasChanged = true;\n    });\n  }\n\n  setupCameraRotation() {\n    this.leftMouseDown = false;\n    this.startCameraPosition = vec3.fromValues(0,0,0);\n    this.startMousePosition = {x: 0, y: 0};\n\n    // Mouse move\n    this.renderCanvas.mousemove((event) => {\n      if (this.leftMouseDown) {\n        let rotationX = ((event.clientX / window.innerWidth - 0.5) - this.startMousePosition.x) * 4.0\n        let rotationY = ((event.clientY / window.innerHeight - 0.5) - this.startMousePosition.y) * 4.0 * this.rotationYFactor\n        this.camera.yawRotation = this.startYaw + rotationX\n        this.camera.pitchRotation = this.startPitch + rotationY\n\n        // let yawRot = this.rotationMatrixVector(vec3.fromValues(0,1,0), this.camera.yawRotation)\n        // let pitchRot = this.rotationMatrixVector(vec3.fromValues(0,0,1), this.camera.pitchRotation)\n        // vec3.transformMat3(this.camera.camera_right, this.camera.camera_right, yawRot)\n        // vec3.transformMat3(this.camera.camera_right, this.camera.camera_right, pitchRot)\n        //\n        // vec3.transformMat3(this.camera.camera_up, this.camera.camera_up, yawRot)\n        // vec3.transformMat3(this.camera.camera_up, this.camera.camera_up, pitchRot)\n\n        this.camera.hasChanged = true;\n      }\n    });\n\n    this.renderCanvas.mousedown((event) => {\n      if (event.which === 1) {\n        this.startYaw = this.camera.yawRotation\n        this.startPitch = this.camera.pitchRotation\n\n        this.startMousePosition.x = (event.clientX / window.innerWidth - 0.5)\n        this.startMousePosition.y = (event.clientY / window.innerHeight - 0.5)\n        this.startCameraPosition = vec3.fromValues(this.camera.position[0], this.camera.position[1], this.camera.position[2]);\n        this.leftMouseDown = true;\n      }\n    });\n    this.renderCanvas.mouseup((event) => this.leftMouseDown = false );\n    this.renderCanvas.mouseout((event) => this.leftMouseDown = false );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/camera-navigator.ts","import Ray from \"./ray\";\nimport {SettingsService} from \"../../settings/settings.service\";\nimport {rotationMatrixVector} from \"../../utils/rotation-matrix-vector\";\nimport {ISettingAttribute} from \"../../settings/setting\";\n\nexport default class Camera {\n  private _position: GLM.IArray\n  private _look_at: GLM.IArray\n  private _direction: GLM.IArray\n  private _hasChanged: boolean\n  private _camera_right: GLM.IArray\n  private _camera_up: GLM.IArray\n  private _resolution: GLM.IArray\n  yawRotation: number = 0.0;\n  pitchRotation: number = 0.0;\n\n  constructor(settingsService: SettingsService, position: GLM.IArray, look_at: GLM.IArray) {\n    this._position = position\n    this._look_at = look_at\n    this._direction = vec3.fromValues(0,0,0)\n    this._hasChanged = false\n    settingsService.renderSettings.getAttributeSub('resolution').asObservable().subscribe((attr: ISettingAttribute) => this._resolution = attr.value)\n    this.update()\n  }\n\n  public createRayFromPixel(pixel_position: GLM.IArray) {\n    let width = this._resolution[0]\n    let height = this._resolution[1]\n\n    let i = (pixel_position[0] / width) - 0.5\n    let j = (pixel_position[1] / height) - 0.5\n\n    let camera_right = vec3.fromValues(0,0,0)\n    let camera_up = vec3.fromValues(0,0,0)\n    let right_up = vec3.fromValues(0,0,0)\n    let dir_pos = vec3.fromValues(0,0,0)\n    let image_point = vec3.fromValues(0,0,0)\n\n    let rotMat = mat3.create()\n    let dir = vec3.create()\n    mat3.multiply(rotMat, rotationMatrixVector(vec3.fromValues(0,1,0), this.yawRotation), rotationMatrixVector(vec3.fromValues(0,0,1), this.pitchRotation))\n    vec3.transformMat3(dir, this._direction, rotMat)\n\n    vec3.scale(camera_right, this._camera_right, i * 1.5)\n    vec3.scale(camera_up, this._camera_up, j * 1.5)\n    vec3.add(right_up, camera_right, camera_up)\n    vec3.add(dir_pos, this._position, dir)\n    vec3.add(image_point, right_up, dir_pos)\n\n    let direction = vec3.fromValues(0,0,0)\n    let normalized_direction = vec3.fromValues(0,0,0)\n    let camera_position = vec3.fromValues(0,0,0)\n\n    vec3.subtract(direction, image_point, this._position)\n    vec3.normalize(normalized_direction, direction)\n    vec3.copy(camera_position, this._position)\n\n    return new Ray(camera_position, normalized_direction)\n  }\n\n  public update() {\n    let distance = vec3.distance(this._look_at, this._position)\n\n    vec3.subtract(this._direction, this._look_at, this._position)\n    vec3.normalize(this._direction, this._direction)\n\n    let up_vector = vec3.fromValues(0,1,0)\n    this._camera_right = vec3.fromValues(0,0,0)\n    this._camera_up = vec3.fromValues(0,0,0)\n    vec3.cross(this._camera_right, this._direction, up_vector)\n    vec3.cross(this._camera_up, this._camera_right, this._direction)\n\n    this._position = vec3.fromValues(this._look_at[0], this._look_at[1], this._look_at[2])\n    let negative_direction = vec3.fromValues(0,0,0)\n    vec3.scale(negative_direction, this._direction, -distance)\n    vec3.add(this._position, this._position, negative_direction)\n  }\n\n  get camera_up() { return this._camera_up }\n  get camera_right() { return this._camera_right }\n  get look_at() { return this._look_at }\n  get position() { return this._position }\n  get direction() { return this._direction }\n  get hasChanged() { return this._hasChanged }\n\n  set position(new_position) { this._position = new_position }\n  set hasChanged(changed) { this._hasChanged = changed }\n  set look_at(look_at) { this._look_at = look_at }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/camera.ts","import {MATERIAL_TYPES, default as Material} from \"./material\";\n\nexport class DiffuseMaterial extends Material {\n  private _roughness: number;\n  private _albedo: number;\n\n  constructor(color: GLM.IArray) {\n    super(color, MATERIAL_TYPES.diffuse);\n    this._albedo = 1.8;\n    this._roughness = 1.0;\n  }\n\n  get albedo(): number { return this._albedo; }\n  set albedo(value: number) { this._albedo = value; }\n  get roughness(): number { return this._roughness; }\n  set roughness(value: number) { this._roughness = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/materials/diffuse-material.ts","import Material, {MATERIAL_TYPES} from \"./material\";\n\nexport class EmissionMaterial extends Material {\n  constructor(color: GLM.IArray) {\n    super(color, MATERIAL_TYPES.emission, 5.0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/materials/emission-material.ts","import Material, {MATERIAL_TYPES} from \"./material\";\n\nexport class GlossyMaterial extends Material {\n  private _shininess: number;\n\n  constructor(color: GLM.IArray) {\n    super(color, MATERIAL_TYPES.glossy);\n    this._shininess = 10.0;\n  }\n\n  get shininess(): number { return this._shininess; }\n  set shininess(value: number) { this._shininess = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/materials/glossy-material.ts","import Material from \"./material\";\nimport {MATERIAL_TYPES} from \"./material\";\n\nexport default class TransmissionMaterial extends Material {\n  private _refractionIndex: number;\n\n  constructor(color: GLM.IArray) {\n    super(color, MATERIAL_TYPES.transmission);\n    this._refractionIndex = 1.3;\n  }\n\n  get refractionIndex(): number { return this._refractionIndex; }\n  set refractionIndex(value: number) { this._refractionIndex = value; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/renderer/path-tracer/models/materials/transmission-material.ts"],"sourceRoot":""}